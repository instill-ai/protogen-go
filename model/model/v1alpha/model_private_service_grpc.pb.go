// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: model/model/v1alpha/model_private_service.proto

package modelv1alpha

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ModelPrivateService_ListModelsAdmin_FullMethodName                = "/model.model.v1alpha.ModelPrivateService/ListModelsAdmin"
	ModelPrivateService_LookUpModelAdmin_FullMethodName               = "/model.model.v1alpha.ModelPrivateService/LookUpModelAdmin"
	ModelPrivateService_DeployUserModelAdmin_FullMethodName           = "/model.model.v1alpha.ModelPrivateService/DeployUserModelAdmin"
	ModelPrivateService_DeployOrganizationModelAdmin_FullMethodName   = "/model.model.v1alpha.ModelPrivateService/DeployOrganizationModelAdmin"
	ModelPrivateService_UndeployUserModelAdmin_FullMethodName         = "/model.model.v1alpha.ModelPrivateService/UndeployUserModelAdmin"
	ModelPrivateService_UndeployOrganizationModelAdmin_FullMethodName = "/model.model.v1alpha.ModelPrivateService/UndeployOrganizationModelAdmin"
)

// ModelPrivateServiceClient is the client API for ModelPrivateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ModelPrivateServiceClient interface {
	// ListModelsAdmin method receives a ListModelsAdminRequest message and
	// returns a ListModelsAdminResponse
	ListModelsAdmin(ctx context.Context, in *ListModelsAdminRequest, opts ...grpc.CallOption) (*ListModelsAdminResponse, error)
	// LookUpModelAdmin method receives a LookUpModelAdminRequest message and
	// returns a LookUpModelAdminResponse
	LookUpModelAdmin(ctx context.Context, in *LookUpModelAdminRequest, opts ...grpc.CallOption) (*LookUpModelAdminResponse, error)
	// DeployUserModelAdmin deploy a model to online state
	DeployUserModelAdmin(ctx context.Context, in *DeployUserModelAdminRequest, opts ...grpc.CallOption) (*DeployUserModelAdminResponse, error)
	// DeployOrganizationModelAdmin deploy a model to online state
	DeployOrganizationModelAdmin(ctx context.Context, in *DeployOrganizationModelAdminRequest, opts ...grpc.CallOption) (*DeployOrganizationModelAdminResponse, error)
	// UndeployUserModelAdmin undeploy a model to offline state
	UndeployUserModelAdmin(ctx context.Context, in *UndeployUserModelAdminRequest, opts ...grpc.CallOption) (*UndeployUserModelAdminResponse, error)
	// UndeployOrganizationModelAdmin undeploy a model to offline state
	UndeployOrganizationModelAdmin(ctx context.Context, in *UndeployOrganizationModelAdminRequest, opts ...grpc.CallOption) (*UndeployOrganizationModelAdminResponse, error)
}

type modelPrivateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewModelPrivateServiceClient(cc grpc.ClientConnInterface) ModelPrivateServiceClient {
	return &modelPrivateServiceClient{cc}
}

func (c *modelPrivateServiceClient) ListModelsAdmin(ctx context.Context, in *ListModelsAdminRequest, opts ...grpc.CallOption) (*ListModelsAdminResponse, error) {
	out := new(ListModelsAdminResponse)
	err := c.cc.Invoke(ctx, ModelPrivateService_ListModelsAdmin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPrivateServiceClient) LookUpModelAdmin(ctx context.Context, in *LookUpModelAdminRequest, opts ...grpc.CallOption) (*LookUpModelAdminResponse, error) {
	out := new(LookUpModelAdminResponse)
	err := c.cc.Invoke(ctx, ModelPrivateService_LookUpModelAdmin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPrivateServiceClient) DeployUserModelAdmin(ctx context.Context, in *DeployUserModelAdminRequest, opts ...grpc.CallOption) (*DeployUserModelAdminResponse, error) {
	out := new(DeployUserModelAdminResponse)
	err := c.cc.Invoke(ctx, ModelPrivateService_DeployUserModelAdmin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPrivateServiceClient) DeployOrganizationModelAdmin(ctx context.Context, in *DeployOrganizationModelAdminRequest, opts ...grpc.CallOption) (*DeployOrganizationModelAdminResponse, error) {
	out := new(DeployOrganizationModelAdminResponse)
	err := c.cc.Invoke(ctx, ModelPrivateService_DeployOrganizationModelAdmin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPrivateServiceClient) UndeployUserModelAdmin(ctx context.Context, in *UndeployUserModelAdminRequest, opts ...grpc.CallOption) (*UndeployUserModelAdminResponse, error) {
	out := new(UndeployUserModelAdminResponse)
	err := c.cc.Invoke(ctx, ModelPrivateService_UndeployUserModelAdmin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelPrivateServiceClient) UndeployOrganizationModelAdmin(ctx context.Context, in *UndeployOrganizationModelAdminRequest, opts ...grpc.CallOption) (*UndeployOrganizationModelAdminResponse, error) {
	out := new(UndeployOrganizationModelAdminResponse)
	err := c.cc.Invoke(ctx, ModelPrivateService_UndeployOrganizationModelAdmin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelPrivateServiceServer is the server API for ModelPrivateService service.
// All implementations should embed UnimplementedModelPrivateServiceServer
// for forward compatibility
type ModelPrivateServiceServer interface {
	// ListModelsAdmin method receives a ListModelsAdminRequest message and
	// returns a ListModelsAdminResponse
	ListModelsAdmin(context.Context, *ListModelsAdminRequest) (*ListModelsAdminResponse, error)
	// LookUpModelAdmin method receives a LookUpModelAdminRequest message and
	// returns a LookUpModelAdminResponse
	LookUpModelAdmin(context.Context, *LookUpModelAdminRequest) (*LookUpModelAdminResponse, error)
	// DeployUserModelAdmin deploy a model to online state
	DeployUserModelAdmin(context.Context, *DeployUserModelAdminRequest) (*DeployUserModelAdminResponse, error)
	// DeployOrganizationModelAdmin deploy a model to online state
	DeployOrganizationModelAdmin(context.Context, *DeployOrganizationModelAdminRequest) (*DeployOrganizationModelAdminResponse, error)
	// UndeployUserModelAdmin undeploy a model to offline state
	UndeployUserModelAdmin(context.Context, *UndeployUserModelAdminRequest) (*UndeployUserModelAdminResponse, error)
	// UndeployOrganizationModelAdmin undeploy a model to offline state
	UndeployOrganizationModelAdmin(context.Context, *UndeployOrganizationModelAdminRequest) (*UndeployOrganizationModelAdminResponse, error)
}

// UnimplementedModelPrivateServiceServer should be embedded to have forward compatible implementations.
type UnimplementedModelPrivateServiceServer struct {
}

func (UnimplementedModelPrivateServiceServer) ListModelsAdmin(context.Context, *ListModelsAdminRequest) (*ListModelsAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModelsAdmin not implemented")
}
func (UnimplementedModelPrivateServiceServer) LookUpModelAdmin(context.Context, *LookUpModelAdminRequest) (*LookUpModelAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LookUpModelAdmin not implemented")
}
func (UnimplementedModelPrivateServiceServer) DeployUserModelAdmin(context.Context, *DeployUserModelAdminRequest) (*DeployUserModelAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployUserModelAdmin not implemented")
}
func (UnimplementedModelPrivateServiceServer) DeployOrganizationModelAdmin(context.Context, *DeployOrganizationModelAdminRequest) (*DeployOrganizationModelAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployOrganizationModelAdmin not implemented")
}
func (UnimplementedModelPrivateServiceServer) UndeployUserModelAdmin(context.Context, *UndeployUserModelAdminRequest) (*UndeployUserModelAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndeployUserModelAdmin not implemented")
}
func (UnimplementedModelPrivateServiceServer) UndeployOrganizationModelAdmin(context.Context, *UndeployOrganizationModelAdminRequest) (*UndeployOrganizationModelAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndeployOrganizationModelAdmin not implemented")
}

// UnsafeModelPrivateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ModelPrivateServiceServer will
// result in compilation errors.
type UnsafeModelPrivateServiceServer interface {
	mustEmbedUnimplementedModelPrivateServiceServer()
}

func RegisterModelPrivateServiceServer(s grpc.ServiceRegistrar, srv ModelPrivateServiceServer) {
	s.RegisterService(&ModelPrivateService_ServiceDesc, srv)
}

func _ModelPrivateService_ListModelsAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModelsAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPrivateServiceServer).ListModelsAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ModelPrivateService_ListModelsAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPrivateServiceServer).ListModelsAdmin(ctx, req.(*ListModelsAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPrivateService_LookUpModelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpModelAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPrivateServiceServer).LookUpModelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ModelPrivateService_LookUpModelAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPrivateServiceServer).LookUpModelAdmin(ctx, req.(*LookUpModelAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPrivateService_DeployUserModelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployUserModelAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPrivateServiceServer).DeployUserModelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ModelPrivateService_DeployUserModelAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPrivateServiceServer).DeployUserModelAdmin(ctx, req.(*DeployUserModelAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPrivateService_DeployOrganizationModelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployOrganizationModelAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPrivateServiceServer).DeployOrganizationModelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ModelPrivateService_DeployOrganizationModelAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPrivateServiceServer).DeployOrganizationModelAdmin(ctx, req.(*DeployOrganizationModelAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPrivateService_UndeployUserModelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UndeployUserModelAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPrivateServiceServer).UndeployUserModelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ModelPrivateService_UndeployUserModelAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPrivateServiceServer).UndeployUserModelAdmin(ctx, req.(*UndeployUserModelAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelPrivateService_UndeployOrganizationModelAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UndeployOrganizationModelAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelPrivateServiceServer).UndeployOrganizationModelAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ModelPrivateService_UndeployOrganizationModelAdmin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelPrivateServiceServer).UndeployOrganizationModelAdmin(ctx, req.(*UndeployOrganizationModelAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ModelPrivateService_ServiceDesc is the grpc.ServiceDesc for ModelPrivateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ModelPrivateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "model.model.v1alpha.ModelPrivateService",
	HandlerType: (*ModelPrivateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListModelsAdmin",
			Handler:    _ModelPrivateService_ListModelsAdmin_Handler,
		},
		{
			MethodName: "LookUpModelAdmin",
			Handler:    _ModelPrivateService_LookUpModelAdmin_Handler,
		},
		{
			MethodName: "DeployUserModelAdmin",
			Handler:    _ModelPrivateService_DeployUserModelAdmin_Handler,
		},
		{
			MethodName: "DeployOrganizationModelAdmin",
			Handler:    _ModelPrivateService_DeployOrganizationModelAdmin_Handler,
		},
		{
			MethodName: "UndeployUserModelAdmin",
			Handler:    _ModelPrivateService_UndeployUserModelAdmin_Handler,
		},
		{
			MethodName: "UndeployOrganizationModelAdmin",
			Handler:    _ModelPrivateService_UndeployOrganizationModelAdmin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/model/v1alpha/model_private_service.proto",
}
