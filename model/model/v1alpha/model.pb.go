// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: model/model/v1alpha/model.proto

package modelv1alpha

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1beta "github.com/instill-ai/protogen-go/common/healthcheck/v1beta"
	v1alpha1 "github.com/instill-ai/protogen-go/common/run/v1alpha"
	v1alpha "github.com/instill-ai/protogen-go/common/task/v1alpha"
	v1beta1 "github.com/instill-ai/protogen-go/core/mgmt/v1beta"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// State describes the state of a model. See [Deploy
// Models](https://www.instill.tech/docs/latest/model/deploy) for more
// information.
type State int32

const (
	// Unspecified. This state can occur while a model is under operation.
	State_STATE_UNSPECIFIED State = 0
	// Offline is the state when the model instance number is 0.
	State_STATE_OFFLINE State = 1
	// Active is the state when a model is processing requests.
	State_STATE_ACTIVE State = 3
	// Idle is the state when a model is alive but not processing requests.
	State_STATE_IDLE State = 4
	// Error is the state when the model is undeployable.
	State_STATE_ERROR State = 5
	// Starting is the state when the system is provisioning the necessary
	// resources for the model
	State_STATE_STARTING State = 6
	// Scaling Up is the transition state when the system is provisioning compute resource for this model instance.
	State_STATE_SCALING_UP State = 7
	// Scaling is the transition state when the system is releasing compute resource for this model instance.
	State_STATE_SCALING_DOWN State = 8
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_OFFLINE",
		3: "STATE_ACTIVE",
		4: "STATE_IDLE",
		5: "STATE_ERROR",
		6: "STATE_STARTING",
		7: "STATE_SCALING_UP",
		8: "STATE_SCALING_DOWN",
	}
	State_value = map[string]int32{
		"STATE_UNSPECIFIED":  0,
		"STATE_OFFLINE":      1,
		"STATE_ACTIVE":       3,
		"STATE_IDLE":         4,
		"STATE_ERROR":        5,
		"STATE_STARTING":     6,
		"STATE_SCALING_UP":   7,
		"STATE_SCALING_DOWN": 8,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_model_model_v1alpha_model_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_model_model_v1alpha_model_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{0}
}

// Visibility defines who can access the model.
type Model_Visibility int32

const (
	// Unspecified, equivalent to PRIVATE.
	Model_VISIBILITY_UNSPECIFIED Model_Visibility = 0
	// Only the owner can see the model.
	Model_VISIBILITY_PRIVATE Model_Visibility = 1
	// Other users can see the model.
	Model_VISIBILITY_PUBLIC Model_Visibility = 2
)

// Enum value maps for Model_Visibility.
var (
	Model_Visibility_name = map[int32]string{
		0: "VISIBILITY_UNSPECIFIED",
		1: "VISIBILITY_PRIVATE",
		2: "VISIBILITY_PUBLIC",
	}
	Model_Visibility_value = map[string]int32{
		"VISIBILITY_UNSPECIFIED": 0,
		"VISIBILITY_PRIVATE":     1,
		"VISIBILITY_PUBLIC":      2,
	}
)

func (x Model_Visibility) Enum() *Model_Visibility {
	p := new(Model_Visibility)
	*p = x
	return p
}

func (x Model_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Model_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_model_model_v1alpha_model_proto_enumTypes[1].Descriptor()
}

func (Model_Visibility) Type() protoreflect.EnumType {
	return &file_model_model_v1alpha_model_proto_enumTypes[1]
}

func (x Model_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Model_Visibility.Descriptor instead.
func (Model_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{6, 0}
}

// LivenessRequest represents a request to check a service liveness status
type LivenessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckRequest message
	HealthCheckRequest *v1beta.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
}

func (x *LivenessRequest) Reset() {
	*x = LivenessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessRequest) ProtoMessage() {}

func (x *LivenessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessRequest.ProtoReflect.Descriptor instead.
func (*LivenessRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{0}
}

func (x *LivenessRequest) GetHealthCheckRequest() *v1beta.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// LivenessResponse represents a response for a service liveness status
type LivenessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckResponse message
	HealthCheckResponse *v1beta.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
}

func (x *LivenessResponse) Reset() {
	*x = LivenessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessResponse) ProtoMessage() {}

func (x *LivenessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessResponse.ProtoReflect.Descriptor instead.
func (*LivenessResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{1}
}

func (x *LivenessResponse) GetHealthCheckResponse() *v1beta.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// ReadinessRequest represents a request to check a service readiness status
type ReadinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckRequest message
	HealthCheckRequest *v1beta.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
}

func (x *ReadinessRequest) Reset() {
	*x = ReadinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessRequest) ProtoMessage() {}

func (x *ReadinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessRequest.ProtoReflect.Descriptor instead.
func (*ReadinessRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{2}
}

func (x *ReadinessRequest) GetHealthCheckRequest() *v1beta.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// ReadinessResponse represents a response for a service readiness status
type ReadinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckResponse message
	HealthCheckResponse *v1beta.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
}

func (x *ReadinessResponse) Reset() {
	*x = ReadinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessResponse) ProtoMessage() {}

func (x *ReadinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessResponse.ProtoReflect.Descriptor instead.
func (*ReadinessResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{3}
}

func (x *ReadinessResponse) GetHealthCheckResponse() *v1beta.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// Region describes the supported cloud provider and regions, with
// their supported GPU respectively.
type Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Concate name of provider and region
	RegionName string `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	// Hardware describes the available hardware types in this region
	Hardware []string `protobuf:"bytes,2,rep,name=hardware,proto3" json:"hardware,omitempty"`
}

func (x *Region) Reset() {
	*x = Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Region) ProtoMessage() {}

func (x *Region) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Region.ProtoReflect.Descriptor instead.
func (*Region) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{4}
}

func (x *Region) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *Region) GetHardware() []string {
	if x != nil {
		return x.Hardware
	}
	return nil
}

// ModelVersion contains information about the version of a model.
type ModelVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The parent resource, i.e., the user that created the models.
	// - Format: `users/{user.id}`.
	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	// The name of the Version.
	// - Format: `users/{user.id}/models/{model.id}/versions/{version.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The model version identifier, which is equal to image tag.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Unique identifier, computed from the manifest the Version refers to.
	Digest string `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	// Current state of this model version.
	State State `protobuf:"varint,4,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Version update time, i.e. timestamp of the last push.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *ModelVersion) Reset() {
	*x = ModelVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelVersion) ProtoMessage() {}

func (x *ModelVersion) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelVersion.ProtoReflect.Descriptor instead.
func (*ModelVersion) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{5}
}

func (x *ModelVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ModelVersion) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ModelVersion) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *ModelVersion) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Model represents an AI model, i.e. a program that performs tasks as decision
// making or or pattern recognition based on its training data
type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by owner and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Model UUID.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Model resource ID (used in `name` as the last segment). This conforms to
	// RFC-1034, which restricts to letters, numbers, and hyphen, with the first
	// character a letter, the last a letter or a number, and a 63 character
	// maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Model description.
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// The model definition that has been used to import the model.
	ModelDefinition string `protobuf:"bytes,5,opt,name=model_definition,json=modelDefinition,proto3" json:"model_definition,omitempty"`
	// Model configuration. This field is validated against the model
	// specification in the model definition (i.e. the `model_spec` field in the
	// model definition).
	Configuration *structpb.Struct `protobuf:"bytes,6,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// Model task.
	Task v1alpha.Task `protobuf:"varint,7,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model visibility.
	Visibility Model_Visibility `protobuf:"varint,9,opt,name=visibility,proto3,enum=model.model.v1alpha.Model_Visibility" json:"visibility,omitempty"`
	// Model creation time.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Model update time.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Model deletion time.
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	// Resource name of the owner.
	OwnerName string `protobuf:"bytes,15,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	// Model owner.
	Owner *v1beta1.Owner `protobuf:"bytes,17,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	// Region of choice for the particular provider to host the model.
	Region string `protobuf:"bytes,18,opt,name=region,proto3" json:"region,omitempty"`
	// Hardware of choice to serve the model.
	Hardware string `protobuf:"bytes,19,opt,name=hardware,proto3" json:"hardware,omitempty"`
	// README holds the model documentation.
	Readme *string `protobuf:"bytes,20,opt,name=readme,proto3,oneof" json:"readme,omitempty"`
	// A link to the source code of the model (e.g. to a GitHub repository).
	SourceUrl *string `protobuf:"bytes,21,opt,name=source_url,json=sourceUrl,proto3,oneof" json:"source_url,omitempty"`
	// A link to any extra information.
	DocumentationUrl *string `protobuf:"bytes,22,opt,name=documentation_url,json=documentationUrl,proto3,oneof" json:"documentation_url,omitempty"`
	// License under which the model is distributed.
	License *string `protobuf:"bytes,23,opt,name=license,proto3,oneof" json:"license,omitempty"`
	// Sample input for this model
	SampleInput *TaskInput `protobuf:"bytes,24,opt,name=sample_input,json=sampleInput,proto3" json:"sample_input,omitempty"`
	// Sample output for this model
	SampleOutput *TaskOutput `protobuf:"bytes,25,opt,name=sample_output,json=sampleOutput,proto3" json:"sample_output,omitempty"`
	// Model profile image in base64 format.
	ProfileImage *string `protobuf:"bytes,26,opt,name=profile_image,json=profileImage,proto3,oneof" json:"profile_image,omitempty"`
	// Permission defines how a pipeline can be used.
	Permission *Permission `protobuf:"bytes,27,opt,name=permission,proto3" json:"permission,omitempty"`
	// Input schema for the model
	InputSchema *structpb.Struct `protobuf:"bytes,28,opt,name=input_schema,json=inputSchema,proto3" json:"input_schema,omitempty"`
	// Output schema for the model
	OutputSchema *structpb.Struct `protobuf:"bytes,29,opt,name=output_schema,json=outputSchema,proto3" json:"output_schema,omitempty"`
	// Tags.
	Tags []string `protobuf:"bytes,30,rep,name=tags,proto3" json:"tags,omitempty"`
	// Version names.
	Versions []string `protobuf:"bytes,31,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{6}
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Model) GetModelDefinition() string {
	if x != nil {
		return x.ModelDefinition
	}
	return ""
}

func (x *Model) GetConfiguration() *structpb.Struct {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Model) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *Model) GetVisibility() Model_Visibility {
	if x != nil {
		return x.Visibility
	}
	return Model_VISIBILITY_UNSPECIFIED
}

func (x *Model) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Model) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Model) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *Model) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Model) GetOwner() *v1beta1.Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Model) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Model) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

func (x *Model) GetReadme() string {
	if x != nil && x.Readme != nil {
		return *x.Readme
	}
	return ""
}

func (x *Model) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *Model) GetDocumentationUrl() string {
	if x != nil && x.DocumentationUrl != nil {
		return *x.DocumentationUrl
	}
	return ""
}

func (x *Model) GetLicense() string {
	if x != nil && x.License != nil {
		return *x.License
	}
	return ""
}

func (x *Model) GetSampleInput() *TaskInput {
	if x != nil {
		return x.SampleInput
	}
	return nil
}

func (x *Model) GetSampleOutput() *TaskOutput {
	if x != nil {
		return x.SampleOutput
	}
	return nil
}

func (x *Model) GetProfileImage() string {
	if x != nil && x.ProfileImage != nil {
		return *x.ProfileImage
	}
	return ""
}

func (x *Model) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *Model) GetInputSchema() *structpb.Struct {
	if x != nil {
		return x.InputSchema
	}
	return nil
}

func (x *Model) GetOutputSchema() *structpb.Struct {
	if x != nil {
		return x.OutputSchema
	}
	return nil
}

func (x *Model) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Model) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

// ListModelsRequest represents a request to list  models.
type ListModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of models to return. If this parameter is unspecified,
	// at most 10 models will be returned. The cap value for this parameter is
	// 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token.
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
	// Include soft-deleted models in the result.
	ShowDeleted *bool `protobuf:"varint,4,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,5,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Limit results to pipelines with the specified visibility.
	Visibility *Model_Visibility `protobuf:"varint,6,opt,name=visibility,proto3,enum=model.model.v1alpha.Model_Visibility,oneof" json:"visibility,omitempty"`
	// Order by field, with options for ordering by `id`, `create_time` or `update_time`.
	// Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
	OrderBy *string `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
}

func (x *ListModelsRequest) Reset() {
	*x = ListModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsRequest) ProtoMessage() {}

func (x *ListModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsRequest.ProtoReflect.Descriptor instead.
func (*ListModelsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{7}
}

func (x *ListModelsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListModelsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListModelsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListModelsRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

func (x *ListModelsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListModelsRequest) GetVisibility() Model_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Model_VISIBILITY_UNSPECIFIED
}

func (x *ListModelsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

// ListModelsResponse contains a list of models.
type ListModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of models.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListModelsResponse) Reset() {
	*x = ListModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsResponse) ProtoMessage() {}

func (x *ListModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsResponse.ProtoReflect.Descriptor instead.
func (*ListModelsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{8}
}

func (x *ListModelsResponse) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *ListModelsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListModelsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// LookUpModelRequest represents a request to query a model by its UID.
type LookUpModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The permalink of the model, which allows its access by UID.
	// - Format: `models/{model.uid}`.
	Permalink string `protobuf:"bytes,1,opt,name=permalink,proto3" json:"permalink,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *LookUpModelRequest) Reset() {
	*x = LookUpModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpModelRequest) ProtoMessage() {}

func (x *LookUpModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpModelRequest.ProtoReflect.Descriptor instead.
func (*LookUpModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{9}
}

func (x *LookUpModelRequest) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

func (x *LookUpModelRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// LookUpModelResponse contains the requested model.
type LookUpModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested model.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *LookUpModelResponse) Reset() {
	*x = LookUpModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpModelResponse) ProtoMessage() {}

func (x *LookUpModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpModelResponse.ProtoReflect.Descriptor instead.
func (*LookUpModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{10}
}

func (x *LookUpModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// ListNamespaceModelsRequest represents a request to list namepsace models.
type ListNamespaceModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The maximum number of models to return. If this parameter is unspecified,
	// at most 10 models will be returned. The cap value for this parameter is
	// 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token.
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,4,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
	// Include soft-deleted models in the result.
	ShowDeleted *bool `protobuf:"varint,5,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,6,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Limit results to pipelines with the specified visibility.
	Visibility *Model_Visibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=model.model.v1alpha.Model_Visibility,oneof" json:"visibility,omitempty"`
	// Order by field, with options for ordering by `id`, `create_time` or `update_time`.
	// Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
	OrderBy *string `protobuf:"bytes,8,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
}

func (x *ListNamespaceModelsRequest) Reset() {
	*x = ListNamespaceModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceModelsRequest) ProtoMessage() {}

func (x *ListNamespaceModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceModelsRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceModelsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{11}
}

func (x *ListNamespaceModelsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListNamespaceModelsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListNamespaceModelsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListNamespaceModelsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListNamespaceModelsRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

func (x *ListNamespaceModelsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListNamespaceModelsRequest) GetVisibility() Model_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Model_VISIBILITY_UNSPECIFIED
}

func (x *ListNamespaceModelsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

// ListNamespaceModelsResponse contains a list of models.
type ListNamespaceModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of models.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListNamespaceModelsResponse) Reset() {
	*x = ListNamespaceModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceModelsResponse) ProtoMessage() {}

func (x *ListNamespaceModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceModelsResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceModelsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{12}
}

func (x *ListNamespaceModelsResponse) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *ListNamespaceModelsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListNamespaceModelsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// CreateNamespaceModelRequest represents a request from a namespace to create a model.
type CreateNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The properties of the model to be created.
	Model *Model `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *CreateNamespaceModelRequest) Reset() {
	*x = CreateNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceModelRequest) ProtoMessage() {}

func (x *CreateNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{13}
}

func (x *CreateNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateNamespaceModelRequest) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// CreateNamespaceModelResponse contains the created model.
type CreateNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *CreateNamespaceModelResponse) Reset() {
	*x = CreateNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceModelResponse) ProtoMessage() {}

func (x *CreateNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{14}
}

func (x *CreateNamespaceModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// GetNamespaceModelRequest represents a request to fetch the details of a model
// owned by a namespace.
type GetNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetNamespaceModelRequest) Reset() {
	*x = GetNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceModelRequest) ProtoMessage() {}

func (x *GetNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{15}
}

func (x *GetNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *GetNamespaceModelRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetNamespaceModelResponse contains the requested model.
type GetNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *GetNamespaceModelResponse) Reset() {
	*x = GetNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceModelResponse) ProtoMessage() {}

func (x *GetNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{16}
}

func (x *GetNamespaceModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// UpdateNamespaceModelRequest represents a request to update a model owned by a
// namespace.
type UpdateNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// The model to update
	Model *Model `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	// The update mask specifies the subset of fields that should be modified.
	//
	// For more information about this field, see
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateNamespaceModelRequest) Reset() {
	*x = UpdateNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceModelRequest) ProtoMessage() {}

func (x *UpdateNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *UpdateNamespaceModelRequest) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdateNamespaceModelRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateNamespaceModelResponse contains the updated model.
type UpdateNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *UpdateNamespaceModelResponse) Reset() {
	*x = UpdateNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceModelResponse) ProtoMessage() {}

func (x *UpdateNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateNamespaceModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// DeleteNamespaceModelRequest represents a request to delete a model owned by a
// namespace.
type DeleteNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *DeleteNamespaceModelRequest) Reset() {
	*x = DeleteNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceModelRequest) ProtoMessage() {}

func (x *DeleteNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

// DeleteNamespaceModelResponse is an empty response.
type DeleteNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNamespaceModelResponse) Reset() {
	*x = DeleteNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceModelResponse) ProtoMessage() {}

func (x *DeleteNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{20}
}

// RenameNamespaceModelRequest represents a request to rename a model
type RenameNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// The new resource ID. This will transform the resource name into
	// `namespaces/{namespace.id}/models/{new_model_id}`.
	NewModelId string `protobuf:"bytes,3,opt,name=new_model_id,json=newModelId,proto3" json:"new_model_id,omitempty"`
}

func (x *RenameNamespaceModelRequest) Reset() {
	*x = RenameNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameNamespaceModelRequest) ProtoMessage() {}

func (x *RenameNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*RenameNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{21}
}

func (x *RenameNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RenameNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *RenameNamespaceModelRequest) GetNewModelId() string {
	if x != nil {
		return x.NewModelId
	}
	return ""
}

// RenameNamespaceModelResponse contains a renamed model.
type RenameNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The renamed model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RenameNamespaceModelResponse) Reset() {
	*x = RenameNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameNamespaceModelResponse) ProtoMessage() {}

func (x *RenameNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*RenameNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{22}
}

func (x *RenameNamespaceModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// WatchNamespaceModelRequest represents a request to fetch current state of a model
type WatchNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WatchNamespaceModelRequest) Reset() {
	*x = WatchNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNamespaceModelRequest) ProtoMessage() {}

func (x *WatchNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*WatchNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{23}
}

func (x *WatchNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *WatchNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *WatchNamespaceModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// WatchNamespaceModelResponse contains the state of a model.
type WatchNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Detail description of the state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WatchNamespaceModelResponse) Reset() {
	*x = WatchNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNamespaceModelResponse) ProtoMessage() {}

func (x *WatchNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*WatchNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{24}
}

func (x *WatchNamespaceModelResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *WatchNamespaceModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// WatchNamespaceNamespaceLatestModelRequest represents a request to fetch current state of
// the latest model version.
type WatchNamespaceLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *WatchNamespaceLatestModelRequest) Reset() {
	*x = WatchNamespaceLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNamespaceLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNamespaceLatestModelRequest) ProtoMessage() {}

func (x *WatchNamespaceLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNamespaceLatestModelRequest.ProtoReflect.Descriptor instead.
func (*WatchNamespaceLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{25}
}

func (x *WatchNamespaceLatestModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *WatchNamespaceLatestModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

// WatchNamespaceLatestModelResponse contains the state of the latest model version.
type WatchNamespaceLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Detail description of the state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WatchNamespaceLatestModelResponse) Reset() {
	*x = WatchNamespaceLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNamespaceLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNamespaceLatestModelResponse) ProtoMessage() {}

func (x *WatchNamespaceLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNamespaceLatestModelResponse.ProtoReflect.Descriptor instead.
func (*WatchNamespaceLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{26}
}

func (x *WatchNamespaceLatestModelResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *WatchNamespaceLatestModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListNamespaceModelVersionsRequest represents a request to list all the versions
// of a model namespace of a namespace.
type ListNamespaceModelVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// The maximum number of versions to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,4,opt,name=page,proto3,oneof" json:"page,omitempty"`
}

func (x *ListNamespaceModelVersionsRequest) Reset() {
	*x = ListNamespaceModelVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceModelVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceModelVersionsRequest) ProtoMessage() {}

func (x *ListNamespaceModelVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceModelVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceModelVersionsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{27}
}

func (x *ListNamespaceModelVersionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListNamespaceModelVersionsRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *ListNamespaceModelVersionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListNamespaceModelVersionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

// ListNamespaceModelVersionsResponse contains a list of models.
type ListNamespaceModelVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Versions []*ModelVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	// Total number of versions.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListNamespaceModelVersionsResponse) Reset() {
	*x = ListNamespaceModelVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceModelVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceModelVersionsResponse) ProtoMessage() {}

func (x *ListNamespaceModelVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceModelVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceModelVersionsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{28}
}

func (x *ListNamespaceModelVersionsResponse) GetVersions() []*ModelVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ListNamespaceModelVersionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListNamespaceModelVersionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNamespaceModelVersionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// DeleteNamespaceModelVersionRequest represents a request to delete a model version
//
//	owned by a namespace.
type DeleteNamespaceModelVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteNamespaceModelVersionRequest) Reset() {
	*x = DeleteNamespaceModelVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceModelVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceModelVersionRequest) ProtoMessage() {}

func (x *DeleteNamespaceModelVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceModelVersionRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceModelVersionRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteNamespaceModelVersionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteNamespaceModelVersionRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *DeleteNamespaceModelVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// DeleteNamespaceModelVersionResponse is an empty response.
type DeleteNamespaceModelVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNamespaceModelVersionResponse) Reset() {
	*x = DeleteNamespaceModelVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceModelVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceModelVersionResponse) ProtoMessage() {}

func (x *DeleteNamespaceModelVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceModelVersionResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceModelVersionResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{30}
}

// TriggerNamespaceModelRequest represents a request to trigger a model inference.
type TriggerNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,3,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerNamespaceModelRequest) Reset() {
	*x = TriggerNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceModelRequest) ProtoMessage() {}

func (x *TriggerNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{31}
}

func (x *TriggerNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TriggerNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TriggerNamespaceModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *TriggerNamespaceModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerNamespaceModelResponse contains the model inference results.
type TriggerNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerNamespaceModelResponse) Reset() {
	*x = TriggerNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceModelResponse) ProtoMessage() {}

func (x *TriggerNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{32}
}

func (x *TriggerNamespaceModelResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerNamespaceModelResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// TriggerAsyncNamespaceModelRequest represents a request to trigger a model inference
// asynchronously.
type TriggerAsyncNamespaceModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,3,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerAsyncNamespaceModelRequest) Reset() {
	*x = TriggerAsyncNamespaceModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncNamespaceModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncNamespaceModelRequest) ProtoMessage() {}

func (x *TriggerAsyncNamespaceModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncNamespaceModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerAsyncNamespaceModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{33}
}

func (x *TriggerAsyncNamespaceModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TriggerAsyncNamespaceModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TriggerAsyncNamespaceModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *TriggerAsyncNamespaceModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerAsyncNamespaceModelResponse contains the information to access the
// status of an asynchronous model inference.
type TriggerAsyncNamespaceModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Long-running operation information.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TriggerAsyncNamespaceModelResponse) Reset() {
	*x = TriggerAsyncNamespaceModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncNamespaceModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncNamespaceModelResponse) ProtoMessage() {}

func (x *TriggerAsyncNamespaceModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncNamespaceModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerAsyncNamespaceModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{34}
}

func (x *TriggerAsyncNamespaceModelResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// TriggerNamespaceLatestModelRequest represents a request to trigger a model inference
// with the latest uploaded version.
type TriggerNamespaceLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,3,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
}

func (x *TriggerNamespaceLatestModelRequest) Reset() {
	*x = TriggerNamespaceLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceLatestModelRequest) ProtoMessage() {}

func (x *TriggerNamespaceLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceLatestModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{35}
}

func (x *TriggerNamespaceLatestModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TriggerNamespaceLatestModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TriggerNamespaceLatestModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

// TriggerNamespaceLatestModelResponse contains the model inference results.
type TriggerNamespaceLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerNamespaceLatestModelResponse) Reset() {
	*x = TriggerNamespaceLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceLatestModelResponse) ProtoMessage() {}

func (x *TriggerNamespaceLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceLatestModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{36}
}

func (x *TriggerNamespaceLatestModelResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerNamespaceLatestModelResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// TriggerAsyncNamespaceLatestModelRequest represents a request to trigger a model inference
// asynchronously with the latest uploaded version.
type TriggerAsyncNamespaceLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,3,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
}

func (x *TriggerAsyncNamespaceLatestModelRequest) Reset() {
	*x = TriggerAsyncNamespaceLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncNamespaceLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncNamespaceLatestModelRequest) ProtoMessage() {}

func (x *TriggerAsyncNamespaceLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncNamespaceLatestModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerAsyncNamespaceLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{37}
}

func (x *TriggerAsyncNamespaceLatestModelRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TriggerAsyncNamespaceLatestModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TriggerAsyncNamespaceLatestModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

// TriggerAsyncNamespaceLatestModelResponse contains the information to access the
// status of an asynchronous model inference.
type TriggerAsyncNamespaceLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Long-running operation information.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TriggerAsyncNamespaceLatestModelResponse) Reset() {
	*x = TriggerAsyncNamespaceLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncNamespaceLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncNamespaceLatestModelResponse) ProtoMessage() {}

func (x *TriggerAsyncNamespaceLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncNamespaceLatestModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerAsyncNamespaceLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{38}
}

func (x *TriggerAsyncNamespaceLatestModelResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// TriggerNamespaceModelBinaryFileUploadRequest represents a request trigger a model
// inference by uploading a binary file as the input.
type TriggerNamespaceModelBinaryFileUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Inference input as a binary file.
	TaskInput *TaskInputStream `protobuf:"bytes,3,opt,name=task_input,json=taskInput,proto3" json:"task_input,omitempty"`
	// Model version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) Reset() {
	*x = TriggerNamespaceModelBinaryFileUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceModelBinaryFileUploadRequest) ProtoMessage() {}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceModelBinaryFileUploadRequest.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceModelBinaryFileUploadRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{39}
}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) GetTaskInput() *TaskInputStream {
	if x != nil {
		return x.TaskInput
	}
	return nil
}

func (x *TriggerNamespaceModelBinaryFileUploadRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerNamespaceModelBinaryFileUploadResponse contains the model inference results.
type TriggerNamespaceModelBinaryFileUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerNamespaceModelBinaryFileUploadResponse) Reset() {
	*x = TriggerNamespaceModelBinaryFileUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceModelBinaryFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceModelBinaryFileUploadResponse) ProtoMessage() {}

func (x *TriggerNamespaceModelBinaryFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceModelBinaryFileUploadResponse.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceModelBinaryFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{40}
}

func (x *TriggerNamespaceModelBinaryFileUploadResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerNamespaceModelBinaryFileUploadResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

func (x *TriggerNamespaceModelBinaryFileUploadResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerNamespaceModelLatestBinaryFileUploadRequest represents a request trigger a model
// inference by uploading a binary file as the input.
type TriggerNamespaceLatestModelBinaryFileUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Inference input as a binary file.
	TaskInput *TaskInputStream `protobuf:"bytes,3,opt,name=task_input,json=taskInput,proto3" json:"task_input,omitempty"`
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadRequest) Reset() {
	*x = TriggerNamespaceLatestModelBinaryFileUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceLatestModelBinaryFileUploadRequest) ProtoMessage() {}

func (x *TriggerNamespaceLatestModelBinaryFileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceLatestModelBinaryFileUploadRequest.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceLatestModelBinaryFileUploadRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{41}
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadRequest) GetTaskInput() *TaskInputStream {
	if x != nil {
		return x.TaskInput
	}
	return nil
}

// TriggerNamespaceLatestModelBinaryFileUploadResponse contains the model inference results.
type TriggerNamespaceLatestModelBinaryFileUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadResponse) Reset() {
	*x = TriggerNamespaceLatestModelBinaryFileUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerNamespaceLatestModelBinaryFileUploadResponse) ProtoMessage() {}

func (x *TriggerNamespaceLatestModelBinaryFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerNamespaceLatestModelBinaryFileUploadResponse.ProtoReflect.Descriptor instead.
func (*TriggerNamespaceLatestModelBinaryFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{42}
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerNamespaceLatestModelBinaryFileUploadResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// GetNamespaceLatestModelOperationRequest represents a request to fetch the latest long-running
// operation performed on a model for a namespace.
type GetNamespaceLatestModelOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// View allows clients to specify the desired operation result in the response.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetNamespaceLatestModelOperationRequest) Reset() {
	*x = GetNamespaceLatestModelOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceLatestModelOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceLatestModelOperationRequest) ProtoMessage() {}

func (x *GetNamespaceLatestModelOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceLatestModelOperationRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceLatestModelOperationRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{43}
}

func (x *GetNamespaceLatestModelOperationRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetNamespaceLatestModelOperationRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *GetNamespaceLatestModelOperationRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetNamespaceLatestModelOperationRequest represents a request to query a long-running
// operation.
type GetNamespaceLatestModelOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The long-running operation.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetNamespaceLatestModelOperationResponse) Reset() {
	*x = GetNamespaceLatestModelOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceLatestModelOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceLatestModelOperationResponse) ProtoMessage() {}

func (x *GetNamespaceLatestModelOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceLatestModelOperationResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceLatestModelOperationResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{44}
}

func (x *GetNamespaceLatestModelOperationResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// DeployNamespaceModelAdminRequest represents a request to deploy a model to online state
type DeployNamespaceModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Model image digest
	Digest string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *DeployNamespaceModelAdminRequest) Reset() {
	*x = DeployNamespaceModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployNamespaceModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployNamespaceModelAdminRequest) ProtoMessage() {}

func (x *DeployNamespaceModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployNamespaceModelAdminRequest.ProtoReflect.Descriptor instead.
func (*DeployNamespaceModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{45}
}

func (x *DeployNamespaceModelAdminRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeployNamespaceModelAdminRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *DeployNamespaceModelAdminRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeployNamespaceModelAdminRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// DeployNamespaceModelAdminResponse represents a response for a deployed model
type DeployNamespaceModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployNamespaceModelAdminResponse) Reset() {
	*x = DeployNamespaceModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployNamespaceModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployNamespaceModelAdminResponse) ProtoMessage() {}

func (x *DeployNamespaceModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployNamespaceModelAdminResponse.ProtoReflect.Descriptor instead.
func (*DeployNamespaceModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{46}
}

// UndeployNamespaceModelAdminRequest represents a request to undeploy a model to offline
// state
type UndeployNamespaceModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID
	ModelId string `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Model image digest
	Digest string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *UndeployNamespaceModelAdminRequest) Reset() {
	*x = UndeployNamespaceModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployNamespaceModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployNamespaceModelAdminRequest) ProtoMessage() {}

func (x *UndeployNamespaceModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployNamespaceModelAdminRequest.ProtoReflect.Descriptor instead.
func (*UndeployNamespaceModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{47}
}

func (x *UndeployNamespaceModelAdminRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UndeployNamespaceModelAdminRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *UndeployNamespaceModelAdminRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UndeployNamespaceModelAdminRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// UndeployNamespaceModelAdminResponse represents a response for a undeployed model
type UndeployNamespaceModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UndeployNamespaceModelAdminResponse) Reset() {
	*x = UndeployNamespaceModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployNamespaceModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployNamespaceModelAdminResponse) ProtoMessage() {}

func (x *UndeployNamespaceModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployNamespaceModelAdminResponse.ProtoReflect.Descriptor instead.
func (*UndeployNamespaceModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{48}
}

// CreateUserModelRequest represents a request from a user to create a model.
type CreateUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The properties of the model to be created.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// The parent resource, i.e., the user that creates the model.
	// Format: `users/{user.id}`.
	Parent string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *CreateUserModelRequest) Reset() {
	*x = CreateUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserModelRequest) ProtoMessage() {}

func (x *CreateUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserModelRequest.ProtoReflect.Descriptor instead.
func (*CreateUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{49}
}

func (x *CreateUserModelRequest) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *CreateUserModelRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// CreateUserModelResponse contains the created model.
type CreateUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *CreateUserModelResponse) Reset() {
	*x = CreateUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserModelResponse) ProtoMessage() {}

func (x *CreateUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserModelResponse.ProtoReflect.Descriptor instead.
func (*CreateUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{50}
}

func (x *CreateUserModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// ListUserModelsRequest represents a request to list the models of a user.
type ListUserModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of models to return. If this parameter is unspecified,
	// at most 10 models will be returned. The cap value for this parameter is
	// 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token.
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
	// The parent resource, i.e., the user that created the models.
	// - Format: `users/{user.id}`.
	Parent string `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	// Include soft-deleted models in the result.
	ShowDeleted *bool `protobuf:"varint,5,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,6,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Limit results to pipelines with the specified visibility.
	Visibility *Model_Visibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=model.model.v1alpha.Model_Visibility,oneof" json:"visibility,omitempty"`
	// Order by field, with options for ordering by `id`, `create_time` or `update_time`.
	// Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
	OrderBy *string `protobuf:"bytes,8,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
}

func (x *ListUserModelsRequest) Reset() {
	*x = ListUserModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserModelsRequest) ProtoMessage() {}

func (x *ListUserModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserModelsRequest.ProtoReflect.Descriptor instead.
func (*ListUserModelsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{51}
}

func (x *ListUserModelsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListUserModelsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListUserModelsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListUserModelsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListUserModelsRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

func (x *ListUserModelsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListUserModelsRequest) GetVisibility() Model_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Model_VISIBILITY_UNSPECIFIED
}

func (x *ListUserModelsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

// ListUserModelsResponse contains a list of models.
type ListUserModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of models.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListUserModelsResponse) Reset() {
	*x = ListUserModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserModelsResponse) ProtoMessage() {}

func (x *ListUserModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserModelsResponse.ProtoReflect.Descriptor instead.
func (*ListUserModelsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{52}
}

func (x *ListUserModelsResponse) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *ListUserModelsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListUserModelsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetUserModelRequest represents a request to fetch the details of a model
// owned by a user.
type GetUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetUserModelRequest) Reset() {
	*x = GetUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserModelRequest) ProtoMessage() {}

func (x *GetUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserModelRequest.ProtoReflect.Descriptor instead.
func (*GetUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{53}
}

func (x *GetUserModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserModelRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetUserModelResponse contains the requested model.
type GetUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *GetUserModelResponse) Reset() {
	*x = GetUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserModelResponse) ProtoMessage() {}

func (x *GetUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserModelResponse.ProtoReflect.Descriptor instead.
func (*GetUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{54}
}

func (x *GetUserModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// UpdateUserModelRequest represents a request to update a model owned by a
// user.
type UpdateUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The model to update
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// The update mask specifies the subset of fields that should be modified.
	//
	// For more information about this field, see
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateUserModelRequest) Reset() {
	*x = UpdateUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserModelRequest) ProtoMessage() {}

func (x *UpdateUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateUserModelRequest) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdateUserModelRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateUserModelResponse contains the updated model.
type UpdateUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *UpdateUserModelResponse) Reset() {
	*x = UpdateUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserModelResponse) ProtoMessage() {}

func (x *UpdateUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserModelResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateUserModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// DeleteUserModelRequest represents a request to delete a model owned by a
// user.
type DeleteUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteUserModelRequest) Reset() {
	*x = DeleteUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserModelRequest) ProtoMessage() {}

func (x *DeleteUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteUserModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteUserModelResponse is an empty response.
type DeleteUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserModelResponse) Reset() {
	*x = DeleteUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserModelResponse) ProtoMessage() {}

func (x *DeleteUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserModelResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{58}
}

// RenameUserModelRequest represents a request to rename a model
type RenameUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The new resource ID. This will transform the resource name into
	// `users/{user.id}/models/{new_model_id}`.
	NewModelId string `protobuf:"bytes,2,opt,name=new_model_id,json=newModelId,proto3" json:"new_model_id,omitempty"`
}

func (x *RenameUserModelRequest) Reset() {
	*x = RenameUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameUserModelRequest) ProtoMessage() {}

func (x *RenameUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameUserModelRequest.ProtoReflect.Descriptor instead.
func (*RenameUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{59}
}

func (x *RenameUserModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenameUserModelRequest) GetNewModelId() string {
	if x != nil {
		return x.NewModelId
	}
	return ""
}

// RenameUserModelResponse contains a renamed model.
type RenameUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The renamed model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RenameUserModelResponse) Reset() {
	*x = RenameUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameUserModelResponse) ProtoMessage() {}

func (x *RenameUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameUserModelResponse.ProtoReflect.Descriptor instead.
func (*RenameUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{60}
}

func (x *RenameUserModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// WatchUserModelRequest represents a request to fetch current state of a model
type WatchUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WatchUserModelRequest) Reset() {
	*x = WatchUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserModelRequest) ProtoMessage() {}

func (x *WatchUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserModelRequest.ProtoReflect.Descriptor instead.
func (*WatchUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{61}
}

func (x *WatchUserModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WatchUserModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// WatchUserModelResponse contains the state of a model.
type WatchUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Detail description of the state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WatchUserModelResponse) Reset() {
	*x = WatchUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserModelResponse) ProtoMessage() {}

func (x *WatchUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserModelResponse.ProtoReflect.Descriptor instead.
func (*WatchUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{62}
}

func (x *WatchUserModelResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *WatchUserModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// WatchUserLatestModelRequest represents a request to fetch current state of
// the latest model version.
type WatchUserLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WatchUserLatestModelRequest) Reset() {
	*x = WatchUserLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserLatestModelRequest) ProtoMessage() {}

func (x *WatchUserLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserLatestModelRequest.ProtoReflect.Descriptor instead.
func (*WatchUserLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{63}
}

func (x *WatchUserLatestModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// WatchUserLatestModelResponse contains the state of the latest model version.
type WatchUserLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Detail description of the state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WatchUserLatestModelResponse) Reset() {
	*x = WatchUserLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserLatestModelResponse) ProtoMessage() {}

func (x *WatchUserLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserLatestModelResponse.ProtoReflect.Descriptor instead.
func (*WatchUserLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{64}
}

func (x *WatchUserLatestModelResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *WatchUserLatestModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListUserModelVersionsRequest represents a request to list all the versions
// of a model namespace of a user.
type ListUserModelVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of versions to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	// The parent resource, i.e., the user that created the models.
	// - Format: `users/{user.id}`.
	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListUserModelVersionsRequest) Reset() {
	*x = ListUserModelVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserModelVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserModelVersionsRequest) ProtoMessage() {}

func (x *ListUserModelVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserModelVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListUserModelVersionsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{65}
}

func (x *ListUserModelVersionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListUserModelVersionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListUserModelVersionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListUserModelVersionsResponse contains a list of models.
type ListUserModelVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Versions []*ModelVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	// Total number of versions.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListUserModelVersionsResponse) Reset() {
	*x = ListUserModelVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserModelVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserModelVersionsResponse) ProtoMessage() {}

func (x *ListUserModelVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserModelVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListUserModelVersionsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{66}
}

func (x *ListUserModelVersionsResponse) GetVersions() []*ModelVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ListUserModelVersionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListUserModelVersionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserModelVersionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// DeleteUserModelVersionRequest represents a request to delete a model version
//
//	owned by a user.
type DeleteUserModelVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteUserModelVersionRequest) Reset() {
	*x = DeleteUserModelVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserModelVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserModelVersionRequest) ProtoMessage() {}

func (x *DeleteUserModelVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserModelVersionRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserModelVersionRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteUserModelVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteUserModelVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// DeleteUserModelVersionResponse is an empty response.
type DeleteUserModelVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserModelVersionResponse) Reset() {
	*x = DeleteUserModelVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserModelVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserModelVersionResponse) ProtoMessage() {}

func (x *DeleteUserModelVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserModelVersionResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserModelVersionResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{68}
}

// TaskInput represents a question or task for an AI model.
type TaskInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input type.
	//
	// Types that are assignable to Input:
	//
	//	*TaskInput_Classification
	//	*TaskInput_Detection
	//	*TaskInput_Keypoint
	//	*TaskInput_Ocr
	//	*TaskInput_InstanceSegmentation
	//	*TaskInput_SemanticSegmentation
	//	*TaskInput_TextToImage
	//	*TaskInput_ImageToImage
	//	*TaskInput_TextGeneration
	//	*TaskInput_TextGenerationChat
	//	*TaskInput_VisualQuestionAnswering
	//	*TaskInput_Unspecified
	Input isTaskInput_Input `protobuf_oneof:"input"`
}

func (x *TaskInput) Reset() {
	*x = TaskInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInput) ProtoMessage() {}

func (x *TaskInput) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInput.ProtoReflect.Descriptor instead.
func (*TaskInput) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{69}
}

func (m *TaskInput) GetInput() isTaskInput_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *TaskInput) GetClassification() *ClassificationInput {
	if x, ok := x.GetInput().(*TaskInput_Classification); ok {
		return x.Classification
	}
	return nil
}

func (x *TaskInput) GetDetection() *DetectionInput {
	if x, ok := x.GetInput().(*TaskInput_Detection); ok {
		return x.Detection
	}
	return nil
}

func (x *TaskInput) GetKeypoint() *KeypointInput {
	if x, ok := x.GetInput().(*TaskInput_Keypoint); ok {
		return x.Keypoint
	}
	return nil
}

func (x *TaskInput) GetOcr() *OcrInput {
	if x, ok := x.GetInput().(*TaskInput_Ocr); ok {
		return x.Ocr
	}
	return nil
}

func (x *TaskInput) GetInstanceSegmentation() *InstanceSegmentationInput {
	if x, ok := x.GetInput().(*TaskInput_InstanceSegmentation); ok {
		return x.InstanceSegmentation
	}
	return nil
}

func (x *TaskInput) GetSemanticSegmentation() *SemanticSegmentationInput {
	if x, ok := x.GetInput().(*TaskInput_SemanticSegmentation); ok {
		return x.SemanticSegmentation
	}
	return nil
}

func (x *TaskInput) GetTextToImage() *TextToImageInput {
	if x, ok := x.GetInput().(*TaskInput_TextToImage); ok {
		return x.TextToImage
	}
	return nil
}

func (x *TaskInput) GetImageToImage() *ImageToImageInput {
	if x, ok := x.GetInput().(*TaskInput_ImageToImage); ok {
		return x.ImageToImage
	}
	return nil
}

func (x *TaskInput) GetTextGeneration() *TextGenerationInput {
	if x, ok := x.GetInput().(*TaskInput_TextGeneration); ok {
		return x.TextGeneration
	}
	return nil
}

func (x *TaskInput) GetTextGenerationChat() *TextGenerationChatInput {
	if x, ok := x.GetInput().(*TaskInput_TextGenerationChat); ok {
		return x.TextGenerationChat
	}
	return nil
}

func (x *TaskInput) GetVisualQuestionAnswering() *VisualQuestionAnsweringInput {
	if x, ok := x.GetInput().(*TaskInput_VisualQuestionAnswering); ok {
		return x.VisualQuestionAnswering
	}
	return nil
}

func (x *TaskInput) GetUnspecified() *UnspecifiedInput {
	if x, ok := x.GetInput().(*TaskInput_Unspecified); ok {
		return x.Unspecified
	}
	return nil
}

type isTaskInput_Input interface {
	isTaskInput_Input()
}

type TaskInput_Classification struct {
	// Image classification input.
	Classification *ClassificationInput `protobuf:"bytes,1,opt,name=classification,proto3,oneof"`
}

type TaskInput_Detection struct {
	// Object detection input.
	Detection *DetectionInput `protobuf:"bytes,2,opt,name=detection,proto3,oneof"`
}

type TaskInput_Keypoint struct {
	// Keypoint detection input.
	Keypoint *KeypointInput `protobuf:"bytes,3,opt,name=keypoint,proto3,oneof"`
}

type TaskInput_Ocr struct {
	// Optical Character Recognition input.
	Ocr *OcrInput `protobuf:"bytes,4,opt,name=ocr,proto3,oneof"`
}

type TaskInput_InstanceSegmentation struct {
	// Instance segmentation input.
	InstanceSegmentation *InstanceSegmentationInput `protobuf:"bytes,5,opt,name=instance_segmentation,json=instanceSegmentation,proto3,oneof"`
}

type TaskInput_SemanticSegmentation struct {
	// Semantic segmentation input.
	SemanticSegmentation *SemanticSegmentationInput `protobuf:"bytes,6,opt,name=semantic_segmentation,json=semanticSegmentation,proto3,oneof"`
}

type TaskInput_TextToImage struct {
	// Text to image input.
	TextToImage *TextToImageInput `protobuf:"bytes,7,opt,name=text_to_image,json=textToImage,proto3,oneof"`
}

type TaskInput_ImageToImage struct {
	// Image to image input.
	ImageToImage *ImageToImageInput `protobuf:"bytes,8,opt,name=image_to_image,json=imageToImage,proto3,oneof"`
}

type TaskInput_TextGeneration struct {
	// Text generation input.
	TextGeneration *TextGenerationInput `protobuf:"bytes,9,opt,name=text_generation,json=textGeneration,proto3,oneof"`
}

type TaskInput_TextGenerationChat struct {
	// Conversational text generation input.
	TextGenerationChat *TextGenerationChatInput `protobuf:"bytes,10,opt,name=text_generation_chat,json=textGenerationChat,proto3,oneof"`
}

type TaskInput_VisualQuestionAnswering struct {
	// Visual question answering input.
	VisualQuestionAnswering *VisualQuestionAnsweringInput `protobuf:"bytes,11,opt,name=visual_question_answering,json=visualQuestionAnswering,proto3,oneof"`
}

type TaskInput_Unspecified struct {
	// Unspecified task input.
	Unspecified *UnspecifiedInput `protobuf:"bytes,12,opt,name=unspecified,proto3,oneof"`
}

func (*TaskInput_Classification) isTaskInput_Input() {}

func (*TaskInput_Detection) isTaskInput_Input() {}

func (*TaskInput_Keypoint) isTaskInput_Input() {}

func (*TaskInput_Ocr) isTaskInput_Input() {}

func (*TaskInput_InstanceSegmentation) isTaskInput_Input() {}

func (*TaskInput_SemanticSegmentation) isTaskInput_Input() {}

func (*TaskInput_TextToImage) isTaskInput_Input() {}

func (*TaskInput_ImageToImage) isTaskInput_Input() {}

func (*TaskInput_TextGeneration) isTaskInput_Input() {}

func (*TaskInput_TextGenerationChat) isTaskInput_Input() {}

func (*TaskInput_VisualQuestionAnswering) isTaskInput_Input() {}

func (*TaskInput_Unspecified) isTaskInput_Input() {}

// TaskInputStream represents the input to trigger a model with stream method
type TaskInputStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input type
	//
	// Types that are assignable to Input:
	//
	//	*TaskInputStream_Classification
	//	*TaskInputStream_Detection
	//	*TaskInputStream_Keypoint
	//	*TaskInputStream_Ocr
	//	*TaskInputStream_InstanceSegmentation
	//	*TaskInputStream_SemanticSegmentation
	//	*TaskInputStream_TextToImage
	//	*TaskInputStream_ImageToImage
	//	*TaskInputStream_TextGeneration
	//	*TaskInputStream_TextGenerationChat
	//	*TaskInputStream_VisualQuestionAnswering
	//	*TaskInputStream_Unspecified
	Input isTaskInputStream_Input `protobuf_oneof:"input"`
}

func (x *TaskInputStream) Reset() {
	*x = TaskInputStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInputStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInputStream) ProtoMessage() {}

func (x *TaskInputStream) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInputStream.ProtoReflect.Descriptor instead.
func (*TaskInputStream) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{70}
}

func (m *TaskInputStream) GetInput() isTaskInputStream_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *TaskInputStream) GetClassification() *ClassificationInputStream {
	if x, ok := x.GetInput().(*TaskInputStream_Classification); ok {
		return x.Classification
	}
	return nil
}

func (x *TaskInputStream) GetDetection() *DetectionInputStream {
	if x, ok := x.GetInput().(*TaskInputStream_Detection); ok {
		return x.Detection
	}
	return nil
}

func (x *TaskInputStream) GetKeypoint() *KeypointInputStream {
	if x, ok := x.GetInput().(*TaskInputStream_Keypoint); ok {
		return x.Keypoint
	}
	return nil
}

func (x *TaskInputStream) GetOcr() *OcrInputStream {
	if x, ok := x.GetInput().(*TaskInputStream_Ocr); ok {
		return x.Ocr
	}
	return nil
}

func (x *TaskInputStream) GetInstanceSegmentation() *InstanceSegmentationInputStream {
	if x, ok := x.GetInput().(*TaskInputStream_InstanceSegmentation); ok {
		return x.InstanceSegmentation
	}
	return nil
}

func (x *TaskInputStream) GetSemanticSegmentation() *SemanticSegmentationInputStream {
	if x, ok := x.GetInput().(*TaskInputStream_SemanticSegmentation); ok {
		return x.SemanticSegmentation
	}
	return nil
}

func (x *TaskInputStream) GetTextToImage() *TextToImageInput {
	if x, ok := x.GetInput().(*TaskInputStream_TextToImage); ok {
		return x.TextToImage
	}
	return nil
}

func (x *TaskInputStream) GetImageToImage() *ImageToImageInput {
	if x, ok := x.GetInput().(*TaskInputStream_ImageToImage); ok {
		return x.ImageToImage
	}
	return nil
}

func (x *TaskInputStream) GetTextGeneration() *TextGenerationInput {
	if x, ok := x.GetInput().(*TaskInputStream_TextGeneration); ok {
		return x.TextGeneration
	}
	return nil
}

func (x *TaskInputStream) GetTextGenerationChat() *TextGenerationChatInput {
	if x, ok := x.GetInput().(*TaskInputStream_TextGenerationChat); ok {
		return x.TextGenerationChat
	}
	return nil
}

func (x *TaskInputStream) GetVisualQuestionAnswering() *VisualQuestionAnsweringInput {
	if x, ok := x.GetInput().(*TaskInputStream_VisualQuestionAnswering); ok {
		return x.VisualQuestionAnswering
	}
	return nil
}

func (x *TaskInputStream) GetUnspecified() *UnspecifiedInput {
	if x, ok := x.GetInput().(*TaskInputStream_Unspecified); ok {
		return x.Unspecified
	}
	return nil
}

type isTaskInputStream_Input interface {
	isTaskInputStream_Input()
}

type TaskInputStream_Classification struct {
	// The classification input
	Classification *ClassificationInputStream `protobuf:"bytes,1,opt,name=classification,proto3,oneof"`
}

type TaskInputStream_Detection struct {
	// The detection input
	Detection *DetectionInputStream `protobuf:"bytes,2,opt,name=detection,proto3,oneof"`
}

type TaskInputStream_Keypoint struct {
	// The keypoint input
	Keypoint *KeypointInputStream `protobuf:"bytes,3,opt,name=keypoint,proto3,oneof"`
}

type TaskInputStream_Ocr struct {
	// The ocr input
	Ocr *OcrInputStream `protobuf:"bytes,4,opt,name=ocr,proto3,oneof"`
}

type TaskInputStream_InstanceSegmentation struct {
	// The instance segmentation input
	InstanceSegmentation *InstanceSegmentationInputStream `protobuf:"bytes,5,opt,name=instance_segmentation,json=instanceSegmentation,proto3,oneof"`
}

type TaskInputStream_SemanticSegmentation struct {
	// The semantic segmentation input
	SemanticSegmentation *SemanticSegmentationInputStream `protobuf:"bytes,6,opt,name=semantic_segmentation,json=semanticSegmentation,proto3,oneof"`
}

type TaskInputStream_TextToImage struct {
	// The text to image input
	TextToImage *TextToImageInput `protobuf:"bytes,7,opt,name=text_to_image,json=textToImage,proto3,oneof"`
}

type TaskInputStream_ImageToImage struct {
	// The image to image input
	ImageToImage *ImageToImageInput `protobuf:"bytes,8,opt,name=image_to_image,json=imageToImage,proto3,oneof"`
}

type TaskInputStream_TextGeneration struct {
	// The text generation input
	TextGeneration *TextGenerationInput `protobuf:"bytes,9,opt,name=text_generation,json=textGeneration,proto3,oneof"`
}

type TaskInputStream_TextGenerationChat struct {
	// The text generation chat input
	TextGenerationChat *TextGenerationChatInput `protobuf:"bytes,10,opt,name=text_generation_chat,json=textGenerationChat,proto3,oneof"`
}

type TaskInputStream_VisualQuestionAnswering struct {
	// The visual question answering input
	VisualQuestionAnswering *VisualQuestionAnsweringInput `protobuf:"bytes,11,opt,name=visual_question_answering,json=visualQuestionAnswering,proto3,oneof"`
}

type TaskInputStream_Unspecified struct {
	// The unspecified task input
	Unspecified *UnspecifiedInput `protobuf:"bytes,12,opt,name=unspecified,proto3,oneof"`
}

func (*TaskInputStream_Classification) isTaskInputStream_Input() {}

func (*TaskInputStream_Detection) isTaskInputStream_Input() {}

func (*TaskInputStream_Keypoint) isTaskInputStream_Input() {}

func (*TaskInputStream_Ocr) isTaskInputStream_Input() {}

func (*TaskInputStream_InstanceSegmentation) isTaskInputStream_Input() {}

func (*TaskInputStream_SemanticSegmentation) isTaskInputStream_Input() {}

func (*TaskInputStream_TextToImage) isTaskInputStream_Input() {}

func (*TaskInputStream_ImageToImage) isTaskInputStream_Input() {}

func (*TaskInputStream_TextGeneration) isTaskInputStream_Input() {}

func (*TaskInputStream_TextGenerationChat) isTaskInputStream_Input() {}

func (*TaskInputStream_VisualQuestionAnswering) isTaskInputStream_Input() {}

func (*TaskInputStream_Unspecified) isTaskInputStream_Input() {}

// TaskOutput represents the result of an AI task performed by a model.
type TaskOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Inference task output.
	//
	// Types that are assignable to Output:
	//
	//	*TaskOutput_Classification
	//	*TaskOutput_Detection
	//	*TaskOutput_Keypoint
	//	*TaskOutput_Ocr
	//	*TaskOutput_InstanceSegmentation
	//	*TaskOutput_SemanticSegmentation
	//	*TaskOutput_TextToImage
	//	*TaskOutput_ImageToImage
	//	*TaskOutput_TextGeneration
	//	*TaskOutput_TextGenerationChat
	//	*TaskOutput_VisualQuestionAnswering
	//	*TaskOutput_Unspecified
	Output isTaskOutput_Output `protobuf_oneof:"output"`
}

func (x *TaskOutput) Reset() {
	*x = TaskOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskOutput) ProtoMessage() {}

func (x *TaskOutput) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskOutput.ProtoReflect.Descriptor instead.
func (*TaskOutput) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{71}
}

func (m *TaskOutput) GetOutput() isTaskOutput_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *TaskOutput) GetClassification() *ClassificationOutput {
	if x, ok := x.GetOutput().(*TaskOutput_Classification); ok {
		return x.Classification
	}
	return nil
}

func (x *TaskOutput) GetDetection() *DetectionOutput {
	if x, ok := x.GetOutput().(*TaskOutput_Detection); ok {
		return x.Detection
	}
	return nil
}

func (x *TaskOutput) GetKeypoint() *KeypointOutput {
	if x, ok := x.GetOutput().(*TaskOutput_Keypoint); ok {
		return x.Keypoint
	}
	return nil
}

func (x *TaskOutput) GetOcr() *OcrOutput {
	if x, ok := x.GetOutput().(*TaskOutput_Ocr); ok {
		return x.Ocr
	}
	return nil
}

func (x *TaskOutput) GetInstanceSegmentation() *InstanceSegmentationOutput {
	if x, ok := x.GetOutput().(*TaskOutput_InstanceSegmentation); ok {
		return x.InstanceSegmentation
	}
	return nil
}

func (x *TaskOutput) GetSemanticSegmentation() *SemanticSegmentationOutput {
	if x, ok := x.GetOutput().(*TaskOutput_SemanticSegmentation); ok {
		return x.SemanticSegmentation
	}
	return nil
}

func (x *TaskOutput) GetTextToImage() *TextToImageOutput {
	if x, ok := x.GetOutput().(*TaskOutput_TextToImage); ok {
		return x.TextToImage
	}
	return nil
}

func (x *TaskOutput) GetImageToImage() *ImageToImageOutput {
	if x, ok := x.GetOutput().(*TaskOutput_ImageToImage); ok {
		return x.ImageToImage
	}
	return nil
}

func (x *TaskOutput) GetTextGeneration() *TextGenerationOutput {
	if x, ok := x.GetOutput().(*TaskOutput_TextGeneration); ok {
		return x.TextGeneration
	}
	return nil
}

func (x *TaskOutput) GetTextGenerationChat() *TextGenerationChatOutput {
	if x, ok := x.GetOutput().(*TaskOutput_TextGenerationChat); ok {
		return x.TextGenerationChat
	}
	return nil
}

func (x *TaskOutput) GetVisualQuestionAnswering() *VisualQuestionAnsweringOutput {
	if x, ok := x.GetOutput().(*TaskOutput_VisualQuestionAnswering); ok {
		return x.VisualQuestionAnswering
	}
	return nil
}

func (x *TaskOutput) GetUnspecified() *UnspecifiedOutput {
	if x, ok := x.GetOutput().(*TaskOutput_Unspecified); ok {
		return x.Unspecified
	}
	return nil
}

type isTaskOutput_Output interface {
	isTaskOutput_Output()
}

type TaskOutput_Classification struct {
	// Image classification output.
	Classification *ClassificationOutput `protobuf:"bytes,1,opt,name=classification,proto3,oneof"`
}

type TaskOutput_Detection struct {
	// Object detection output.
	Detection *DetectionOutput `protobuf:"bytes,2,opt,name=detection,proto3,oneof"`
}

type TaskOutput_Keypoint struct {
	// Keypoint detection output.
	Keypoint *KeypointOutput `protobuf:"bytes,3,opt,name=keypoint,proto3,oneof"`
}

type TaskOutput_Ocr struct {
	// Optical Character Recognition output.
	Ocr *OcrOutput `protobuf:"bytes,4,opt,name=ocr,proto3,oneof"`
}

type TaskOutput_InstanceSegmentation struct {
	// Instance segmentation output.
	InstanceSegmentation *InstanceSegmentationOutput `protobuf:"bytes,5,opt,name=instance_segmentation,json=instanceSegmentation,proto3,oneof"`
}

type TaskOutput_SemanticSegmentation struct {
	// Semantic segmentation output.
	SemanticSegmentation *SemanticSegmentationOutput `protobuf:"bytes,6,opt,name=semantic_segmentation,json=semanticSegmentation,proto3,oneof"`
}

type TaskOutput_TextToImage struct {
	// Text to image output.
	TextToImage *TextToImageOutput `protobuf:"bytes,7,opt,name=text_to_image,json=textToImage,proto3,oneof"`
}

type TaskOutput_ImageToImage struct {
	// Image to image output.
	ImageToImage *ImageToImageOutput `protobuf:"bytes,8,opt,name=image_to_image,json=imageToImage,proto3,oneof"`
}

type TaskOutput_TextGeneration struct {
	// Text generation output.
	TextGeneration *TextGenerationOutput `protobuf:"bytes,9,opt,name=text_generation,json=textGeneration,proto3,oneof"`
}

type TaskOutput_TextGenerationChat struct {
	// Conversational text generation output.
	TextGenerationChat *TextGenerationChatOutput `protobuf:"bytes,10,opt,name=text_generation_chat,json=textGenerationChat,proto3,oneof"`
}

type TaskOutput_VisualQuestionAnswering struct {
	// Visual question answering output.
	VisualQuestionAnswering *VisualQuestionAnsweringOutput `protobuf:"bytes,11,opt,name=visual_question_answering,json=visualQuestionAnswering,proto3,oneof"`
}

type TaskOutput_Unspecified struct {
	// Unspecified task output.
	Unspecified *UnspecifiedOutput `protobuf:"bytes,12,opt,name=unspecified,proto3,oneof"`
}

func (*TaskOutput_Classification) isTaskOutput_Output() {}

func (*TaskOutput_Detection) isTaskOutput_Output() {}

func (*TaskOutput_Keypoint) isTaskOutput_Output() {}

func (*TaskOutput_Ocr) isTaskOutput_Output() {}

func (*TaskOutput_InstanceSegmentation) isTaskOutput_Output() {}

func (*TaskOutput_SemanticSegmentation) isTaskOutput_Output() {}

func (*TaskOutput_TextToImage) isTaskOutput_Output() {}

func (*TaskOutput_ImageToImage) isTaskOutput_Output() {}

func (*TaskOutput_TextGeneration) isTaskOutput_Output() {}

func (*TaskOutput_TextGenerationChat) isTaskOutput_Output() {}

func (*TaskOutput_VisualQuestionAnswering) isTaskOutput_Output() {}

func (*TaskOutput_Unspecified) isTaskOutput_Output() {}

// TriggerUserModelRequest represents a request to trigger a model inference.
type TriggerUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerUserModelRequest) Reset() {
	*x = TriggerUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUserModelRequest) ProtoMessage() {}

func (x *TriggerUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUserModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{72}
}

func (x *TriggerUserModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerUserModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *TriggerUserModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerUserModelResponse contains the model inference results.
type TriggerUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerUserModelResponse) Reset() {
	*x = TriggerUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUserModelResponse) ProtoMessage() {}

func (x *TriggerUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUserModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{73}
}

func (x *TriggerUserModelResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerUserModelResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// TriggerAsyncUserModelRequest represents a request to trigger a model inference
// asynchronously.
type TriggerAsyncUserModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerAsyncUserModelRequest) Reset() {
	*x = TriggerAsyncUserModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncUserModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncUserModelRequest) ProtoMessage() {}

func (x *TriggerAsyncUserModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncUserModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerAsyncUserModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{74}
}

func (x *TriggerAsyncUserModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerAsyncUserModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *TriggerAsyncUserModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerAsyncUserModelResponse contains the information to access the
// status of an asynchronous model inference.
type TriggerAsyncUserModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Long-running operation information.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TriggerAsyncUserModelResponse) Reset() {
	*x = TriggerAsyncUserModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncUserModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncUserModelResponse) ProtoMessage() {}

func (x *TriggerAsyncUserModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncUserModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerAsyncUserModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{75}
}

func (x *TriggerAsyncUserModelResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// TriggerUserLatestModelRequest represents a request to trigger a model inference
// with the latest uploaded version.
type TriggerUserLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
}

func (x *TriggerUserLatestModelRequest) Reset() {
	*x = TriggerUserLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerUserLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUserLatestModelRequest) ProtoMessage() {}

func (x *TriggerUserLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUserLatestModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerUserLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{76}
}

func (x *TriggerUserLatestModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerUserLatestModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

// TriggerUserLatestModelResponse contains the model inference results.
type TriggerUserLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerUserLatestModelResponse) Reset() {
	*x = TriggerUserLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerUserLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUserLatestModelResponse) ProtoMessage() {}

func (x *TriggerUserLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUserLatestModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerUserLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{77}
}

func (x *TriggerUserLatestModelResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerUserLatestModelResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// TriggerAsyncUserLatestModelRequest represents a request to trigger a model inference
// asynchronously with the latest uploaded version.
type TriggerAsyncUserLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
}

func (x *TriggerAsyncUserLatestModelRequest) Reset() {
	*x = TriggerAsyncUserLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncUserLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncUserLatestModelRequest) ProtoMessage() {}

func (x *TriggerAsyncUserLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncUserLatestModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerAsyncUserLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{78}
}

func (x *TriggerAsyncUserLatestModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerAsyncUserLatestModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

// TriggerAsyncUserLatestModelResponse contains the information to access the
// status of an asynchronous model inference.
type TriggerAsyncUserLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Long-running operation information.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TriggerAsyncUserLatestModelResponse) Reset() {
	*x = TriggerAsyncUserLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncUserLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncUserLatestModelResponse) ProtoMessage() {}

func (x *TriggerAsyncUserLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncUserLatestModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerAsyncUserLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{79}
}

func (x *TriggerAsyncUserLatestModelResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// TriggerUserModelBinaryFileUploadRequest represents a request trigger a model
// inference by uploading a binary file as the input.
type TriggerUserModelBinaryFileUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input as a binary file.
	TaskInput *TaskInputStream `protobuf:"bytes,2,opt,name=task_input,json=taskInput,proto3" json:"task_input,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerUserModelBinaryFileUploadRequest) Reset() {
	*x = TriggerUserModelBinaryFileUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerUserModelBinaryFileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUserModelBinaryFileUploadRequest) ProtoMessage() {}

func (x *TriggerUserModelBinaryFileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUserModelBinaryFileUploadRequest.ProtoReflect.Descriptor instead.
func (*TriggerUserModelBinaryFileUploadRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{80}
}

func (x *TriggerUserModelBinaryFileUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerUserModelBinaryFileUploadRequest) GetTaskInput() *TaskInputStream {
	if x != nil {
		return x.TaskInput
	}
	return nil
}

func (x *TriggerUserModelBinaryFileUploadRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerUserModelBinaryFileUploadResponse contains the model inference results.
type TriggerUserModelBinaryFileUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerUserModelBinaryFileUploadResponse) Reset() {
	*x = TriggerUserModelBinaryFileUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerUserModelBinaryFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUserModelBinaryFileUploadResponse) ProtoMessage() {}

func (x *TriggerUserModelBinaryFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUserModelBinaryFileUploadResponse.ProtoReflect.Descriptor instead.
func (*TriggerUserModelBinaryFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{81}
}

func (x *TriggerUserModelBinaryFileUploadResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerUserModelBinaryFileUploadResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

func (x *TriggerUserModelBinaryFileUploadResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// CreateOrganizationModelRequest represents a request from an organization to create a model.
type CreateOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The properties of the model to be created.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// The parent resource, i.e., the organization that creates the model.
	// Format: `organizations/{organization.id}`.
	Parent string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *CreateOrganizationModelRequest) Reset() {
	*x = CreateOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationModelRequest) ProtoMessage() {}

func (x *CreateOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{82}
}

func (x *CreateOrganizationModelRequest) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *CreateOrganizationModelRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// CreateOrganizationModelResponse contains the created model.
type CreateOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *CreateOrganizationModelResponse) Reset() {
	*x = CreateOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationModelResponse) ProtoMessage() {}

func (x *CreateOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*CreateOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{83}
}

func (x *CreateOrganizationModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// ListOrganizationModelsRequest represents a request to list the models
// of an organization.
type ListOrganizationModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of models to return. If this parameter is unspecified,
	// at most 10 models will be returned. The cap value for this parameter is
	// 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token.
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
	// The parent resource, i.e., the organization that created the models.
	// - Format: `organizations/{organizations.id}`.
	Parent string `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	// Include soft-deleted models in the result.
	ShowDeleted *bool `protobuf:"varint,5,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,6,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Limit results to pipelines with the specified visibility.
	Visibility *Model_Visibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=model.model.v1alpha.Model_Visibility,oneof" json:"visibility,omitempty"`
	// Order by field, with options for ordering by `id`, `create_time` or `update_time`.
	// Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
	OrderBy *string `protobuf:"bytes,8,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
}

func (x *ListOrganizationModelsRequest) Reset() {
	*x = ListOrganizationModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationModelsRequest) ProtoMessage() {}

func (x *ListOrganizationModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationModelsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationModelsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{84}
}

func (x *ListOrganizationModelsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationModelsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOrganizationModelsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListOrganizationModelsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListOrganizationModelsRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

func (x *ListOrganizationModelsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOrganizationModelsRequest) GetVisibility() Model_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Model_VISIBILITY_UNSPECIFIED
}

func (x *ListOrganizationModelsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

// ListOrganizationModelsResponse contains a list of models.
type ListOrganizationModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of models.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListOrganizationModelsResponse) Reset() {
	*x = ListOrganizationModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationModelsResponse) ProtoMessage() {}

func (x *ListOrganizationModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationModelsResponse.ProtoReflect.Descriptor instead.
func (*ListOrganizationModelsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{85}
}

func (x *ListOrganizationModelsResponse) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *ListOrganizationModelsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListOrganizationModelsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetOrganizationModelRequest represents a request to fetch the details of a model
// owned by an organization.
type GetOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// View allows clients to specify the desired model view in the response.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetOrganizationModelRequest) Reset() {
	*x = GetOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationModelRequest) ProtoMessage() {}

func (x *GetOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{86}
}

func (x *GetOrganizationModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOrganizationModelRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetOrganizationModelResponse contains the requested model.
type GetOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *GetOrganizationModelResponse) Reset() {
	*x = GetOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationModelResponse) ProtoMessage() {}

func (x *GetOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{87}
}

func (x *GetOrganizationModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// UpdateOrganizationModelRequest represents a request to update a model owned by an
// organization.
type UpdateOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The model to update
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// The update mask specifies the subset of fields that should be modified.
	//
	// For more information about this field, see
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateOrganizationModelRequest) Reset() {
	*x = UpdateOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationModelRequest) ProtoMessage() {}

func (x *UpdateOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateOrganizationModelRequest) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *UpdateOrganizationModelRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateOrganizationModelResponse contains the updated model.
type UpdateOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *UpdateOrganizationModelResponse) Reset() {
	*x = UpdateOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationModelResponse) ProtoMessage() {}

func (x *UpdateOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{89}
}

func (x *UpdateOrganizationModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// DeleteOrganizationModelRequest represents a request to delete a model owned by an
// organization.
type DeleteOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteOrganizationModelRequest) Reset() {
	*x = DeleteOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationModelRequest) ProtoMessage() {}

func (x *DeleteOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteOrganizationModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteOrganizationModelResponse is an empty response.
type DeleteOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOrganizationModelResponse) Reset() {
	*x = DeleteOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationModelResponse) ProtoMessage() {}

func (x *DeleteOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{91}
}

// RenameOrganizationModelRequest represents a request to rename a model
type RenameOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The new resource ID. This will transform the resource name into
	// `organizations/{organization.id}/models/{new_model_id}`.
	NewModelId string `protobuf:"bytes,2,opt,name=new_model_id,json=newModelId,proto3" json:"new_model_id,omitempty"`
}

func (x *RenameOrganizationModelRequest) Reset() {
	*x = RenameOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameOrganizationModelRequest) ProtoMessage() {}

func (x *RenameOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*RenameOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{92}
}

func (x *RenameOrganizationModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenameOrganizationModelRequest) GetNewModelId() string {
	if x != nil {
		return x.NewModelId
	}
	return ""
}

// RenameOrganizationModelResponse contains a renamed model.
type RenameOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The renamed model resource.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RenameOrganizationModelResponse) Reset() {
	*x = RenameOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameOrganizationModelResponse) ProtoMessage() {}

func (x *RenameOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*RenameOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{93}
}

func (x *RenameOrganizationModelResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// WatchOrganizationModelRequest represents a request to fetch current state of a model.
type WatchOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WatchOrganizationModelRequest) Reset() {
	*x = WatchOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOrganizationModelRequest) ProtoMessage() {}

func (x *WatchOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*WatchOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{94}
}

func (x *WatchOrganizationModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WatchOrganizationModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// WatchOrganizationModelResponse contains the state of a model.
type WatchOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Detail description of the state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WatchOrganizationModelResponse) Reset() {
	*x = WatchOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOrganizationModelResponse) ProtoMessage() {}

func (x *WatchOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*WatchOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{95}
}

func (x *WatchOrganizationModelResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *WatchOrganizationModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// WatchOrganizationLatestModelRequest represents a request to fetch current state of
// the latest model version
type WatchOrganizationLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WatchOrganizationLatestModelRequest) Reset() {
	*x = WatchOrganizationLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchOrganizationLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOrganizationLatestModelRequest) ProtoMessage() {}

func (x *WatchOrganizationLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOrganizationLatestModelRequest.ProtoReflect.Descriptor instead.
func (*WatchOrganizationLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{96}
}

func (x *WatchOrganizationLatestModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// WatchOrganizationLatestModelResponse contains the state of the latest model version.
type WatchOrganizationLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=model.model.v1alpha.State" json:"state,omitempty"`
	// Detail description of the state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WatchOrganizationLatestModelResponse) Reset() {
	*x = WatchOrganizationLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchOrganizationLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOrganizationLatestModelResponse) ProtoMessage() {}

func (x *WatchOrganizationLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOrganizationLatestModelResponse.ProtoReflect.Descriptor instead.
func (*WatchOrganizationLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{97}
}

func (x *WatchOrganizationLatestModelResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_UNSPECIFIED
}

func (x *WatchOrganizationLatestModelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListOrganizationModelVersionsRequest represents a request to list all the versions
// of a model namespace of an organization.
type ListOrganizationModelVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of versions to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	// The parent resource, i.e., the user that created the models.
	// - Format: `organizations/{organization.id}`.
	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListOrganizationModelVersionsRequest) Reset() {
	*x = ListOrganizationModelVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationModelVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationModelVersionsRequest) ProtoMessage() {}

func (x *ListOrganizationModelVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationModelVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationModelVersionsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{98}
}

func (x *ListOrganizationModelVersionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOrganizationModelVersionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListOrganizationModelVersionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListOrganizationModelVersionsResponse contains a list of models.
type ListOrganizationModelVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of model resources.
	Versions []*ModelVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	// Total number of versions.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListOrganizationModelVersionsResponse) Reset() {
	*x = ListOrganizationModelVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationModelVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationModelVersionsResponse) ProtoMessage() {}

func (x *ListOrganizationModelVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationModelVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListOrganizationModelVersionsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{99}
}

func (x *ListOrganizationModelVersionsResponse) GetVersions() []*ModelVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ListOrganizationModelVersionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListOrganizationModelVersionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOrganizationModelVersionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// DeleteOrganizationModelVersionRequest represents a request to delete a model version
//
//	owned by an organization.
type DeleteOrganizationModelVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The parent resource, i.e., the user that created the models.
	// - Format: `organizations/{organization.id}`.
	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteOrganizationModelVersionRequest) Reset() {
	*x = DeleteOrganizationModelVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationModelVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationModelVersionRequest) ProtoMessage() {}

func (x *DeleteOrganizationModelVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationModelVersionRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationModelVersionRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{100}
}

func (x *DeleteOrganizationModelVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteOrganizationModelVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// DeleteOrganizationModelVersionResponse is an empty response.
type DeleteOrganizationModelVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOrganizationModelVersionResponse) Reset() {
	*x = DeleteOrganizationModelVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrganizationModelVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationModelVersionResponse) ProtoMessage() {}

func (x *DeleteOrganizationModelVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationModelVersionResponse.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationModelVersionResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{101}
}

// TriggerOrganizationModelRequest represents a request to trigger a model inference.
type TriggerOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerOrganizationModelRequest) Reset() {
	*x = TriggerOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOrganizationModelRequest) ProtoMessage() {}

func (x *TriggerOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{102}
}

func (x *TriggerOrganizationModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerOrganizationModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *TriggerOrganizationModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerOrganizationModelResponse contains the model inference results.
type TriggerOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerOrganizationModelResponse) Reset() {
	*x = TriggerOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOrganizationModelResponse) ProtoMessage() {}

func (x *TriggerOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{103}
}

func (x *TriggerOrganizationModelResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerOrganizationModelResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// TriggerAsyncOrganizationModelRequest represents a request to trigger a model inference
// asynchronously
type TriggerAsyncOrganizationModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerAsyncOrganizationModelRequest) Reset() {
	*x = TriggerAsyncOrganizationModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncOrganizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncOrganizationModelRequest) ProtoMessage() {}

func (x *TriggerAsyncOrganizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncOrganizationModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerAsyncOrganizationModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{104}
}

func (x *TriggerAsyncOrganizationModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerAsyncOrganizationModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *TriggerAsyncOrganizationModelRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerAsyncOrganizationModelResponse contains the information to access the
// status of an asynchronous model inference.
type TriggerAsyncOrganizationModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Long-running operation information.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TriggerAsyncOrganizationModelResponse) Reset() {
	*x = TriggerAsyncOrganizationModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncOrganizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncOrganizationModelResponse) ProtoMessage() {}

func (x *TriggerAsyncOrganizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncOrganizationModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerAsyncOrganizationModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{105}
}

func (x *TriggerAsyncOrganizationModelResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// TriggerOrganizationLatestModelRequest represents a request to trigger a model inference.
type TriggerOrganizationLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
}

func (x *TriggerOrganizationLatestModelRequest) Reset() {
	*x = TriggerOrganizationLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOrganizationLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOrganizationLatestModelRequest) ProtoMessage() {}

func (x *TriggerOrganizationLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOrganizationLatestModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerOrganizationLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{106}
}

func (x *TriggerOrganizationLatestModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerOrganizationLatestModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

// TriggerOrganizationLatestModelResponse contains the model inference results.
type TriggerOrganizationLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerOrganizationLatestModelResponse) Reset() {
	*x = TriggerOrganizationLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOrganizationLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOrganizationLatestModelResponse) ProtoMessage() {}

func (x *TriggerOrganizationLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOrganizationLatestModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerOrganizationLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{107}
}

func (x *TriggerOrganizationLatestModelResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerOrganizationLatestModelResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// TriggerAsyncOrganizationLatestModelRequest represents a request to trigger a model inference
// asynchronously
type TriggerAsyncOrganizationLatestModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input parameters.
	TaskInputs []*TaskInput `protobuf:"bytes,2,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
}

func (x *TriggerAsyncOrganizationLatestModelRequest) Reset() {
	*x = TriggerAsyncOrganizationLatestModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncOrganizationLatestModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncOrganizationLatestModelRequest) ProtoMessage() {}

func (x *TriggerAsyncOrganizationLatestModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncOrganizationLatestModelRequest.ProtoReflect.Descriptor instead.
func (*TriggerAsyncOrganizationLatestModelRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{108}
}

func (x *TriggerAsyncOrganizationLatestModelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerAsyncOrganizationLatestModelRequest) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

// TriggerAsyncOrganizationLatestModelResponse contains the information to access the
// status of an asynchronous model inference.
type TriggerAsyncOrganizationLatestModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Long-running operation information.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *TriggerAsyncOrganizationLatestModelResponse) Reset() {
	*x = TriggerAsyncOrganizationLatestModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerAsyncOrganizationLatestModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAsyncOrganizationLatestModelResponse) ProtoMessage() {}

func (x *TriggerAsyncOrganizationLatestModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAsyncOrganizationLatestModelResponse.ProtoReflect.Descriptor instead.
func (*TriggerAsyncOrganizationLatestModelResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{109}
}

func (x *TriggerAsyncOrganizationLatestModelResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// TriggerOrganizationModelBinaryFileUploadRequest represents a request trigger a model
// inference by uploading a binary file as the input.
type TriggerOrganizationModelBinaryFileUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model , which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inference input as a binary file.
	TaskInput *TaskInputStream `protobuf:"bytes,2,opt,name=task_input,json=taskInput,proto3" json:"task_input,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TriggerOrganizationModelBinaryFileUploadRequest) Reset() {
	*x = TriggerOrganizationModelBinaryFileUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOrganizationModelBinaryFileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOrganizationModelBinaryFileUploadRequest) ProtoMessage() {}

func (x *TriggerOrganizationModelBinaryFileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOrganizationModelBinaryFileUploadRequest.ProtoReflect.Descriptor instead.
func (*TriggerOrganizationModelBinaryFileUploadRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{110}
}

func (x *TriggerOrganizationModelBinaryFileUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriggerOrganizationModelBinaryFileUploadRequest) GetTaskInput() *TaskInputStream {
	if x != nil {
		return x.TaskInput
	}
	return nil
}

func (x *TriggerOrganizationModelBinaryFileUploadRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// TriggerOrganizationModelBinaryFileUploadResponse contains the model inference results.
type TriggerOrganizationModelBinaryFileUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task type.
	Task v1alpha.Task `protobuf:"varint,1,opt,name=task,proto3,enum=common.task.v1alpha.Task" json:"task,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,2,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *TriggerOrganizationModelBinaryFileUploadResponse) Reset() {
	*x = TriggerOrganizationModelBinaryFileUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerOrganizationModelBinaryFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerOrganizationModelBinaryFileUploadResponse) ProtoMessage() {}

func (x *TriggerOrganizationModelBinaryFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerOrganizationModelBinaryFileUploadResponse.ProtoReflect.Descriptor instead.
func (*TriggerOrganizationModelBinaryFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{111}
}

func (x *TriggerOrganizationModelBinaryFileUploadResponse) GetTask() v1alpha.Task {
	if x != nil {
		return x.Task
	}
	return v1alpha.Task(0)
}

func (x *TriggerOrganizationModelBinaryFileUploadResponse) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// GetModelOperationRequest represents a request to fetch a long-running
// operation performed on a model.
type GetModelOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access ID.
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// View allows clients to specify the desired model view in the response.
	//
	// Deprecated: Marked as deprecated in model/model/v1alpha/model.proto.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetModelOperationRequest) Reset() {
	*x = GetModelOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelOperationRequest) ProtoMessage() {}

func (x *GetModelOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelOperationRequest.ProtoReflect.Descriptor instead.
func (*GetModelOperationRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{112}
}

func (x *GetModelOperationRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

// Deprecated: Marked as deprecated in model/model/v1alpha/model.proto.
func (x *GetModelOperationRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetModelOperationRequest represents a request to query a long-running
// operation.
type GetModelOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The long-running operation.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetModelOperationResponse) Reset() {
	*x = GetModelOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelOperationResponse) ProtoMessage() {}

func (x *GetModelOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelOperationResponse.ProtoReflect.Descriptor instead.
func (*GetModelOperationResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{113}
}

func (x *GetModelOperationResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// LatestOperation represents an internal message for GetLatestModelOperation Response
type LatestOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input request
	Request *TriggerNamespaceModelRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	// Output response
	Response *TriggerNamespaceModelResponse `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *LatestOperation) Reset() {
	*x = LatestOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestOperation) ProtoMessage() {}

func (x *LatestOperation) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestOperation.ProtoReflect.Descriptor instead.
func (*LatestOperation) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{114}
}

func (x *LatestOperation) GetRequest() *TriggerNamespaceModelRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *LatestOperation) GetResponse() *TriggerNamespaceModelResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// GetUserLatestModelOperationRequest represents a request to fetch the latest long-running
// operation performed on a model for a user.
type GetUserLatestModelOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// View allows clients to specify the desired operation result in the response.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetUserLatestModelOperationRequest) Reset() {
	*x = GetUserLatestModelOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLatestModelOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLatestModelOperationRequest) ProtoMessage() {}

func (x *GetUserLatestModelOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLatestModelOperationRequest.ProtoReflect.Descriptor instead.
func (*GetUserLatestModelOperationRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{115}
}

func (x *GetUserLatestModelOperationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserLatestModelOperationRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetUserLatestModelOperationRequest represents a request to query a long-running
// operation.
type GetUserLatestModelOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The long-running operation.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetUserLatestModelOperationResponse) Reset() {
	*x = GetUserLatestModelOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLatestModelOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLatestModelOperationResponse) ProtoMessage() {}

func (x *GetUserLatestModelOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLatestModelOperationResponse.ProtoReflect.Descriptor instead.
func (*GetUserLatestModelOperationResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{116}
}

func (x *GetUserLatestModelOperationResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// GetOrganizationLatestModelOperationRequest represents a request to fetch the latest long-running
// operation performed on a model for a user.
type GetOrganizationLatestModelOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent organization
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// View allows clients to specify the desired operation result in the response.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetOrganizationLatestModelOperationRequest) Reset() {
	*x = GetOrganizationLatestModelOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationLatestModelOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationLatestModelOperationRequest) ProtoMessage() {}

func (x *GetOrganizationLatestModelOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationLatestModelOperationRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationLatestModelOperationRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{117}
}

func (x *GetOrganizationLatestModelOperationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOrganizationLatestModelOperationRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetOrganizationLatestModelOperationRequest represents a request to query a long-running
// operation.
type GetOrganizationLatestModelOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The long-running operation.
	Operation *longrunningpb.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetOrganizationLatestModelOperationResponse) Reset() {
	*x = GetOrganizationLatestModelOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationLatestModelOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationLatestModelOperationResponse) ProtoMessage() {}

func (x *GetOrganizationLatestModelOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationLatestModelOperationResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationLatestModelOperationResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{118}
}

func (x *GetOrganizationLatestModelOperationResponse) GetOperation() *longrunningpb.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// ListAvailableRegionsRequest represents a request to fetch a list
// of available regions and hardware types a model can be deployed on.
type ListAvailableRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAvailableRegionsRequest) Reset() {
	*x = ListAvailableRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailableRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableRegionsRequest) ProtoMessage() {}

func (x *ListAvailableRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableRegionsRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableRegionsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{119}
}

// ListAvailableRegionsResponse contains a list of available
// regions and hardware types a model can be deployed on.
type ListAvailableRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of available region
	Regions []*Region `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *ListAvailableRegionsResponse) Reset() {
	*x = ListAvailableRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailableRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableRegionsResponse) ProtoMessage() {}

func (x *ListAvailableRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableRegionsResponse.ProtoReflect.Descriptor instead.
func (*ListAvailableRegionsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{120}
}

func (x *ListAvailableRegionsResponse) GetRegions() []*Region {
	if x != nil {
		return x.Regions
	}
	return nil
}

// ListModelsAdminRequest represents a request to list all models from all users
// by admin
type ListModelsAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Page size: the maximum number of resources to return. The service may
	// return fewer than this value. If unspecified, at most 10 models will be
	// returned. The maximum value is 100; values above 100 will be coereced to
	// 100.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Model view (default is VIEW_BASIC)
	// VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
	// VIEW_FULL: show full information
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
	// Return soft_deleted models
	ShowDeleted *bool `protobuf:"varint,4,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,5,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListModelsAdminRequest) Reset() {
	*x = ListModelsAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelsAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsAdminRequest) ProtoMessage() {}

func (x *ListModelsAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsAdminRequest.ProtoReflect.Descriptor instead.
func (*ListModelsAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{121}
}

func (x *ListModelsAdminRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListModelsAdminRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListModelsAdminRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListModelsAdminRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

func (x *ListModelsAdminRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

// ListModelsAdminResponse represents a response for a list of models
type ListModelsAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a list of Models
	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of models.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListModelsAdminResponse) Reset() {
	*x = ListModelsAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelsAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsAdminResponse) ProtoMessage() {}

func (x *ListModelsAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsAdminResponse.ProtoReflect.Descriptor instead.
func (*ListModelsAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{122}
}

func (x *ListModelsAdminResponse) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *ListModelsAdminResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListModelsAdminResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// LookUpModelAdminRequest represents a request to query a model via
// permalink by admin
type LookUpModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permalink of a model. For example:
	// "models/{uid}"
	Permalink string `protobuf:"bytes,1,opt,name=permalink,proto3" json:"permalink,omitempty"`
	// Model view (default is VIEW_BASIC)
	// VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
	// VIEW_FULL: show full information
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *LookUpModelAdminRequest) Reset() {
	*x = LookUpModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpModelAdminRequest) ProtoMessage() {}

func (x *LookUpModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpModelAdminRequest.ProtoReflect.Descriptor instead.
func (*LookUpModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{123}
}

func (x *LookUpModelAdminRequest) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

func (x *LookUpModelAdminRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// LookUpModelResponse represents a response for a model
type LookUpModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A model resource
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *LookUpModelAdminResponse) Reset() {
	*x = LookUpModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpModelAdminResponse) ProtoMessage() {}

func (x *LookUpModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpModelAdminResponse.ProtoReflect.Descriptor instead.
func (*LookUpModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{124}
}

func (x *LookUpModelAdminResponse) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

// DeployUserModelAdminRequest represents a request to deploy a model to online state
type DeployUserModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Model image digest
	Digest string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *DeployUserModelAdminRequest) Reset() {
	*x = DeployUserModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployUserModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployUserModelAdminRequest) ProtoMessage() {}

func (x *DeployUserModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployUserModelAdminRequest.ProtoReflect.Descriptor instead.
func (*DeployUserModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{125}
}

func (x *DeployUserModelAdminRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeployUserModelAdminRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeployUserModelAdminRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// DeployUserModelAdminResponse represents a response for a deployed model
type DeployUserModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployUserModelAdminResponse) Reset() {
	*x = DeployUserModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployUserModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployUserModelAdminResponse) ProtoMessage() {}

func (x *DeployUserModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployUserModelAdminResponse.ProtoReflect.Descriptor instead.
func (*DeployUserModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{126}
}

// DeployOrganizationModelAdminRequest represents a request to deploy a model to online state
type DeployOrganizationModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `organizations/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Model image digest
	Digest string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *DeployOrganizationModelAdminRequest) Reset() {
	*x = DeployOrganizationModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployOrganizationModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployOrganizationModelAdminRequest) ProtoMessage() {}

func (x *DeployOrganizationModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployOrganizationModelAdminRequest.ProtoReflect.Descriptor instead.
func (*DeployOrganizationModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{127}
}

func (x *DeployOrganizationModelAdminRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeployOrganizationModelAdminRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeployOrganizationModelAdminRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// DeployOrganizationModelAdminResponse represents a response for a deployed model
type DeployOrganizationModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployOrganizationModelAdminResponse) Reset() {
	*x = DeployOrganizationModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployOrganizationModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployOrganizationModelAdminResponse) ProtoMessage() {}

func (x *DeployOrganizationModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployOrganizationModelAdminResponse.ProtoReflect.Descriptor instead.
func (*DeployOrganizationModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{128}
}

// UndeployUserModelAdminRequest represents a request to undeploy a model to offline
// state
type UndeployUserModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `users/{user.id}/models/{model.id}`.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Model image digest
	Digest string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *UndeployUserModelAdminRequest) Reset() {
	*x = UndeployUserModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployUserModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployUserModelAdminRequest) ProtoMessage() {}

func (x *UndeployUserModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployUserModelAdminRequest.ProtoReflect.Descriptor instead.
func (*UndeployUserModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{129}
}

func (x *UndeployUserModelAdminRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UndeployUserModelAdminRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UndeployUserModelAdminRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// UndeployUserModelAdminResponse represents a response for a undeployed model
type UndeployUserModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UndeployUserModelAdminResponse) Reset() {
	*x = UndeployUserModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployUserModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployUserModelAdminResponse) ProtoMessage() {}

func (x *UndeployUserModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployUserModelAdminResponse.ProtoReflect.Descriptor instead.
func (*UndeployUserModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{130}
}

// UndeployOrganizationModelAdminRequest represents a request to undeploy a model to offline
// state
type UndeployOrganizationModelAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the model, which allows its access by parent user
	// and ID.
	// - Format: `organizations/{organization.id}/models/{model.id}`.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Model version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Model image digest
	Digest string `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *UndeployOrganizationModelAdminRequest) Reset() {
	*x = UndeployOrganizationModelAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployOrganizationModelAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployOrganizationModelAdminRequest) ProtoMessage() {}

func (x *UndeployOrganizationModelAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployOrganizationModelAdminRequest.ProtoReflect.Descriptor instead.
func (*UndeployOrganizationModelAdminRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{131}
}

func (x *UndeployOrganizationModelAdminRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UndeployOrganizationModelAdminRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UndeployOrganizationModelAdminRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

// UndeployOrganizationModelAdminResponse represents a response for a undeployed model
type UndeployOrganizationModelAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UndeployOrganizationModelAdminResponse) Reset() {
	*x = UndeployOrganizationModelAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndeployOrganizationModelAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployOrganizationModelAdminResponse) ProtoMessage() {}

func (x *UndeployOrganizationModelAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployOrganizationModelAdminResponse.ProtoReflect.Descriptor instead.
func (*UndeployOrganizationModelAdminResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{132}
}

// ModelRun contains information about a run of models.
type ModelRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Model Run UUID.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Model UUID.
	ModelUid string `protobuf:"bytes,2,opt,name=model_uid,json=modelUid,proto3" json:"model_uid,omitempty"`
	// Model run status.
	Status v1alpha1.RunStatus `protobuf:"varint,3,opt,name=status,proto3,enum=common.run.v1alpha.RunStatus" json:"status,omitempty"`
	// Run source.
	Source v1alpha1.RunSource `protobuf:"varint,4,opt,name=source,proto3,enum=common.run.v1alpha.RunSource" json:"source,omitempty"`
	// Run total duration in milliseconds.
	TotalDuration *int32 `protobuf:"varint,5,opt,name=total_duration,json=totalDuration,proto3,oneof" json:"total_duration,omitempty"`
	// Run end time.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	// Run requester ID. If current viewing requester is not the owner, it will return null.
	RequesterId *string `protobuf:"bytes,7,opt,name=requester_id,json=requesterId,proto3,oneof" json:"requester_id,omitempty"`
	// The amount of Instill Credit consumed by the run. This field will only be present on Instill Cloud.
	CreditAmount *float32 `protobuf:"fixed32,8,opt,name=credit_amount,json=creditAmount,proto3,oneof" json:"credit_amount,omitempty"`
	// Error message occurred during model run.
	Error *string `protobuf:"bytes,9,opt,name=error,proto3,oneof" json:"error,omitempty"`
	// Model run created time.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Model run updated time.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The model version identifier, which is same as image tag.
	Version string `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	// Model inference input.
	TaskInputs []*TaskInput `protobuf:"bytes,13,rep,name=task_inputs,json=taskInputs,proto3" json:"task_inputs,omitempty"`
	// Model inference outputs.
	TaskOutputs []*TaskOutput `protobuf:"bytes,14,rep,name=task_outputs,json=taskOutputs,proto3" json:"task_outputs,omitempty"`
}

func (x *ModelRun) Reset() {
	*x = ModelRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelRun) ProtoMessage() {}

func (x *ModelRun) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelRun.ProtoReflect.Descriptor instead.
func (*ModelRun) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{133}
}

func (x *ModelRun) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ModelRun) GetModelUid() string {
	if x != nil {
		return x.ModelUid
	}
	return ""
}

func (x *ModelRun) GetStatus() v1alpha1.RunStatus {
	if x != nil {
		return x.Status
	}
	return v1alpha1.RunStatus(0)
}

func (x *ModelRun) GetSource() v1alpha1.RunSource {
	if x != nil {
		return x.Source
	}
	return v1alpha1.RunSource(0)
}

func (x *ModelRun) GetTotalDuration() int32 {
	if x != nil && x.TotalDuration != nil {
		return *x.TotalDuration
	}
	return 0
}

func (x *ModelRun) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ModelRun) GetRequesterId() string {
	if x != nil && x.RequesterId != nil {
		return *x.RequesterId
	}
	return ""
}

func (x *ModelRun) GetCreditAmount() float32 {
	if x != nil && x.CreditAmount != nil {
		return *x.CreditAmount
	}
	return 0
}

func (x *ModelRun) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *ModelRun) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ModelRun) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ModelRun) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ModelRun) GetTaskInputs() []*TaskInput {
	if x != nil {
		return x.TaskInputs
	}
	return nil
}

func (x *ModelRun) GetTaskOutputs() []*TaskOutput {
	if x != nil {
		return x.TaskOutputs
	}
	return nil
}

// ListModelRunsRequest represents a request to list of model runs.
type ListModelRunsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of runs to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	// View allows clients to specify the desired run view in the response.
	// The basic view excludes input / output data.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=model.model.v1alpha.View,oneof" json:"view,omitempty"`
	// Sort the results by the given expression.
	// Format: `field [ASC | DESC], where `field` can be:
	// - `create_time`
	// - `update_time`
	// By default, results are sorted by descending creation time.
	OrderBy *string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	// Namespace ID.
	NamespaceId string `protobuf:"bytes,5,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Model ID.
	ModelId string `protobuf:"bytes,6,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	// The filter can be applied to the following fields:
	// - `create_time`
	Filter *string `protobuf:"bytes,7,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListModelRunsRequest) Reset() {
	*x = ListModelRunsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelRunsRequest) ProtoMessage() {}

func (x *ListModelRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelRunsRequest.ProtoReflect.Descriptor instead.
func (*ListModelRunsRequest) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{134}
}

func (x *ListModelRunsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListModelRunsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListModelRunsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListModelRunsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListModelRunsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListModelRunsRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *ListModelRunsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

// ListModelRunsResponse contains a list of model runs.
type ListModelRunsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of runs resources.
	Runs []*ModelRun `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	// Total number of runs.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListModelRunsResponse) Reset() {
	*x = ListModelRunsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_model_v1alpha_model_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelRunsResponse) ProtoMessage() {}

func (x *ListModelRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_v1alpha_model_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelRunsResponse.ProtoReflect.Descriptor instead.
func (*ListModelRunsResponse) Descriptor() ([]byte, []int) {
	return file_model_model_v1alpha_model_proto_rawDescGZIP(), []int{135}
}

func (x *ListModelRunsResponse) GetRuns() []*ModelRun {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *ListModelRunsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListModelRunsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListModelRunsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

var File_model_model_v1alpha_model_proto protoreflect.FileDescriptor

var file_model_model_v1alpha_model_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x2b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x75, 0x6e, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6f, 0x63, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x33, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x76,
	0x65, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x14,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00,
	0x52, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x76, 0x0a, 0x10, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x13, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a,
	0x14, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x77, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x06, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xa4, 0x0d, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x92, 0x41, 0x10,
	0xca, 0x3e, 0x0d, 0xfa, 0x02, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0xe0, 0x41, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41,
	0x02, 0xe0, 0x41, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b,
	0xe0, 0x41, 0x02, 0xe0, 0x41, 0x05, 0xfa, 0x41, 0x22, 0x0a, 0x20, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x06, 0xe0, 0x41,
	0x02, 0xe0, 0x41, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x06, 0xe0, 0x41,
	0x02, 0xe0, 0x41, 0x05, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x4a, 0x0a, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0a,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x06, 0xe0, 0x41, 0x01, 0xe0, 0x41, 0x03,
	0x48, 0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41,
	0x02, 0xe0, 0x41, 0x05, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x08,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x20, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x02, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x05, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x06, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x41, 0x0a, 0x0d,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x57, 0x0a, 0x0a, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x49, 0x53, 0x49, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54,
	0x59, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x56,
	0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43,
	0x10, 0x02, 0x3a, 0x52, 0xea, 0x41, 0x4f, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x21, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x7d,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x69,
	0x64, 0x7d, 0x12, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x75, 0x69, 0x64, 0x7d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4a, 0x04,
	0x08, 0x08, 0x10, 0x09, 0x4a, 0x04, 0x08, 0x10, 0x10, 0x11, 0x22, 0xbf, 0x03, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x48, 0x06, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x22, 0x8f, 0x01, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x79,
	0x0a, 0x12, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x65,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x47, 0x0a, 0x13, 0x4c, 0x6f, 0x6f,
	0x6b, 0x55, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x22, 0xf0, 0x03, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x4f, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x06, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x77, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x50, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x22, 0xde, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x22, 0x50, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x65, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a,
	0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x83, 0x01, 0x0a,
	0x1a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x1b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x22, 0x6a, 0x0a, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0x75, 0x0a, 0x21, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xc7, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x22, 0xc7, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x22, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xcb, 0x01, 0x0a, 0x1c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01,
	0x0a, 0x1d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x42,
	0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x21, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x22, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x01,
	0x0a, 0x22, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0b,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x23, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xb7, 0x01,
	0x0a, 0x27, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x28, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdf, 0x01, 0x0a, 0x2c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x48,
	0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x2d, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x47, 0x0a,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x32, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0xb2,
	0x01, 0x0a, 0x33, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x47, 0x0a, 0x0c, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x67, 0x0a, 0x28, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x21, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0xa8, 0x01, 0x0a, 0x22, 0x55, 0x6e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x22, 0x2b, 0x0a, 0x23, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x94,
	0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x92, 0x41, 0x0f,
	0xca, 0x3e, 0x0c, 0xfa, 0x02, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0,
	0x41, 0x02, 0xfa, 0x41, 0x18, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x22, 0x8d, 0x04, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x92, 0x41, 0x0f, 0xca, 0x3e, 0x0c, 0xfa, 0x02, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x12,
	0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63,
	0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x4f,
	0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x05,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x06, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36,
	0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x48,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4b, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x64, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41,
	0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6e, 0x65,
	0x77, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92,
	0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x16, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x69, 0x0a, 0x1b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x70, 0x0a, 0x1c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x22, 0xc6, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa,
	0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x22, 0xae, 0x01, 0x0a,
	0x1d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x8a, 0x01,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92,
	0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x08, 0x0a,
	0x09, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43,
	0x0a, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6b, 0x65, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x6f, 0x63, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x63, 0x72, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x63, 0x72, 0x12, 0x65, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x65, 0x0a, 0x15, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00,
	0x52, 0x14, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x6f, 0x0a, 0x19, 0x76, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x48, 0x00, 0x52, 0x17, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0b, 0x75,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0xaa, 0x08, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x58, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a,
	0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x37, 0x0a, 0x03, 0x6f, 0x63, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4f, 0x63, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x63, 0x72, 0x12, 0x6b, 0x0a, 0x15, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x00,
	0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x15, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74,
	0x69, 0x63, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6d, 0x61,
	0x6e, 0x74, 0x69, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x14, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x4e, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x53, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x48, 0x00, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x6f, 0x0a, 0x19, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52,
	0x17, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0xca, 0x08, 0x0a,
	0x0a, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x0e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x03, 0x6f, 0x63, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x63, 0x72, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x63,
	0x72, 0x12, 0x6b, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b,
	0x0a, 0x15, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0d, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x54,
	0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x66, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x48, 0x00, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x75, 0x0a, 0x19, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x17, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x4f,
	0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42,
	0x08, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x17, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x18, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x1c, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0,
	0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x1d, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x1d,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15,
	0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22,
	0x93, 0x01, 0x0a, 0x1e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x22, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca,
	0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x67,
	0x0a, 0x23, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xde, 0x01, 0x0a, 0x27, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41,
	0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x48, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x28, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x47, 0x0a, 0x0c, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x50, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x17, 0xca, 0x3e, 0x14, 0xfa, 0x02,
	0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x9d, 0x04,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x17, 0xca, 0x3e, 0x14,
	0xfa, 0x02, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x06, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x22, 0x9b, 0x01,
	0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e,
	0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41,
	0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x50, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0x99, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x40, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0x53, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x74, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01,
	0x0a, 0x1e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e,
	0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0a, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1f, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x22, 0x92, 0x01, 0x0a, 0x1d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x1e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x79, 0x0a, 0x23, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e,
	0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x24, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xd6,
	0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca,
	0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa,
	0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e,
	0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x9a, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a,
	0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18,
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a,
	0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x1f, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e,
	0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41,
	0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x20, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xdf, 0x01, 0x0a,
	0x24, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x69,
	0x0a, 0x25, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc1, 0x01, 0x0a, 0x25, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x9b, 0x01,
	0x0a, 0x26, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0b,
	0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x2a,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a,
	0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18,
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44,
	0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x2b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xee, 0x01, 0x0a, 0x2f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa,
	0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a,
	0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63,
	0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a,
	0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x30, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12,
	0x47, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x73,
	0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x05, 0xe0, 0x41, 0x01, 0x18, 0x01, 0x48, 0x00, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x0f,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x04, 0x08, 0x01,
	0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xb2, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92,
	0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x62, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e,
	0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x6a, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x55, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x04,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x94, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x7e, 0x0a, 0x17, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x22, 0x4c, 0x0a, 0x18, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x22, 0xab, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x36, 0x92, 0x41, 0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18,
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02,
	0x22, 0x24, 0x0a, 0x1c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0xbb, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41,
	0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c,
	0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x22, 0x26, 0x0a, 0x24, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a,
	0x1d, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41,
	0x15, 0xca, 0x3e, 0x12, 0xfa, 0x02, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x26, 0x0a, 0x1e,
	0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x22, 0xbd, 0x01, 0x0a, 0x25, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41,
	0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c,
	0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x22, 0x28, 0x0a, 0x26, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7,
	0x06, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x12, 0x15, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x55, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x42, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06,
	0xe0, 0x41, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x42, 0x06, 0xe0, 0x41, 0x03,
	0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0b,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b,
	0x74, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xdb, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x75, 0x6e, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x2a, 0xac, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4c,
	0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x08,
	0x22, 0x04, 0x08, 0x02, 0x10, 0x02, 0x42, 0xd7, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x42, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e,
	0x2d, 0x67, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x4d, 0x4d, 0x58, 0xaa, 0x02, 0x13, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0xca, 0x02, 0x13, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x1f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_model_v1alpha_model_proto_rawDescOnce sync.Once
	file_model_model_v1alpha_model_proto_rawDescData = file_model_model_v1alpha_model_proto_rawDesc
)

func file_model_model_v1alpha_model_proto_rawDescGZIP() []byte {
	file_model_model_v1alpha_model_proto_rawDescOnce.Do(func() {
		file_model_model_v1alpha_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_model_v1alpha_model_proto_rawDescData)
	})
	return file_model_model_v1alpha_model_proto_rawDescData
}

var file_model_model_v1alpha_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_model_model_v1alpha_model_proto_msgTypes = make([]protoimpl.MessageInfo, 136)
var file_model_model_v1alpha_model_proto_goTypes = []interface{}{
	(State)(0),                                                  // 0: model.model.v1alpha.State
	(Model_Visibility)(0),                                       // 1: model.model.v1alpha.Model.Visibility
	(*LivenessRequest)(nil),                                     // 2: model.model.v1alpha.LivenessRequest
	(*LivenessResponse)(nil),                                    // 3: model.model.v1alpha.LivenessResponse
	(*ReadinessRequest)(nil),                                    // 4: model.model.v1alpha.ReadinessRequest
	(*ReadinessResponse)(nil),                                   // 5: model.model.v1alpha.ReadinessResponse
	(*Region)(nil),                                              // 6: model.model.v1alpha.Region
	(*ModelVersion)(nil),                                        // 7: model.model.v1alpha.ModelVersion
	(*Model)(nil),                                               // 8: model.model.v1alpha.Model
	(*ListModelsRequest)(nil),                                   // 9: model.model.v1alpha.ListModelsRequest
	(*ListModelsResponse)(nil),                                  // 10: model.model.v1alpha.ListModelsResponse
	(*LookUpModelRequest)(nil),                                  // 11: model.model.v1alpha.LookUpModelRequest
	(*LookUpModelResponse)(nil),                                 // 12: model.model.v1alpha.LookUpModelResponse
	(*ListNamespaceModelsRequest)(nil),                          // 13: model.model.v1alpha.ListNamespaceModelsRequest
	(*ListNamespaceModelsResponse)(nil),                         // 14: model.model.v1alpha.ListNamespaceModelsResponse
	(*CreateNamespaceModelRequest)(nil),                         // 15: model.model.v1alpha.CreateNamespaceModelRequest
	(*CreateNamespaceModelResponse)(nil),                        // 16: model.model.v1alpha.CreateNamespaceModelResponse
	(*GetNamespaceModelRequest)(nil),                            // 17: model.model.v1alpha.GetNamespaceModelRequest
	(*GetNamespaceModelResponse)(nil),                           // 18: model.model.v1alpha.GetNamespaceModelResponse
	(*UpdateNamespaceModelRequest)(nil),                         // 19: model.model.v1alpha.UpdateNamespaceModelRequest
	(*UpdateNamespaceModelResponse)(nil),                        // 20: model.model.v1alpha.UpdateNamespaceModelResponse
	(*DeleteNamespaceModelRequest)(nil),                         // 21: model.model.v1alpha.DeleteNamespaceModelRequest
	(*DeleteNamespaceModelResponse)(nil),                        // 22: model.model.v1alpha.DeleteNamespaceModelResponse
	(*RenameNamespaceModelRequest)(nil),                         // 23: model.model.v1alpha.RenameNamespaceModelRequest
	(*RenameNamespaceModelResponse)(nil),                        // 24: model.model.v1alpha.RenameNamespaceModelResponse
	(*WatchNamespaceModelRequest)(nil),                          // 25: model.model.v1alpha.WatchNamespaceModelRequest
	(*WatchNamespaceModelResponse)(nil),                         // 26: model.model.v1alpha.WatchNamespaceModelResponse
	(*WatchNamespaceLatestModelRequest)(nil),                    // 27: model.model.v1alpha.WatchNamespaceLatestModelRequest
	(*WatchNamespaceLatestModelResponse)(nil),                   // 28: model.model.v1alpha.WatchNamespaceLatestModelResponse
	(*ListNamespaceModelVersionsRequest)(nil),                   // 29: model.model.v1alpha.ListNamespaceModelVersionsRequest
	(*ListNamespaceModelVersionsResponse)(nil),                  // 30: model.model.v1alpha.ListNamespaceModelVersionsResponse
	(*DeleteNamespaceModelVersionRequest)(nil),                  // 31: model.model.v1alpha.DeleteNamespaceModelVersionRequest
	(*DeleteNamespaceModelVersionResponse)(nil),                 // 32: model.model.v1alpha.DeleteNamespaceModelVersionResponse
	(*TriggerNamespaceModelRequest)(nil),                        // 33: model.model.v1alpha.TriggerNamespaceModelRequest
	(*TriggerNamespaceModelResponse)(nil),                       // 34: model.model.v1alpha.TriggerNamespaceModelResponse
	(*TriggerAsyncNamespaceModelRequest)(nil),                   // 35: model.model.v1alpha.TriggerAsyncNamespaceModelRequest
	(*TriggerAsyncNamespaceModelResponse)(nil),                  // 36: model.model.v1alpha.TriggerAsyncNamespaceModelResponse
	(*TriggerNamespaceLatestModelRequest)(nil),                  // 37: model.model.v1alpha.TriggerNamespaceLatestModelRequest
	(*TriggerNamespaceLatestModelResponse)(nil),                 // 38: model.model.v1alpha.TriggerNamespaceLatestModelResponse
	(*TriggerAsyncNamespaceLatestModelRequest)(nil),             // 39: model.model.v1alpha.TriggerAsyncNamespaceLatestModelRequest
	(*TriggerAsyncNamespaceLatestModelResponse)(nil),            // 40: model.model.v1alpha.TriggerAsyncNamespaceLatestModelResponse
	(*TriggerNamespaceModelBinaryFileUploadRequest)(nil),        // 41: model.model.v1alpha.TriggerNamespaceModelBinaryFileUploadRequest
	(*TriggerNamespaceModelBinaryFileUploadResponse)(nil),       // 42: model.model.v1alpha.TriggerNamespaceModelBinaryFileUploadResponse
	(*TriggerNamespaceLatestModelBinaryFileUploadRequest)(nil),  // 43: model.model.v1alpha.TriggerNamespaceLatestModelBinaryFileUploadRequest
	(*TriggerNamespaceLatestModelBinaryFileUploadResponse)(nil), // 44: model.model.v1alpha.TriggerNamespaceLatestModelBinaryFileUploadResponse
	(*GetNamespaceLatestModelOperationRequest)(nil),             // 45: model.model.v1alpha.GetNamespaceLatestModelOperationRequest
	(*GetNamespaceLatestModelOperationResponse)(nil),            // 46: model.model.v1alpha.GetNamespaceLatestModelOperationResponse
	(*DeployNamespaceModelAdminRequest)(nil),                    // 47: model.model.v1alpha.DeployNamespaceModelAdminRequest
	(*DeployNamespaceModelAdminResponse)(nil),                   // 48: model.model.v1alpha.DeployNamespaceModelAdminResponse
	(*UndeployNamespaceModelAdminRequest)(nil),                  // 49: model.model.v1alpha.UndeployNamespaceModelAdminRequest
	(*UndeployNamespaceModelAdminResponse)(nil),                 // 50: model.model.v1alpha.UndeployNamespaceModelAdminResponse
	(*CreateUserModelRequest)(nil),                              // 51: model.model.v1alpha.CreateUserModelRequest
	(*CreateUserModelResponse)(nil),                             // 52: model.model.v1alpha.CreateUserModelResponse
	(*ListUserModelsRequest)(nil),                               // 53: model.model.v1alpha.ListUserModelsRequest
	(*ListUserModelsResponse)(nil),                              // 54: model.model.v1alpha.ListUserModelsResponse
	(*GetUserModelRequest)(nil),                                 // 55: model.model.v1alpha.GetUserModelRequest
	(*GetUserModelResponse)(nil),                                // 56: model.model.v1alpha.GetUserModelResponse
	(*UpdateUserModelRequest)(nil),                              // 57: model.model.v1alpha.UpdateUserModelRequest
	(*UpdateUserModelResponse)(nil),                             // 58: model.model.v1alpha.UpdateUserModelResponse
	(*DeleteUserModelRequest)(nil),                              // 59: model.model.v1alpha.DeleteUserModelRequest
	(*DeleteUserModelResponse)(nil),                             // 60: model.model.v1alpha.DeleteUserModelResponse
	(*RenameUserModelRequest)(nil),                              // 61: model.model.v1alpha.RenameUserModelRequest
	(*RenameUserModelResponse)(nil),                             // 62: model.model.v1alpha.RenameUserModelResponse
	(*WatchUserModelRequest)(nil),                               // 63: model.model.v1alpha.WatchUserModelRequest
	(*WatchUserModelResponse)(nil),                              // 64: model.model.v1alpha.WatchUserModelResponse
	(*WatchUserLatestModelRequest)(nil),                         // 65: model.model.v1alpha.WatchUserLatestModelRequest
	(*WatchUserLatestModelResponse)(nil),                        // 66: model.model.v1alpha.WatchUserLatestModelResponse
	(*ListUserModelVersionsRequest)(nil),                        // 67: model.model.v1alpha.ListUserModelVersionsRequest
	(*ListUserModelVersionsResponse)(nil),                       // 68: model.model.v1alpha.ListUserModelVersionsResponse
	(*DeleteUserModelVersionRequest)(nil),                       // 69: model.model.v1alpha.DeleteUserModelVersionRequest
	(*DeleteUserModelVersionResponse)(nil),                      // 70: model.model.v1alpha.DeleteUserModelVersionResponse
	(*TaskInput)(nil),                                           // 71: model.model.v1alpha.TaskInput
	(*TaskInputStream)(nil),                                     // 72: model.model.v1alpha.TaskInputStream
	(*TaskOutput)(nil),                                          // 73: model.model.v1alpha.TaskOutput
	(*TriggerUserModelRequest)(nil),                             // 74: model.model.v1alpha.TriggerUserModelRequest
	(*TriggerUserModelResponse)(nil),                            // 75: model.model.v1alpha.TriggerUserModelResponse
	(*TriggerAsyncUserModelRequest)(nil),                        // 76: model.model.v1alpha.TriggerAsyncUserModelRequest
	(*TriggerAsyncUserModelResponse)(nil),                       // 77: model.model.v1alpha.TriggerAsyncUserModelResponse
	(*TriggerUserLatestModelRequest)(nil),                       // 78: model.model.v1alpha.TriggerUserLatestModelRequest
	(*TriggerUserLatestModelResponse)(nil),                      // 79: model.model.v1alpha.TriggerUserLatestModelResponse
	(*TriggerAsyncUserLatestModelRequest)(nil),                  // 80: model.model.v1alpha.TriggerAsyncUserLatestModelRequest
	(*TriggerAsyncUserLatestModelResponse)(nil),                 // 81: model.model.v1alpha.TriggerAsyncUserLatestModelResponse
	(*TriggerUserModelBinaryFileUploadRequest)(nil),             // 82: model.model.v1alpha.TriggerUserModelBinaryFileUploadRequest
	(*TriggerUserModelBinaryFileUploadResponse)(nil),            // 83: model.model.v1alpha.TriggerUserModelBinaryFileUploadResponse
	(*CreateOrganizationModelRequest)(nil),                      // 84: model.model.v1alpha.CreateOrganizationModelRequest
	(*CreateOrganizationModelResponse)(nil),                     // 85: model.model.v1alpha.CreateOrganizationModelResponse
	(*ListOrganizationModelsRequest)(nil),                       // 86: model.model.v1alpha.ListOrganizationModelsRequest
	(*ListOrganizationModelsResponse)(nil),                      // 87: model.model.v1alpha.ListOrganizationModelsResponse
	(*GetOrganizationModelRequest)(nil),                         // 88: model.model.v1alpha.GetOrganizationModelRequest
	(*GetOrganizationModelResponse)(nil),                        // 89: model.model.v1alpha.GetOrganizationModelResponse
	(*UpdateOrganizationModelRequest)(nil),                      // 90: model.model.v1alpha.UpdateOrganizationModelRequest
	(*UpdateOrganizationModelResponse)(nil),                     // 91: model.model.v1alpha.UpdateOrganizationModelResponse
	(*DeleteOrganizationModelRequest)(nil),                      // 92: model.model.v1alpha.DeleteOrganizationModelRequest
	(*DeleteOrganizationModelResponse)(nil),                     // 93: model.model.v1alpha.DeleteOrganizationModelResponse
	(*RenameOrganizationModelRequest)(nil),                      // 94: model.model.v1alpha.RenameOrganizationModelRequest
	(*RenameOrganizationModelResponse)(nil),                     // 95: model.model.v1alpha.RenameOrganizationModelResponse
	(*WatchOrganizationModelRequest)(nil),                       // 96: model.model.v1alpha.WatchOrganizationModelRequest
	(*WatchOrganizationModelResponse)(nil),                      // 97: model.model.v1alpha.WatchOrganizationModelResponse
	(*WatchOrganizationLatestModelRequest)(nil),                 // 98: model.model.v1alpha.WatchOrganizationLatestModelRequest
	(*WatchOrganizationLatestModelResponse)(nil),                // 99: model.model.v1alpha.WatchOrganizationLatestModelResponse
	(*ListOrganizationModelVersionsRequest)(nil),                // 100: model.model.v1alpha.ListOrganizationModelVersionsRequest
	(*ListOrganizationModelVersionsResponse)(nil),               // 101: model.model.v1alpha.ListOrganizationModelVersionsResponse
	(*DeleteOrganizationModelVersionRequest)(nil),               // 102: model.model.v1alpha.DeleteOrganizationModelVersionRequest
	(*DeleteOrganizationModelVersionResponse)(nil),              // 103: model.model.v1alpha.DeleteOrganizationModelVersionResponse
	(*TriggerOrganizationModelRequest)(nil),                     // 104: model.model.v1alpha.TriggerOrganizationModelRequest
	(*TriggerOrganizationModelResponse)(nil),                    // 105: model.model.v1alpha.TriggerOrganizationModelResponse
	(*TriggerAsyncOrganizationModelRequest)(nil),                // 106: model.model.v1alpha.TriggerAsyncOrganizationModelRequest
	(*TriggerAsyncOrganizationModelResponse)(nil),               // 107: model.model.v1alpha.TriggerAsyncOrganizationModelResponse
	(*TriggerOrganizationLatestModelRequest)(nil),               // 108: model.model.v1alpha.TriggerOrganizationLatestModelRequest
	(*TriggerOrganizationLatestModelResponse)(nil),              // 109: model.model.v1alpha.TriggerOrganizationLatestModelResponse
	(*TriggerAsyncOrganizationLatestModelRequest)(nil),          // 110: model.model.v1alpha.TriggerAsyncOrganizationLatestModelRequest
	(*TriggerAsyncOrganizationLatestModelResponse)(nil),         // 111: model.model.v1alpha.TriggerAsyncOrganizationLatestModelResponse
	(*TriggerOrganizationModelBinaryFileUploadRequest)(nil),     // 112: model.model.v1alpha.TriggerOrganizationModelBinaryFileUploadRequest
	(*TriggerOrganizationModelBinaryFileUploadResponse)(nil),    // 113: model.model.v1alpha.TriggerOrganizationModelBinaryFileUploadResponse
	(*GetModelOperationRequest)(nil),                            // 114: model.model.v1alpha.GetModelOperationRequest
	(*GetModelOperationResponse)(nil),                           // 115: model.model.v1alpha.GetModelOperationResponse
	(*LatestOperation)(nil),                                     // 116: model.model.v1alpha.LatestOperation
	(*GetUserLatestModelOperationRequest)(nil),                  // 117: model.model.v1alpha.GetUserLatestModelOperationRequest
	(*GetUserLatestModelOperationResponse)(nil),                 // 118: model.model.v1alpha.GetUserLatestModelOperationResponse
	(*GetOrganizationLatestModelOperationRequest)(nil),          // 119: model.model.v1alpha.GetOrganizationLatestModelOperationRequest
	(*GetOrganizationLatestModelOperationResponse)(nil),         // 120: model.model.v1alpha.GetOrganizationLatestModelOperationResponse
	(*ListAvailableRegionsRequest)(nil),                         // 121: model.model.v1alpha.ListAvailableRegionsRequest
	(*ListAvailableRegionsResponse)(nil),                        // 122: model.model.v1alpha.ListAvailableRegionsResponse
	(*ListModelsAdminRequest)(nil),                              // 123: model.model.v1alpha.ListModelsAdminRequest
	(*ListModelsAdminResponse)(nil),                             // 124: model.model.v1alpha.ListModelsAdminResponse
	(*LookUpModelAdminRequest)(nil),                             // 125: model.model.v1alpha.LookUpModelAdminRequest
	(*LookUpModelAdminResponse)(nil),                            // 126: model.model.v1alpha.LookUpModelAdminResponse
	(*DeployUserModelAdminRequest)(nil),                         // 127: model.model.v1alpha.DeployUserModelAdminRequest
	(*DeployUserModelAdminResponse)(nil),                        // 128: model.model.v1alpha.DeployUserModelAdminResponse
	(*DeployOrganizationModelAdminRequest)(nil),                 // 129: model.model.v1alpha.DeployOrganizationModelAdminRequest
	(*DeployOrganizationModelAdminResponse)(nil),                // 130: model.model.v1alpha.DeployOrganizationModelAdminResponse
	(*UndeployUserModelAdminRequest)(nil),                       // 131: model.model.v1alpha.UndeployUserModelAdminRequest
	(*UndeployUserModelAdminResponse)(nil),                      // 132: model.model.v1alpha.UndeployUserModelAdminResponse
	(*UndeployOrganizationModelAdminRequest)(nil),               // 133: model.model.v1alpha.UndeployOrganizationModelAdminRequest
	(*UndeployOrganizationModelAdminResponse)(nil),              // 134: model.model.v1alpha.UndeployOrganizationModelAdminResponse
	(*ModelRun)(nil),                                            // 135: model.model.v1alpha.ModelRun
	(*ListModelRunsRequest)(nil),                                // 136: model.model.v1alpha.ListModelRunsRequest
	(*ListModelRunsResponse)(nil),                               // 137: model.model.v1alpha.ListModelRunsResponse
	(*v1beta.HealthCheckRequest)(nil),                           // 138: common.healthcheck.v1beta.HealthCheckRequest
	(*v1beta.HealthCheckResponse)(nil),                          // 139: common.healthcheck.v1beta.HealthCheckResponse
	(*timestamppb.Timestamp)(nil),                               // 140: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                                     // 141: google.protobuf.Struct
	(v1alpha.Task)(0),                                           // 142: common.task.v1alpha.Task
	(*v1beta1.Owner)(nil),                                       // 143: core.mgmt.v1beta.Owner
	(*Permission)(nil),                                          // 144: model.model.v1alpha.Permission
	(View)(0),                                                   // 145: model.model.v1alpha.View
	(*fieldmaskpb.FieldMask)(nil),                               // 146: google.protobuf.FieldMask
	(*longrunningpb.Operation)(nil),                             // 147: google.longrunning.Operation
	(*ClassificationInput)(nil),                                 // 148: model.model.v1alpha.ClassificationInput
	(*DetectionInput)(nil),                                      // 149: model.model.v1alpha.DetectionInput
	(*KeypointInput)(nil),                                       // 150: model.model.v1alpha.KeypointInput
	(*OcrInput)(nil),                                            // 151: model.model.v1alpha.OcrInput
	(*InstanceSegmentationInput)(nil),                           // 152: model.model.v1alpha.InstanceSegmentationInput
	(*SemanticSegmentationInput)(nil),                           // 153: model.model.v1alpha.SemanticSegmentationInput
	(*TextToImageInput)(nil),                                    // 154: model.model.v1alpha.TextToImageInput
	(*ImageToImageInput)(nil),                                   // 155: model.model.v1alpha.ImageToImageInput
	(*TextGenerationInput)(nil),                                 // 156: model.model.v1alpha.TextGenerationInput
	(*TextGenerationChatInput)(nil),                             // 157: model.model.v1alpha.TextGenerationChatInput
	(*VisualQuestionAnsweringInput)(nil),                        // 158: model.model.v1alpha.VisualQuestionAnsweringInput
	(*UnspecifiedInput)(nil),                                    // 159: model.model.v1alpha.UnspecifiedInput
	(*ClassificationInputStream)(nil),                           // 160: model.model.v1alpha.ClassificationInputStream
	(*DetectionInputStream)(nil),                                // 161: model.model.v1alpha.DetectionInputStream
	(*KeypointInputStream)(nil),                                 // 162: model.model.v1alpha.KeypointInputStream
	(*OcrInputStream)(nil),                                      // 163: model.model.v1alpha.OcrInputStream
	(*InstanceSegmentationInputStream)(nil),                     // 164: model.model.v1alpha.InstanceSegmentationInputStream
	(*SemanticSegmentationInputStream)(nil),                     // 165: model.model.v1alpha.SemanticSegmentationInputStream
	(*ClassificationOutput)(nil),                                // 166: model.model.v1alpha.ClassificationOutput
	(*DetectionOutput)(nil),                                     // 167: model.model.v1alpha.DetectionOutput
	(*KeypointOutput)(nil),                                      // 168: model.model.v1alpha.KeypointOutput
	(*OcrOutput)(nil),                                           // 169: model.model.v1alpha.OcrOutput
	(*InstanceSegmentationOutput)(nil),                          // 170: model.model.v1alpha.InstanceSegmentationOutput
	(*SemanticSegmentationOutput)(nil),                          // 171: model.model.v1alpha.SemanticSegmentationOutput
	(*TextToImageOutput)(nil),                                   // 172: model.model.v1alpha.TextToImageOutput
	(*ImageToImageOutput)(nil),                                  // 173: model.model.v1alpha.ImageToImageOutput
	(*TextGenerationOutput)(nil),                                // 174: model.model.v1alpha.TextGenerationOutput
	(*TextGenerationChatOutput)(nil),                            // 175: model.model.v1alpha.TextGenerationChatOutput
	(*VisualQuestionAnsweringOutput)(nil),                       // 176: model.model.v1alpha.VisualQuestionAnsweringOutput
	(*UnspecifiedOutput)(nil),                                   // 177: model.model.v1alpha.UnspecifiedOutput
	(v1alpha1.RunStatus)(0),                                     // 178: common.run.v1alpha.RunStatus
	(v1alpha1.RunSource)(0),                                     // 179: common.run.v1alpha.RunSource
}
var file_model_model_v1alpha_model_proto_depIdxs = []int32{
	138, // 0: model.model.v1alpha.LivenessRequest.health_check_request:type_name -> common.healthcheck.v1beta.HealthCheckRequest
	139, // 1: model.model.v1alpha.LivenessResponse.health_check_response:type_name -> common.healthcheck.v1beta.HealthCheckResponse
	138, // 2: model.model.v1alpha.ReadinessRequest.health_check_request:type_name -> common.healthcheck.v1beta.HealthCheckRequest
	139, // 3: model.model.v1alpha.ReadinessResponse.health_check_response:type_name -> common.healthcheck.v1beta.HealthCheckResponse
	0,   // 4: model.model.v1alpha.ModelVersion.state:type_name -> model.model.v1alpha.State
	140, // 5: model.model.v1alpha.ModelVersion.update_time:type_name -> google.protobuf.Timestamp
	141, // 6: model.model.v1alpha.Model.configuration:type_name -> google.protobuf.Struct
	142, // 7: model.model.v1alpha.Model.task:type_name -> common.task.v1alpha.Task
	1,   // 8: model.model.v1alpha.Model.visibility:type_name -> model.model.v1alpha.Model.Visibility
	140, // 9: model.model.v1alpha.Model.create_time:type_name -> google.protobuf.Timestamp
	140, // 10: model.model.v1alpha.Model.update_time:type_name -> google.protobuf.Timestamp
	140, // 11: model.model.v1alpha.Model.delete_time:type_name -> google.protobuf.Timestamp
	143, // 12: model.model.v1alpha.Model.owner:type_name -> core.mgmt.v1beta.Owner
	71,  // 13: model.model.v1alpha.Model.sample_input:type_name -> model.model.v1alpha.TaskInput
	73,  // 14: model.model.v1alpha.Model.sample_output:type_name -> model.model.v1alpha.TaskOutput
	144, // 15: model.model.v1alpha.Model.permission:type_name -> model.model.v1alpha.Permission
	141, // 16: model.model.v1alpha.Model.input_schema:type_name -> google.protobuf.Struct
	141, // 17: model.model.v1alpha.Model.output_schema:type_name -> google.protobuf.Struct
	145, // 18: model.model.v1alpha.ListModelsRequest.view:type_name -> model.model.v1alpha.View
	1,   // 19: model.model.v1alpha.ListModelsRequest.visibility:type_name -> model.model.v1alpha.Model.Visibility
	8,   // 20: model.model.v1alpha.ListModelsResponse.models:type_name -> model.model.v1alpha.Model
	145, // 21: model.model.v1alpha.LookUpModelRequest.view:type_name -> model.model.v1alpha.View
	8,   // 22: model.model.v1alpha.LookUpModelResponse.model:type_name -> model.model.v1alpha.Model
	145, // 23: model.model.v1alpha.ListNamespaceModelsRequest.view:type_name -> model.model.v1alpha.View
	1,   // 24: model.model.v1alpha.ListNamespaceModelsRequest.visibility:type_name -> model.model.v1alpha.Model.Visibility
	8,   // 25: model.model.v1alpha.ListNamespaceModelsResponse.models:type_name -> model.model.v1alpha.Model
	8,   // 26: model.model.v1alpha.CreateNamespaceModelRequest.model:type_name -> model.model.v1alpha.Model
	8,   // 27: model.model.v1alpha.CreateNamespaceModelResponse.model:type_name -> model.model.v1alpha.Model
	145, // 28: model.model.v1alpha.GetNamespaceModelRequest.view:type_name -> model.model.v1alpha.View
	8,   // 29: model.model.v1alpha.GetNamespaceModelResponse.model:type_name -> model.model.v1alpha.Model
	8,   // 30: model.model.v1alpha.UpdateNamespaceModelRequest.model:type_name -> model.model.v1alpha.Model
	146, // 31: model.model.v1alpha.UpdateNamespaceModelRequest.update_mask:type_name -> google.protobuf.FieldMask
	8,   // 32: model.model.v1alpha.UpdateNamespaceModelResponse.model:type_name -> model.model.v1alpha.Model
	8,   // 33: model.model.v1alpha.RenameNamespaceModelResponse.model:type_name -> model.model.v1alpha.Model
	0,   // 34: model.model.v1alpha.WatchNamespaceModelResponse.state:type_name -> model.model.v1alpha.State
	0,   // 35: model.model.v1alpha.WatchNamespaceLatestModelResponse.state:type_name -> model.model.v1alpha.State
	7,   // 36: model.model.v1alpha.ListNamespaceModelVersionsResponse.versions:type_name -> model.model.v1alpha.ModelVersion
	71,  // 37: model.model.v1alpha.TriggerNamespaceModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	142, // 38: model.model.v1alpha.TriggerNamespaceModelResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 39: model.model.v1alpha.TriggerNamespaceModelResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	71,  // 40: model.model.v1alpha.TriggerAsyncNamespaceModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	147, // 41: model.model.v1alpha.TriggerAsyncNamespaceModelResponse.operation:type_name -> google.longrunning.Operation
	71,  // 42: model.model.v1alpha.TriggerNamespaceLatestModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	142, // 43: model.model.v1alpha.TriggerNamespaceLatestModelResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 44: model.model.v1alpha.TriggerNamespaceLatestModelResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	71,  // 45: model.model.v1alpha.TriggerAsyncNamespaceLatestModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	147, // 46: model.model.v1alpha.TriggerAsyncNamespaceLatestModelResponse.operation:type_name -> google.longrunning.Operation
	72,  // 47: model.model.v1alpha.TriggerNamespaceModelBinaryFileUploadRequest.task_input:type_name -> model.model.v1alpha.TaskInputStream
	142, // 48: model.model.v1alpha.TriggerNamespaceModelBinaryFileUploadResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 49: model.model.v1alpha.TriggerNamespaceModelBinaryFileUploadResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	72,  // 50: model.model.v1alpha.TriggerNamespaceLatestModelBinaryFileUploadRequest.task_input:type_name -> model.model.v1alpha.TaskInputStream
	142, // 51: model.model.v1alpha.TriggerNamespaceLatestModelBinaryFileUploadResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 52: model.model.v1alpha.TriggerNamespaceLatestModelBinaryFileUploadResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	145, // 53: model.model.v1alpha.GetNamespaceLatestModelOperationRequest.view:type_name -> model.model.v1alpha.View
	147, // 54: model.model.v1alpha.GetNamespaceLatestModelOperationResponse.operation:type_name -> google.longrunning.Operation
	8,   // 55: model.model.v1alpha.CreateUserModelRequest.model:type_name -> model.model.v1alpha.Model
	8,   // 56: model.model.v1alpha.CreateUserModelResponse.model:type_name -> model.model.v1alpha.Model
	145, // 57: model.model.v1alpha.ListUserModelsRequest.view:type_name -> model.model.v1alpha.View
	1,   // 58: model.model.v1alpha.ListUserModelsRequest.visibility:type_name -> model.model.v1alpha.Model.Visibility
	8,   // 59: model.model.v1alpha.ListUserModelsResponse.models:type_name -> model.model.v1alpha.Model
	145, // 60: model.model.v1alpha.GetUserModelRequest.view:type_name -> model.model.v1alpha.View
	8,   // 61: model.model.v1alpha.GetUserModelResponse.model:type_name -> model.model.v1alpha.Model
	8,   // 62: model.model.v1alpha.UpdateUserModelRequest.model:type_name -> model.model.v1alpha.Model
	146, // 63: model.model.v1alpha.UpdateUserModelRequest.update_mask:type_name -> google.protobuf.FieldMask
	8,   // 64: model.model.v1alpha.UpdateUserModelResponse.model:type_name -> model.model.v1alpha.Model
	8,   // 65: model.model.v1alpha.RenameUserModelResponse.model:type_name -> model.model.v1alpha.Model
	0,   // 66: model.model.v1alpha.WatchUserModelResponse.state:type_name -> model.model.v1alpha.State
	0,   // 67: model.model.v1alpha.WatchUserLatestModelResponse.state:type_name -> model.model.v1alpha.State
	7,   // 68: model.model.v1alpha.ListUserModelVersionsResponse.versions:type_name -> model.model.v1alpha.ModelVersion
	148, // 69: model.model.v1alpha.TaskInput.classification:type_name -> model.model.v1alpha.ClassificationInput
	149, // 70: model.model.v1alpha.TaskInput.detection:type_name -> model.model.v1alpha.DetectionInput
	150, // 71: model.model.v1alpha.TaskInput.keypoint:type_name -> model.model.v1alpha.KeypointInput
	151, // 72: model.model.v1alpha.TaskInput.ocr:type_name -> model.model.v1alpha.OcrInput
	152, // 73: model.model.v1alpha.TaskInput.instance_segmentation:type_name -> model.model.v1alpha.InstanceSegmentationInput
	153, // 74: model.model.v1alpha.TaskInput.semantic_segmentation:type_name -> model.model.v1alpha.SemanticSegmentationInput
	154, // 75: model.model.v1alpha.TaskInput.text_to_image:type_name -> model.model.v1alpha.TextToImageInput
	155, // 76: model.model.v1alpha.TaskInput.image_to_image:type_name -> model.model.v1alpha.ImageToImageInput
	156, // 77: model.model.v1alpha.TaskInput.text_generation:type_name -> model.model.v1alpha.TextGenerationInput
	157, // 78: model.model.v1alpha.TaskInput.text_generation_chat:type_name -> model.model.v1alpha.TextGenerationChatInput
	158, // 79: model.model.v1alpha.TaskInput.visual_question_answering:type_name -> model.model.v1alpha.VisualQuestionAnsweringInput
	159, // 80: model.model.v1alpha.TaskInput.unspecified:type_name -> model.model.v1alpha.UnspecifiedInput
	160, // 81: model.model.v1alpha.TaskInputStream.classification:type_name -> model.model.v1alpha.ClassificationInputStream
	161, // 82: model.model.v1alpha.TaskInputStream.detection:type_name -> model.model.v1alpha.DetectionInputStream
	162, // 83: model.model.v1alpha.TaskInputStream.keypoint:type_name -> model.model.v1alpha.KeypointInputStream
	163, // 84: model.model.v1alpha.TaskInputStream.ocr:type_name -> model.model.v1alpha.OcrInputStream
	164, // 85: model.model.v1alpha.TaskInputStream.instance_segmentation:type_name -> model.model.v1alpha.InstanceSegmentationInputStream
	165, // 86: model.model.v1alpha.TaskInputStream.semantic_segmentation:type_name -> model.model.v1alpha.SemanticSegmentationInputStream
	154, // 87: model.model.v1alpha.TaskInputStream.text_to_image:type_name -> model.model.v1alpha.TextToImageInput
	155, // 88: model.model.v1alpha.TaskInputStream.image_to_image:type_name -> model.model.v1alpha.ImageToImageInput
	156, // 89: model.model.v1alpha.TaskInputStream.text_generation:type_name -> model.model.v1alpha.TextGenerationInput
	157, // 90: model.model.v1alpha.TaskInputStream.text_generation_chat:type_name -> model.model.v1alpha.TextGenerationChatInput
	158, // 91: model.model.v1alpha.TaskInputStream.visual_question_answering:type_name -> model.model.v1alpha.VisualQuestionAnsweringInput
	159, // 92: model.model.v1alpha.TaskInputStream.unspecified:type_name -> model.model.v1alpha.UnspecifiedInput
	166, // 93: model.model.v1alpha.TaskOutput.classification:type_name -> model.model.v1alpha.ClassificationOutput
	167, // 94: model.model.v1alpha.TaskOutput.detection:type_name -> model.model.v1alpha.DetectionOutput
	168, // 95: model.model.v1alpha.TaskOutput.keypoint:type_name -> model.model.v1alpha.KeypointOutput
	169, // 96: model.model.v1alpha.TaskOutput.ocr:type_name -> model.model.v1alpha.OcrOutput
	170, // 97: model.model.v1alpha.TaskOutput.instance_segmentation:type_name -> model.model.v1alpha.InstanceSegmentationOutput
	171, // 98: model.model.v1alpha.TaskOutput.semantic_segmentation:type_name -> model.model.v1alpha.SemanticSegmentationOutput
	172, // 99: model.model.v1alpha.TaskOutput.text_to_image:type_name -> model.model.v1alpha.TextToImageOutput
	173, // 100: model.model.v1alpha.TaskOutput.image_to_image:type_name -> model.model.v1alpha.ImageToImageOutput
	174, // 101: model.model.v1alpha.TaskOutput.text_generation:type_name -> model.model.v1alpha.TextGenerationOutput
	175, // 102: model.model.v1alpha.TaskOutput.text_generation_chat:type_name -> model.model.v1alpha.TextGenerationChatOutput
	176, // 103: model.model.v1alpha.TaskOutput.visual_question_answering:type_name -> model.model.v1alpha.VisualQuestionAnsweringOutput
	177, // 104: model.model.v1alpha.TaskOutput.unspecified:type_name -> model.model.v1alpha.UnspecifiedOutput
	71,  // 105: model.model.v1alpha.TriggerUserModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	142, // 106: model.model.v1alpha.TriggerUserModelResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 107: model.model.v1alpha.TriggerUserModelResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	71,  // 108: model.model.v1alpha.TriggerAsyncUserModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	147, // 109: model.model.v1alpha.TriggerAsyncUserModelResponse.operation:type_name -> google.longrunning.Operation
	71,  // 110: model.model.v1alpha.TriggerUserLatestModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	142, // 111: model.model.v1alpha.TriggerUserLatestModelResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 112: model.model.v1alpha.TriggerUserLatestModelResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	71,  // 113: model.model.v1alpha.TriggerAsyncUserLatestModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	147, // 114: model.model.v1alpha.TriggerAsyncUserLatestModelResponse.operation:type_name -> google.longrunning.Operation
	72,  // 115: model.model.v1alpha.TriggerUserModelBinaryFileUploadRequest.task_input:type_name -> model.model.v1alpha.TaskInputStream
	142, // 116: model.model.v1alpha.TriggerUserModelBinaryFileUploadResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 117: model.model.v1alpha.TriggerUserModelBinaryFileUploadResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	8,   // 118: model.model.v1alpha.CreateOrganizationModelRequest.model:type_name -> model.model.v1alpha.Model
	8,   // 119: model.model.v1alpha.CreateOrganizationModelResponse.model:type_name -> model.model.v1alpha.Model
	145, // 120: model.model.v1alpha.ListOrganizationModelsRequest.view:type_name -> model.model.v1alpha.View
	1,   // 121: model.model.v1alpha.ListOrganizationModelsRequest.visibility:type_name -> model.model.v1alpha.Model.Visibility
	8,   // 122: model.model.v1alpha.ListOrganizationModelsResponse.models:type_name -> model.model.v1alpha.Model
	145, // 123: model.model.v1alpha.GetOrganizationModelRequest.view:type_name -> model.model.v1alpha.View
	8,   // 124: model.model.v1alpha.GetOrganizationModelResponse.model:type_name -> model.model.v1alpha.Model
	8,   // 125: model.model.v1alpha.UpdateOrganizationModelRequest.model:type_name -> model.model.v1alpha.Model
	146, // 126: model.model.v1alpha.UpdateOrganizationModelRequest.update_mask:type_name -> google.protobuf.FieldMask
	8,   // 127: model.model.v1alpha.UpdateOrganizationModelResponse.model:type_name -> model.model.v1alpha.Model
	8,   // 128: model.model.v1alpha.RenameOrganizationModelResponse.model:type_name -> model.model.v1alpha.Model
	0,   // 129: model.model.v1alpha.WatchOrganizationModelResponse.state:type_name -> model.model.v1alpha.State
	0,   // 130: model.model.v1alpha.WatchOrganizationLatestModelResponse.state:type_name -> model.model.v1alpha.State
	7,   // 131: model.model.v1alpha.ListOrganizationModelVersionsResponse.versions:type_name -> model.model.v1alpha.ModelVersion
	71,  // 132: model.model.v1alpha.TriggerOrganizationModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	142, // 133: model.model.v1alpha.TriggerOrganizationModelResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 134: model.model.v1alpha.TriggerOrganizationModelResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	71,  // 135: model.model.v1alpha.TriggerAsyncOrganizationModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	147, // 136: model.model.v1alpha.TriggerAsyncOrganizationModelResponse.operation:type_name -> google.longrunning.Operation
	71,  // 137: model.model.v1alpha.TriggerOrganizationLatestModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	142, // 138: model.model.v1alpha.TriggerOrganizationLatestModelResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 139: model.model.v1alpha.TriggerOrganizationLatestModelResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	71,  // 140: model.model.v1alpha.TriggerAsyncOrganizationLatestModelRequest.task_inputs:type_name -> model.model.v1alpha.TaskInput
	147, // 141: model.model.v1alpha.TriggerAsyncOrganizationLatestModelResponse.operation:type_name -> google.longrunning.Operation
	72,  // 142: model.model.v1alpha.TriggerOrganizationModelBinaryFileUploadRequest.task_input:type_name -> model.model.v1alpha.TaskInputStream
	142, // 143: model.model.v1alpha.TriggerOrganizationModelBinaryFileUploadResponse.task:type_name -> common.task.v1alpha.Task
	73,  // 144: model.model.v1alpha.TriggerOrganizationModelBinaryFileUploadResponse.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	145, // 145: model.model.v1alpha.GetModelOperationRequest.view:type_name -> model.model.v1alpha.View
	147, // 146: model.model.v1alpha.GetModelOperationResponse.operation:type_name -> google.longrunning.Operation
	33,  // 147: model.model.v1alpha.LatestOperation.request:type_name -> model.model.v1alpha.TriggerNamespaceModelRequest
	34,  // 148: model.model.v1alpha.LatestOperation.response:type_name -> model.model.v1alpha.TriggerNamespaceModelResponse
	145, // 149: model.model.v1alpha.GetUserLatestModelOperationRequest.view:type_name -> model.model.v1alpha.View
	147, // 150: model.model.v1alpha.GetUserLatestModelOperationResponse.operation:type_name -> google.longrunning.Operation
	145, // 151: model.model.v1alpha.GetOrganizationLatestModelOperationRequest.view:type_name -> model.model.v1alpha.View
	147, // 152: model.model.v1alpha.GetOrganizationLatestModelOperationResponse.operation:type_name -> google.longrunning.Operation
	6,   // 153: model.model.v1alpha.ListAvailableRegionsResponse.regions:type_name -> model.model.v1alpha.Region
	145, // 154: model.model.v1alpha.ListModelsAdminRequest.view:type_name -> model.model.v1alpha.View
	8,   // 155: model.model.v1alpha.ListModelsAdminResponse.models:type_name -> model.model.v1alpha.Model
	145, // 156: model.model.v1alpha.LookUpModelAdminRequest.view:type_name -> model.model.v1alpha.View
	8,   // 157: model.model.v1alpha.LookUpModelAdminResponse.model:type_name -> model.model.v1alpha.Model
	178, // 158: model.model.v1alpha.ModelRun.status:type_name -> common.run.v1alpha.RunStatus
	179, // 159: model.model.v1alpha.ModelRun.source:type_name -> common.run.v1alpha.RunSource
	140, // 160: model.model.v1alpha.ModelRun.end_time:type_name -> google.protobuf.Timestamp
	140, // 161: model.model.v1alpha.ModelRun.create_time:type_name -> google.protobuf.Timestamp
	140, // 162: model.model.v1alpha.ModelRun.update_time:type_name -> google.protobuf.Timestamp
	71,  // 163: model.model.v1alpha.ModelRun.task_inputs:type_name -> model.model.v1alpha.TaskInput
	73,  // 164: model.model.v1alpha.ModelRun.task_outputs:type_name -> model.model.v1alpha.TaskOutput
	145, // 165: model.model.v1alpha.ListModelRunsRequest.view:type_name -> model.model.v1alpha.View
	135, // 166: model.model.v1alpha.ListModelRunsResponse.runs:type_name -> model.model.v1alpha.ModelRun
	167, // [167:167] is the sub-list for method output_type
	167, // [167:167] is the sub-list for method input_type
	167, // [167:167] is the sub-list for extension type_name
	167, // [167:167] is the sub-list for extension extendee
	0,   // [0:167] is the sub-list for field type_name
}

func init() { file_model_model_v1alpha_model_proto_init() }
func file_model_model_v1alpha_model_proto_init() {
	if File_model_model_v1alpha_model_proto != nil {
		return
	}
	file_model_model_v1alpha_common_proto_init()
	file_model_model_v1alpha_model_definition_proto_init()
	file_model_model_v1alpha_task_classification_proto_init()
	file_model_model_v1alpha_task_detection_proto_init()
	file_model_model_v1alpha_task_image_to_image_proto_init()
	file_model_model_v1alpha_task_instance_segmentation_proto_init()
	file_model_model_v1alpha_task_keypoint_proto_init()
	file_model_model_v1alpha_task_ocr_proto_init()
	file_model_model_v1alpha_task_semantic_segmentation_proto_init()
	file_model_model_v1alpha_task_text_generation_proto_init()
	file_model_model_v1alpha_task_text_generation_chat_proto_init()
	file_model_model_v1alpha_task_text_to_image_proto_init()
	file_model_model_v1alpha_task_unspecified_proto_init()
	file_model_model_v1alpha_task_visual_question_answering_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_model_model_v1alpha_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNamespaceLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNamespaceLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceModelVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceModelVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceModelVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceModelVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncNamespaceModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncNamespaceModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncNamespaceLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncNamespaceLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceModelBinaryFileUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceModelBinaryFileUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceLatestModelBinaryFileUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerNamespaceLatestModelBinaryFileUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceLatestModelOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceLatestModelOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployNamespaceModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployNamespaceModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployNamespaceModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployNamespaceModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserModelVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserModelVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserModelVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserModelVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInputStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncUserModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncUserModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerUserLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerUserLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncUserLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncUserLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerUserModelBinaryFileUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerUserModelBinaryFileUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchOrganizationLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchOrganizationLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationModelVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationModelVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationModelVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrganizationModelVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncOrganizationModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncOrganizationModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOrganizationLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOrganizationLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncOrganizationLatestModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerAsyncOrganizationLatestModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOrganizationModelBinaryFileUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerOrganizationModelBinaryFileUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLatestModelOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLatestModelOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationLatestModelOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationLatestModelOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailableRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailableRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelsAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelsAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployUserModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployUserModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployOrganizationModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployOrganizationModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployUserModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployUserModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployOrganizationModelAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndeployOrganizationModelAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelRunsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_model_v1alpha_model_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelRunsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_model_v1alpha_model_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[53].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[65].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*TaskInput_Classification)(nil),
		(*TaskInput_Detection)(nil),
		(*TaskInput_Keypoint)(nil),
		(*TaskInput_Ocr)(nil),
		(*TaskInput_InstanceSegmentation)(nil),
		(*TaskInput_SemanticSegmentation)(nil),
		(*TaskInput_TextToImage)(nil),
		(*TaskInput_ImageToImage)(nil),
		(*TaskInput_TextGeneration)(nil),
		(*TaskInput_TextGenerationChat)(nil),
		(*TaskInput_VisualQuestionAnswering)(nil),
		(*TaskInput_Unspecified)(nil),
	}
	file_model_model_v1alpha_model_proto_msgTypes[70].OneofWrappers = []interface{}{
		(*TaskInputStream_Classification)(nil),
		(*TaskInputStream_Detection)(nil),
		(*TaskInputStream_Keypoint)(nil),
		(*TaskInputStream_Ocr)(nil),
		(*TaskInputStream_InstanceSegmentation)(nil),
		(*TaskInputStream_SemanticSegmentation)(nil),
		(*TaskInputStream_TextToImage)(nil),
		(*TaskInputStream_ImageToImage)(nil),
		(*TaskInputStream_TextGeneration)(nil),
		(*TaskInputStream_TextGenerationChat)(nil),
		(*TaskInputStream_VisualQuestionAnswering)(nil),
		(*TaskInputStream_Unspecified)(nil),
	}
	file_model_model_v1alpha_model_proto_msgTypes[71].OneofWrappers = []interface{}{
		(*TaskOutput_Classification)(nil),
		(*TaskOutput_Detection)(nil),
		(*TaskOutput_Keypoint)(nil),
		(*TaskOutput_Ocr)(nil),
		(*TaskOutput_InstanceSegmentation)(nil),
		(*TaskOutput_SemanticSegmentation)(nil),
		(*TaskOutput_TextToImage)(nil),
		(*TaskOutput_ImageToImage)(nil),
		(*TaskOutput_TextGeneration)(nil),
		(*TaskOutput_TextGenerationChat)(nil),
		(*TaskOutput_VisualQuestionAnswering)(nil),
		(*TaskOutput_Unspecified)(nil),
	}
	file_model_model_v1alpha_model_proto_msgTypes[84].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[86].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[98].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[112].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[115].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[117].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[121].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[123].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[133].OneofWrappers = []interface{}{}
	file_model_model_v1alpha_model_proto_msgTypes[134].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_model_v1alpha_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   136,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_model_v1alpha_model_proto_goTypes,
		DependencyIndexes: file_model_model_v1alpha_model_proto_depIdxs,
		EnumInfos:         file_model_model_v1alpha_model_proto_enumTypes,
		MessageInfos:      file_model_model_v1alpha_model_proto_msgTypes,
	}.Build()
	File_model_model_v1alpha_model_proto = out.File
	file_model_model_v1alpha_model_proto_rawDesc = nil
	file_model_model_v1alpha_model_proto_goTypes = nil
	file_model_model_v1alpha_model_proto_depIdxs = nil
}
