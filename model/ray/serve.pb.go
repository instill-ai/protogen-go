// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: model/ray/serve.proto

package ray

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [Begin] LOGGING CONFIG
// Encoding type
type EncodingType int32

const (
	EncodingType_TEXT EncodingType = 0
	EncodingType_JSON EncodingType = 1
)

// Enum value maps for EncodingType.
var (
	EncodingType_name = map[int32]string{
		0: "TEXT",
		1: "JSON",
	}
	EncodingType_value = map[string]int32{
		"TEXT": 0,
		"JSON": 1,
	}
)

func (x EncodingType) Enum() *EncodingType {
	p := new(EncodingType)
	*p = x
	return p
}

func (x EncodingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncodingType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_ray_serve_proto_enumTypes[0].Descriptor()
}

func (EncodingType) Type() protoreflect.EnumType {
	return &file_model_ray_serve_proto_enumTypes[0]
}

func (x EncodingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncodingType.Descriptor instead.
func (EncodingType) EnumDescriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{0}
}

// Deployment language.
type DeploymentLanguage int32

const (
	DeploymentLanguage_PYTHON DeploymentLanguage = 0
	DeploymentLanguage_JAVA   DeploymentLanguage = 1
)

// Enum value maps for DeploymentLanguage.
var (
	DeploymentLanguage_name = map[int32]string{
		0: "PYTHON",
		1: "JAVA",
	}
	DeploymentLanguage_value = map[string]int32{
		"PYTHON": 0,
		"JAVA":   1,
	}
)

func (x DeploymentLanguage) Enum() *DeploymentLanguage {
	p := new(DeploymentLanguage)
	*p = x
	return p
}

func (x DeploymentLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_model_ray_serve_proto_enumTypes[1].Descriptor()
}

func (DeploymentLanguage) Type() protoreflect.EnumType {
	return &file_model_ray_serve_proto_enumTypes[1]
}

func (x DeploymentLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentLanguage.Descriptor instead.
func (DeploymentLanguage) EnumDescriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{1}
}

type TargetCapacityDirection int32

const (
	TargetCapacityDirection_UNSET TargetCapacityDirection = 0
	TargetCapacityDirection_UP    TargetCapacityDirection = 1
	TargetCapacityDirection_DOWN  TargetCapacityDirection = 2
)

// Enum value maps for TargetCapacityDirection.
var (
	TargetCapacityDirection_name = map[int32]string{
		0: "UNSET",
		1: "UP",
		2: "DOWN",
	}
	TargetCapacityDirection_value = map[string]int32{
		"UNSET": 0,
		"UP":    1,
		"DOWN":  2,
	}
)

func (x TargetCapacityDirection) Enum() *TargetCapacityDirection {
	p := new(TargetCapacityDirection)
	*p = x
	return p
}

func (x TargetCapacityDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetCapacityDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_model_ray_serve_proto_enumTypes[2].Descriptor()
}

func (TargetCapacityDirection) Type() protoreflect.EnumType {
	return &file_model_ray_serve_proto_enumTypes[2]
}

func (x TargetCapacityDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetCapacityDirection.Descriptor instead.
func (TargetCapacityDirection) EnumDescriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{2}
}

type DeploymentStatus int32

const (
	// Keep frontend code of ServeDeploymentStatus in
	// dashboard/client/src/type/serve.ts in sync with this enum
	DeploymentStatus_DEPLOYMENT_STATUS_UPDATING      DeploymentStatus = 0
	DeploymentStatus_DEPLOYMENT_STATUS_HEALTHY       DeploymentStatus = 1
	DeploymentStatus_DEPLOYMENT_STATUS_UNHEALTHY     DeploymentStatus = 2
	DeploymentStatus_DEPLOYMENT_STATUS_DEPLOY_FAILED DeploymentStatus = 3
	DeploymentStatus_DEPLOYMENT_STATUS_UPSCALING     DeploymentStatus = 4
	DeploymentStatus_DEPLOYMENT_STATUS_DOWNSCALING   DeploymentStatus = 5
)

// Enum value maps for DeploymentStatus.
var (
	DeploymentStatus_name = map[int32]string{
		0: "DEPLOYMENT_STATUS_UPDATING",
		1: "DEPLOYMENT_STATUS_HEALTHY",
		2: "DEPLOYMENT_STATUS_UNHEALTHY",
		3: "DEPLOYMENT_STATUS_DEPLOY_FAILED",
		4: "DEPLOYMENT_STATUS_UPSCALING",
		5: "DEPLOYMENT_STATUS_DOWNSCALING",
	}
	DeploymentStatus_value = map[string]int32{
		"DEPLOYMENT_STATUS_UPDATING":      0,
		"DEPLOYMENT_STATUS_HEALTHY":       1,
		"DEPLOYMENT_STATUS_UNHEALTHY":     2,
		"DEPLOYMENT_STATUS_DEPLOY_FAILED": 3,
		"DEPLOYMENT_STATUS_UPSCALING":     4,
		"DEPLOYMENT_STATUS_DOWNSCALING":   5,
	}
)

func (x DeploymentStatus) Enum() *DeploymentStatus {
	p := new(DeploymentStatus)
	*p = x
	return p
}

func (x DeploymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_model_ray_serve_proto_enumTypes[3].Descriptor()
}

func (DeploymentStatus) Type() protoreflect.EnumType {
	return &file_model_ray_serve_proto_enumTypes[3]
}

func (x DeploymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStatus.Descriptor instead.
func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{3}
}

type DeploymentStatusTrigger int32

const (
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_UNSPECIFIED             DeploymentStatusTrigger = 0
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_STARTED   DeploymentStatusTrigger = 1
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_COMPLETED DeploymentStatusTrigger = 2
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_UPSCALE_COMPLETED       DeploymentStatusTrigger = 3
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_DOWNSCALE_COMPLETED     DeploymentStatusTrigger = 4
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_AUTOSCALING             DeploymentStatusTrigger = 5
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_REPLICA_STARTUP_FAILED  DeploymentStatusTrigger = 6
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_HEALTH_CHECK_FAILED     DeploymentStatusTrigger = 7
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_INTERNAL_ERROR          DeploymentStatusTrigger = 8
	DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_DELETING                DeploymentStatusTrigger = 9
)

// Enum value maps for DeploymentStatusTrigger.
var (
	DeploymentStatusTrigger_name = map[int32]string{
		0: "DEPLOYMENT_STATUS_TRIGGER_UNSPECIFIED",
		1: "DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_STARTED",
		2: "DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_COMPLETED",
		3: "DEPLOYMENT_STATUS_TRIGGER_UPSCALE_COMPLETED",
		4: "DEPLOYMENT_STATUS_TRIGGER_DOWNSCALE_COMPLETED",
		5: "DEPLOYMENT_STATUS_TRIGGER_AUTOSCALING",
		6: "DEPLOYMENT_STATUS_TRIGGER_REPLICA_STARTUP_FAILED",
		7: "DEPLOYMENT_STATUS_TRIGGER_HEALTH_CHECK_FAILED",
		8: "DEPLOYMENT_STATUS_TRIGGER_INTERNAL_ERROR",
		9: "DEPLOYMENT_STATUS_TRIGGER_DELETING",
	}
	DeploymentStatusTrigger_value = map[string]int32{
		"DEPLOYMENT_STATUS_TRIGGER_UNSPECIFIED":             0,
		"DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_STARTED":   1,
		"DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_COMPLETED": 2,
		"DEPLOYMENT_STATUS_TRIGGER_UPSCALE_COMPLETED":       3,
		"DEPLOYMENT_STATUS_TRIGGER_DOWNSCALE_COMPLETED":     4,
		"DEPLOYMENT_STATUS_TRIGGER_AUTOSCALING":             5,
		"DEPLOYMENT_STATUS_TRIGGER_REPLICA_STARTUP_FAILED":  6,
		"DEPLOYMENT_STATUS_TRIGGER_HEALTH_CHECK_FAILED":     7,
		"DEPLOYMENT_STATUS_TRIGGER_INTERNAL_ERROR":          8,
		"DEPLOYMENT_STATUS_TRIGGER_DELETING":                9,
	}
)

func (x DeploymentStatusTrigger) Enum() *DeploymentStatusTrigger {
	p := new(DeploymentStatusTrigger)
	*p = x
	return p
}

func (x DeploymentStatusTrigger) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStatusTrigger) Descriptor() protoreflect.EnumDescriptor {
	return file_model_ray_serve_proto_enumTypes[4].Descriptor()
}

func (DeploymentStatusTrigger) Type() protoreflect.EnumType {
	return &file_model_ray_serve_proto_enumTypes[4]
}

func (x DeploymentStatusTrigger) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStatusTrigger.Descriptor instead.
func (DeploymentStatusTrigger) EnumDescriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{4}
}

type ApplicationStatus int32

const (
	// Keep frontend code of ServeApplicationStatus in
	// dashboard/client/src/type/serve.ts in sync with this enum
	ApplicationStatus_APPLICATION_STATUS_DEPLOYING     ApplicationStatus = 0
	ApplicationStatus_APPLICATION_STATUS_RUNNING       ApplicationStatus = 1
	ApplicationStatus_APPLICATION_STATUS_DEPLOY_FAILED ApplicationStatus = 2
	ApplicationStatus_APPLICATION_STATUS_DELETING      ApplicationStatus = 3
	ApplicationStatus_APPLICATION_STATUS_NOT_STARTED   ApplicationStatus = 5
	ApplicationStatus_APPLICATION_STATUS_UNHEALTHY     ApplicationStatus = 6
)

// Enum value maps for ApplicationStatus.
var (
	ApplicationStatus_name = map[int32]string{
		0: "APPLICATION_STATUS_DEPLOYING",
		1: "APPLICATION_STATUS_RUNNING",
		2: "APPLICATION_STATUS_DEPLOY_FAILED",
		3: "APPLICATION_STATUS_DELETING",
		5: "APPLICATION_STATUS_NOT_STARTED",
		6: "APPLICATION_STATUS_UNHEALTHY",
	}
	ApplicationStatus_value = map[string]int32{
		"APPLICATION_STATUS_DEPLOYING":     0,
		"APPLICATION_STATUS_RUNNING":       1,
		"APPLICATION_STATUS_DEPLOY_FAILED": 2,
		"APPLICATION_STATUS_DELETING":      3,
		"APPLICATION_STATUS_NOT_STARTED":   5,
		"APPLICATION_STATUS_UNHEALTHY":     6,
	}
)

func (x ApplicationStatus) Enum() *ApplicationStatus {
	p := new(ApplicationStatus)
	*p = x
	return p
}

func (x ApplicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_model_ray_serve_proto_enumTypes[5].Descriptor()
}

func (ApplicationStatus) Type() protoreflect.EnumType {
	return &file_model_ray_serve_proto_enumTypes[5]
}

func (x ApplicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationStatus.Descriptor instead.
func (ApplicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{5}
}

// Configuration options for Serve's replica autoscaler.
type AutoscalingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimal number of replicas, must be a non-negative integer.
	MinReplicas uint32 `protobuf:"varint,1,opt,name=min_replicas,json=minReplicas,proto3" json:"min_replicas,omitempty"`
	// Maximal number of replicas, must be a non-negative integer and greater or
	// equals to min_replicas.
	MaxReplicas uint32 `protobuf:"varint,2,opt,name=max_replicas,json=maxReplicas,proto3" json:"max_replicas,omitempty"`
	// The frequency of how long does each replica sending metrics to autoscaler.
	MetricsIntervalS float64 `protobuf:"fixed64,3,opt,name=metrics_interval_s,json=metricsIntervalS,proto3" json:"metrics_interval_s,omitempty"`
	// The window (in seconds) for autoscaler to calculate rolling average of
	// metrics on.
	LookBackPeriodS float64 `protobuf:"fixed64,4,opt,name=look_back_period_s,json=lookBackPeriodS,proto3" json:"look_back_period_s,omitempty"`
	// [DEPRECATED] Use `upscaling_factor` and/or `downscaling_factor` instead.
	SmoothingFactor float64 `protobuf:"fixed64,5,opt,name=smoothing_factor,json=smoothingFactor,proto3" json:"smoothing_factor,omitempty"`
	// How long to wait before scaling down replicas.
	DownscaleDelayS float64 `protobuf:"fixed64,6,opt,name=downscale_delay_s,json=downscaleDelayS,proto3" json:"downscale_delay_s,omitempty"`
	// How long to wait before scaling up replicas.
	UpscaleDelayS float64 `protobuf:"fixed64,7,opt,name=upscale_delay_s,json=upscaleDelayS,proto3" json:"upscale_delay_s,omitempty"`
	// Initial number of replicas deployment should start with. Must be
	// non-negative.
	InitialReplicas *uint32 `protobuf:"varint,8,opt,name=initial_replicas,json=initialReplicas,proto3,oneof" json:"initial_replicas,omitempty"`
	// [DEPRECATED] Use `upscaling_factor` instead.
	UpscaleSmoothingFactor *float64 `protobuf:"fixed64,9,opt,name=upscale_smoothing_factor,json=upscaleSmoothingFactor,proto3,oneof" json:"upscale_smoothing_factor,omitempty"`
	// [DEPRECATED] Use `downscaling_factor` instead.
	DownscaleSmoothingFactor *float64 `protobuf:"fixed64,10,opt,name=downscale_smoothing_factor,json=downscaleSmoothingFactor,proto3,oneof" json:"downscale_smoothing_factor,omitempty"`
	// The cloudpickled policy definition.
	XSerializedPolicyDef []byte `protobuf:"bytes,11,opt,name=_serialized_policy_def,json=SerializedPolicyDef,proto3" json:"_serialized_policy_def,omitempty"`
	// The import path of the policy if user passed a string. Will be the
	// concatenation of the policy module and the policy name if user passed a
	// callable.
	XPolicy string `protobuf:"bytes,12,opt,name=_policy,json=Policy,proto3" json:"_policy,omitempty"`
	// Target number of in flight requests per replica. This is the primary
	// configuration knob for replica autoscaler. Lower the number, the more
	// rapidly the replicas scales up. Must be a non-negative integer.
	TargetOngoingRequests float64 `protobuf:"fixed64,13,opt,name=target_ongoing_requests,json=targetOngoingRequests,proto3" json:"target_ongoing_requests,omitempty"`
	// The multiplicative "gain" factor to limit upscale.
	UpscalingFactor *float64 `protobuf:"fixed64,14,opt,name=upscaling_factor,json=upscalingFactor,proto3,oneof" json:"upscaling_factor,omitempty"`
	// The multiplicative "gain" factor to limit downscale.
	DownscalingFactor *float64 `protobuf:"fixed64,15,opt,name=downscaling_factor,json=downscalingFactor,proto3,oneof" json:"downscaling_factor,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AutoscalingConfig) Reset() {
	*x = AutoscalingConfig{}
	mi := &file_model_ray_serve_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoscalingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingConfig) ProtoMessage() {}

func (x *AutoscalingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingConfig.ProtoReflect.Descriptor instead.
func (*AutoscalingConfig) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{0}
}

func (x *AutoscalingConfig) GetMinReplicas() uint32 {
	if x != nil {
		return x.MinReplicas
	}
	return 0
}

func (x *AutoscalingConfig) GetMaxReplicas() uint32 {
	if x != nil {
		return x.MaxReplicas
	}
	return 0
}

func (x *AutoscalingConfig) GetMetricsIntervalS() float64 {
	if x != nil {
		return x.MetricsIntervalS
	}
	return 0
}

func (x *AutoscalingConfig) GetLookBackPeriodS() float64 {
	if x != nil {
		return x.LookBackPeriodS
	}
	return 0
}

func (x *AutoscalingConfig) GetSmoothingFactor() float64 {
	if x != nil {
		return x.SmoothingFactor
	}
	return 0
}

func (x *AutoscalingConfig) GetDownscaleDelayS() float64 {
	if x != nil {
		return x.DownscaleDelayS
	}
	return 0
}

func (x *AutoscalingConfig) GetUpscaleDelayS() float64 {
	if x != nil {
		return x.UpscaleDelayS
	}
	return 0
}

func (x *AutoscalingConfig) GetInitialReplicas() uint32 {
	if x != nil && x.InitialReplicas != nil {
		return *x.InitialReplicas
	}
	return 0
}

func (x *AutoscalingConfig) GetUpscaleSmoothingFactor() float64 {
	if x != nil && x.UpscaleSmoothingFactor != nil {
		return *x.UpscaleSmoothingFactor
	}
	return 0
}

func (x *AutoscalingConfig) GetDownscaleSmoothingFactor() float64 {
	if x != nil && x.DownscaleSmoothingFactor != nil {
		return *x.DownscaleSmoothingFactor
	}
	return 0
}

func (x *AutoscalingConfig) GetXSerializedPolicyDef() []byte {
	if x != nil {
		return x.XSerializedPolicyDef
	}
	return nil
}

func (x *AutoscalingConfig) GetXPolicy() string {
	if x != nil {
		return x.XPolicy
	}
	return ""
}

func (x *AutoscalingConfig) GetTargetOngoingRequests() float64 {
	if x != nil {
		return x.TargetOngoingRequests
	}
	return 0
}

func (x *AutoscalingConfig) GetUpscalingFactor() float64 {
	if x != nil && x.UpscalingFactor != nil {
		return *x.UpscalingFactor
	}
	return 0
}

func (x *AutoscalingConfig) GetDownscalingFactor() float64 {
	if x != nil && x.DownscalingFactor != nil {
		return *x.DownscalingFactor
	}
	return 0
}

type LoggingConfig struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Encoding                   EncodingType           `protobuf:"varint,1,opt,name=encoding,proto3,enum=ray.serve.EncodingType" json:"encoding,omitempty"`
	LogLevel                   string                 `protobuf:"bytes,2,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogsDir                    string                 `protobuf:"bytes,3,opt,name=logs_dir,json=logsDir,proto3" json:"logs_dir,omitempty"`
	EnableAccessLog            bool                   `protobuf:"varint,4,opt,name=enable_access_log,json=enableAccessLog,proto3" json:"enable_access_log,omitempty"`
	AdditionalLogStandardAttrs []string               `protobuf:"bytes,5,rep,name=additional_log_standard_attrs,json=additionalLogStandardAttrs,proto3" json:"additional_log_standard_attrs,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *LoggingConfig) Reset() {
	*x = LoggingConfig{}
	mi := &file_model_ray_serve_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingConfig) ProtoMessage() {}

func (x *LoggingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingConfig.ProtoReflect.Descriptor instead.
func (*LoggingConfig) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{1}
}

func (x *LoggingConfig) GetEncoding() EncodingType {
	if x != nil {
		return x.Encoding
	}
	return EncodingType_TEXT
}

func (x *LoggingConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *LoggingConfig) GetLogsDir() string {
	if x != nil {
		return x.LogsDir
	}
	return ""
}

func (x *LoggingConfig) GetEnableAccessLog() bool {
	if x != nil {
		return x.EnableAccessLog
	}
	return false
}

func (x *LoggingConfig) GetAdditionalLogStandardAttrs() []string {
	if x != nil {
		return x.AdditionalLogStandardAttrs
	}
	return nil
}

// Configuration options for a deployment, to be set by the user.
type DeploymentConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of processes to start up that will handle requests to this
	// deployment.
	NumReplicas int32 `protobuf:"varint,1,opt,name=num_replicas,json=numReplicas,proto3" json:"num_replicas,omitempty"`
	// The maximum number of queries that will be sent to a replica of this
	// deployment without receiving a response.
	MaxOngoingRequests int32 `protobuf:"varint,2,opt,name=max_ongoing_requests,json=maxOngoingRequests,proto3" json:"max_ongoing_requests,omitempty"`
	// The maximum number of requests that will be queued in deployment handles.
	MaxQueuedRequests int32 `protobuf:"varint,3,opt,name=max_queued_requests,json=maxQueuedRequests,proto3" json:"max_queued_requests,omitempty"`
	// Arguments to pass to the reconfigure method of the deployment. The
	// reconfigure method is called if user_config is not None.
	UserConfig []byte `protobuf:"bytes,4,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Duration that deployment replicas will wait until there is no more work to
	// be done before shutting down.
	GracefulShutdownWaitLoopS float64 `protobuf:"fixed64,5,opt,name=graceful_shutdown_wait_loop_s,json=gracefulShutdownWaitLoopS,proto3" json:"graceful_shutdown_wait_loop_s,omitempty"`
	// Controller waits for this duration to forcefully kill the replica for
	// shutdown.
	GracefulShutdownTimeoutS float64 `protobuf:"fixed64,6,opt,name=graceful_shutdown_timeout_s,json=gracefulShutdownTimeoutS,proto3" json:"graceful_shutdown_timeout_s,omitempty"`
	// Frequency at which the controller health checks replicas.
	HealthCheckPeriodS float64 `protobuf:"fixed64,7,opt,name=health_check_period_s,json=healthCheckPeriodS,proto3" json:"health_check_period_s,omitempty"`
	// Timeout after which a replica is marked unhealthy without a response.
	HealthCheckTimeoutS float64 `protobuf:"fixed64,8,opt,name=health_check_timeout_s,json=healthCheckTimeoutS,proto3" json:"health_check_timeout_s,omitempty"`
	// Is the construction of deployment is cross language?
	IsCrossLanguage bool `protobuf:"varint,9,opt,name=is_cross_language,json=isCrossLanguage,proto3" json:"is_cross_language,omitempty"`
	// The deployment's programming language.
	DeploymentLanguage DeploymentLanguage `protobuf:"varint,10,opt,name=deployment_language,json=deploymentLanguage,proto3,enum=ray.serve.DeploymentLanguage" json:"deployment_language,omitempty"`
	// The deployment's autoscaling configuration.
	AutoscalingConfig         *AutoscalingConfig `protobuf:"bytes,11,opt,name=autoscaling_config,json=autoscalingConfig,proto3" json:"autoscaling_config,omitempty"`
	Version                   string             `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	UserConfiguredOptionNames []string           `protobuf:"bytes,13,rep,name=user_configured_option_names,json=userConfiguredOptionNames,proto3" json:"user_configured_option_names,omitempty"`
	LoggingConfig             *LoggingConfig     `protobuf:"bytes,14,opt,name=logging_config,json=loggingConfig,proto3" json:"logging_config,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DeploymentConfig) Reset() {
	*x = DeploymentConfig{}
	mi := &file_model_ray_serve_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentConfig) ProtoMessage() {}

func (x *DeploymentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentConfig.ProtoReflect.Descriptor instead.
func (*DeploymentConfig) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{2}
}

func (x *DeploymentConfig) GetNumReplicas() int32 {
	if x != nil {
		return x.NumReplicas
	}
	return 0
}

func (x *DeploymentConfig) GetMaxOngoingRequests() int32 {
	if x != nil {
		return x.MaxOngoingRequests
	}
	return 0
}

func (x *DeploymentConfig) GetMaxQueuedRequests() int32 {
	if x != nil {
		return x.MaxQueuedRequests
	}
	return 0
}

func (x *DeploymentConfig) GetUserConfig() []byte {
	if x != nil {
		return x.UserConfig
	}
	return nil
}

func (x *DeploymentConfig) GetGracefulShutdownWaitLoopS() float64 {
	if x != nil {
		return x.GracefulShutdownWaitLoopS
	}
	return 0
}

func (x *DeploymentConfig) GetGracefulShutdownTimeoutS() float64 {
	if x != nil {
		return x.GracefulShutdownTimeoutS
	}
	return 0
}

func (x *DeploymentConfig) GetHealthCheckPeriodS() float64 {
	if x != nil {
		return x.HealthCheckPeriodS
	}
	return 0
}

func (x *DeploymentConfig) GetHealthCheckTimeoutS() float64 {
	if x != nil {
		return x.HealthCheckTimeoutS
	}
	return 0
}

func (x *DeploymentConfig) GetIsCrossLanguage() bool {
	if x != nil {
		return x.IsCrossLanguage
	}
	return false
}

func (x *DeploymentConfig) GetDeploymentLanguage() DeploymentLanguage {
	if x != nil {
		return x.DeploymentLanguage
	}
	return DeploymentLanguage_PYTHON
}

func (x *DeploymentConfig) GetAutoscalingConfig() *AutoscalingConfig {
	if x != nil {
		return x.AutoscalingConfig
	}
	return nil
}

func (x *DeploymentConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeploymentConfig) GetUserConfiguredOptionNames() []string {
	if x != nil {
		return x.UserConfiguredOptionNames
	}
	return nil
}

func (x *DeploymentConfig) GetLoggingConfig() *LoggingConfig {
	if x != nil {
		return x.LoggingConfig
	}
	return nil
}

type RequestMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RequestId          string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	InternalRequestId  string                 `protobuf:"bytes,2,opt,name=internal_request_id,json=internalRequestId,proto3" json:"internal_request_id,omitempty"`
	CallMethod         string                 `protobuf:"bytes,3,opt,name=call_method,json=callMethod,proto3" json:"call_method,omitempty"`
	Context            map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MultiplexedModelId string                 `protobuf:"bytes,5,opt,name=multiplexed_model_id,json=multiplexedModelId,proto3" json:"multiplexed_model_id,omitempty"`
	Route              string                 `protobuf:"bytes,6,opt,name=route,proto3" json:"route,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RequestMetadata) Reset() {
	*x = RequestMetadata{}
	mi := &file_model_ray_serve_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetadata) ProtoMessage() {}

func (x *RequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetadata.ProtoReflect.Descriptor instead.
func (*RequestMetadata) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{3}
}

func (x *RequestMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RequestMetadata) GetInternalRequestId() string {
	if x != nil {
		return x.InternalRequestId
	}
	return ""
}

func (x *RequestMetadata) GetCallMethod() string {
	if x != nil {
		return x.CallMethod
	}
	return ""
}

func (x *RequestMetadata) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *RequestMetadata) GetMultiplexedModelId() string {
	if x != nil {
		return x.MultiplexedModelId
	}
	return ""
}

func (x *RequestMetadata) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

type RequestWrapper struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          []byte                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestWrapper) Reset() {
	*x = RequestWrapper{}
	mi := &file_model_ray_serve_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWrapper) ProtoMessage() {}

func (x *RequestWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWrapper.ProtoReflect.Descriptor instead.
func (*RequestWrapper) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{4}
}

func (x *RequestWrapper) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type UpdatedObject struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ObjectSnapshot []byte                 `protobuf:"bytes,1,opt,name=object_snapshot,json=objectSnapshot,proto3" json:"object_snapshot,omitempty"`
	SnapshotId     int32                  `protobuf:"varint,2,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdatedObject) Reset() {
	*x = UpdatedObject{}
	mi := &file_model_ray_serve_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedObject) ProtoMessage() {}

func (x *UpdatedObject) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedObject.ProtoReflect.Descriptor instead.
func (*UpdatedObject) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatedObject) GetObjectSnapshot() []byte {
	if x != nil {
		return x.ObjectSnapshot
	}
	return nil
}

func (x *UpdatedObject) GetSnapshotId() int32 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

type LongPollRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	KeysToSnapshotIds map[string]int32       `protobuf:"bytes,1,rep,name=keys_to_snapshot_ids,json=keysToSnapshotIds,proto3" json:"keys_to_snapshot_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LongPollRequest) Reset() {
	*x = LongPollRequest{}
	mi := &file_model_ray_serve_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LongPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongPollRequest) ProtoMessage() {}

func (x *LongPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongPollRequest.ProtoReflect.Descriptor instead.
func (*LongPollRequest) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{6}
}

func (x *LongPollRequest) GetKeysToSnapshotIds() map[string]int32 {
	if x != nil {
		return x.KeysToSnapshotIds
	}
	return nil
}

type LongPollResult struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	UpdatedObjects map[string]*UpdatedObject `protobuf:"bytes,1,rep,name=updated_objects,json=updatedObjects,proto3" json:"updated_objects,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LongPollResult) Reset() {
	*x = LongPollResult{}
	mi := &file_model_ray_serve_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LongPollResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongPollResult) ProtoMessage() {}

func (x *LongPollResult) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongPollResult.ProtoReflect.Descriptor instead.
func (*LongPollResult) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{7}
}

func (x *LongPollResult) GetUpdatedObjects() map[string]*UpdatedObject {
	if x != nil {
		return x.UpdatedObjects
	}
	return nil
}

type EndpointInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EndpointName  string                 `protobuf:"bytes,1,opt,name=endpoint_name,json=endpointName,proto3" json:"endpoint_name,omitempty"`
	Route         string                 `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	Config        map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndpointInfo) Reset() {
	*x = EndpointInfo{}
	mi := &file_model_ray_serve_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndpointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointInfo) ProtoMessage() {}

func (x *EndpointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointInfo.ProtoReflect.Descriptor instead.
func (*EndpointInfo) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{8}
}

func (x *EndpointInfo) GetEndpointName() string {
	if x != nil {
		return x.EndpointName
	}
	return ""
}

func (x *EndpointInfo) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *EndpointInfo) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type EndpointSet struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Endpoints     map[string]*EndpointInfo `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndpointSet) Reset() {
	*x = EndpointSet{}
	mi := &file_model_ray_serve_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndpointSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointSet) ProtoMessage() {}

func (x *EndpointSet) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointSet.ProtoReflect.Descriptor instead.
func (*EndpointSet) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{9}
}

func (x *EndpointSet) GetEndpoints() map[string]*EndpointInfo {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// Now Actor handle can be transfered across language through ray call, but the
// list of Actor handles can't. So we use this message wrapped a Actor name list
// to pass actor list across language. When Actor handle list supports across
// language, this message can be replaced.
type ActorNameList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActorNameList) Reset() {
	*x = ActorNameList{}
	mi := &file_model_ray_serve_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActorNameList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorNameList) ProtoMessage() {}

func (x *ActorNameList) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorNameList.ProtoReflect.Descriptor instead.
func (*ActorNameList) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{10}
}

func (x *ActorNameList) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type DeploymentTargetInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaNames  []string               `protobuf:"bytes,1,rep,name=replica_names,json=replicaNames,proto3" json:"replica_names,omitempty"`
	IsAvailable   bool                   `protobuf:"varint,2,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentTargetInfo) Reset() {
	*x = DeploymentTargetInfo{}
	mi := &file_model_ray_serve_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentTargetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentTargetInfo) ProtoMessage() {}

func (x *DeploymentTargetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentTargetInfo.ProtoReflect.Descriptor instead.
func (*DeploymentTargetInfo) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{11}
}

func (x *DeploymentTargetInfo) GetReplicaNames() []string {
	if x != nil {
		return x.ReplicaNames
	}
	return nil
}

func (x *DeploymentTargetInfo) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

type DeploymentVersion struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CodeVersion            string                 `protobuf:"bytes,1,opt,name=code_version,json=codeVersion,proto3" json:"code_version,omitempty"`
	DeploymentConfig       *DeploymentConfig      `protobuf:"bytes,2,opt,name=deployment_config,json=deploymentConfig,proto3" json:"deployment_config,omitempty"`
	RayActorOptions        string                 `protobuf:"bytes,3,opt,name=ray_actor_options,json=rayActorOptions,proto3" json:"ray_actor_options,omitempty"`
	PlacementGroupBundles  string                 `protobuf:"bytes,4,opt,name=placement_group_bundles,json=placementGroupBundles,proto3" json:"placement_group_bundles,omitempty"`
	PlacementGroupStrategy string                 `protobuf:"bytes,5,opt,name=placement_group_strategy,json=placementGroupStrategy,proto3" json:"placement_group_strategy,omitempty"`
	MaxReplicasPerNode     int32                  `protobuf:"varint,6,opt,name=max_replicas_per_node,json=maxReplicasPerNode,proto3" json:"max_replicas_per_node,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeploymentVersion) Reset() {
	*x = DeploymentVersion{}
	mi := &file_model_ray_serve_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentVersion) ProtoMessage() {}

func (x *DeploymentVersion) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentVersion.ProtoReflect.Descriptor instead.
func (*DeploymentVersion) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{12}
}

func (x *DeploymentVersion) GetCodeVersion() string {
	if x != nil {
		return x.CodeVersion
	}
	return ""
}

func (x *DeploymentVersion) GetDeploymentConfig() *DeploymentConfig {
	if x != nil {
		return x.DeploymentConfig
	}
	return nil
}

func (x *DeploymentVersion) GetRayActorOptions() string {
	if x != nil {
		return x.RayActorOptions
	}
	return ""
}

func (x *DeploymentVersion) GetPlacementGroupBundles() string {
	if x != nil {
		return x.PlacementGroupBundles
	}
	return ""
}

func (x *DeploymentVersion) GetPlacementGroupStrategy() string {
	if x != nil {
		return x.PlacementGroupStrategy
	}
	return ""
}

func (x *DeploymentVersion) GetMaxReplicasPerNode() int32 {
	if x != nil {
		return x.MaxReplicasPerNode
	}
	return 0
}

type ReplicaConfig struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	DeploymentDefName      string                 `protobuf:"bytes,1,opt,name=deployment_def_name,json=deploymentDefName,proto3" json:"deployment_def_name,omitempty"`
	DeploymentDef          []byte                 `protobuf:"bytes,2,opt,name=deployment_def,json=deploymentDef,proto3" json:"deployment_def,omitempty"`
	InitArgs               []byte                 `protobuf:"bytes,3,opt,name=init_args,json=initArgs,proto3" json:"init_args,omitempty"`
	InitKwargs             []byte                 `protobuf:"bytes,4,opt,name=init_kwargs,json=initKwargs,proto3" json:"init_kwargs,omitempty"`
	RayActorOptions        string                 `protobuf:"bytes,5,opt,name=ray_actor_options,json=rayActorOptions,proto3" json:"ray_actor_options,omitempty"`
	PlacementGroupBundles  string                 `protobuf:"bytes,6,opt,name=placement_group_bundles,json=placementGroupBundles,proto3" json:"placement_group_bundles,omitempty"`
	PlacementGroupStrategy string                 `protobuf:"bytes,7,opt,name=placement_group_strategy,json=placementGroupStrategy,proto3" json:"placement_group_strategy,omitempty"`
	MaxReplicasPerNode     int32                  `protobuf:"varint,8,opt,name=max_replicas_per_node,json=maxReplicasPerNode,proto3" json:"max_replicas_per_node,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReplicaConfig) Reset() {
	*x = ReplicaConfig{}
	mi := &file_model_ray_serve_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaConfig) ProtoMessage() {}

func (x *ReplicaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaConfig.ProtoReflect.Descriptor instead.
func (*ReplicaConfig) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{13}
}

func (x *ReplicaConfig) GetDeploymentDefName() string {
	if x != nil {
		return x.DeploymentDefName
	}
	return ""
}

func (x *ReplicaConfig) GetDeploymentDef() []byte {
	if x != nil {
		return x.DeploymentDef
	}
	return nil
}

func (x *ReplicaConfig) GetInitArgs() []byte {
	if x != nil {
		return x.InitArgs
	}
	return nil
}

func (x *ReplicaConfig) GetInitKwargs() []byte {
	if x != nil {
		return x.InitKwargs
	}
	return nil
}

func (x *ReplicaConfig) GetRayActorOptions() string {
	if x != nil {
		return x.RayActorOptions
	}
	return ""
}

func (x *ReplicaConfig) GetPlacementGroupBundles() string {
	if x != nil {
		return x.PlacementGroupBundles
	}
	return ""
}

func (x *ReplicaConfig) GetPlacementGroupStrategy() string {
	if x != nil {
		return x.PlacementGroupStrategy
	}
	return ""
}

func (x *ReplicaConfig) GetMaxReplicasPerNode() int32 {
	if x != nil {
		return x.MaxReplicasPerNode
	}
	return 0
}

type DeploymentInfo struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	Name                    string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeploymentConfig        *DeploymentConfig       `protobuf:"bytes,2,opt,name=deployment_config,json=deploymentConfig,proto3" json:"deployment_config,omitempty"`
	ReplicaConfig           *ReplicaConfig          `protobuf:"bytes,3,opt,name=replica_config,json=replicaConfig,proto3" json:"replica_config,omitempty"`
	StartTimeMs             int64                   `protobuf:"varint,4,opt,name=start_time_ms,json=startTimeMs,proto3" json:"start_time_ms,omitempty"`
	ActorName               string                  `protobuf:"bytes,5,opt,name=actor_name,json=actorName,proto3" json:"actor_name,omitempty"`
	Version                 string                  `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	EndTimeMs               int64                   `protobuf:"varint,7,opt,name=end_time_ms,json=endTimeMs,proto3" json:"end_time_ms,omitempty"`
	TargetCapacity          float64                 `protobuf:"fixed64,8,opt,name=target_capacity,json=targetCapacity,proto3" json:"target_capacity,omitempty"`
	TargetCapacityDirection TargetCapacityDirection `protobuf:"varint,9,opt,name=target_capacity_direction,json=targetCapacityDirection,proto3,enum=ray.serve.TargetCapacityDirection" json:"target_capacity_direction,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeploymentInfo) Reset() {
	*x = DeploymentInfo{}
	mi := &file_model_ray_serve_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentInfo) ProtoMessage() {}

func (x *DeploymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentInfo.ProtoReflect.Descriptor instead.
func (*DeploymentInfo) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{14}
}

func (x *DeploymentInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeploymentInfo) GetDeploymentConfig() *DeploymentConfig {
	if x != nil {
		return x.DeploymentConfig
	}
	return nil
}

func (x *DeploymentInfo) GetReplicaConfig() *ReplicaConfig {
	if x != nil {
		return x.ReplicaConfig
	}
	return nil
}

func (x *DeploymentInfo) GetStartTimeMs() int64 {
	if x != nil {
		return x.StartTimeMs
	}
	return 0
}

func (x *DeploymentInfo) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *DeploymentInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeploymentInfo) GetEndTimeMs() int64 {
	if x != nil {
		return x.EndTimeMs
	}
	return 0
}

func (x *DeploymentInfo) GetTargetCapacity() float64 {
	if x != nil {
		return x.TargetCapacity
	}
	return 0
}

func (x *DeploymentInfo) GetTargetCapacityDirection() TargetCapacityDirection {
	if x != nil {
		return x.TargetCapacityDirection
	}
	return TargetCapacityDirection_UNSET
}

// Wrap DeploymentInfo and route. The "" route value need to be convert to
// None/null.
type DeploymentRoute struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeploymentInfo *DeploymentInfo        `protobuf:"bytes,1,opt,name=deployment_info,json=deploymentInfo,proto3" json:"deployment_info,omitempty"`
	Route          string                 `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeploymentRoute) Reset() {
	*x = DeploymentRoute{}
	mi := &file_model_ray_serve_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentRoute) ProtoMessage() {}

func (x *DeploymentRoute) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentRoute.ProtoReflect.Descriptor instead.
func (*DeploymentRoute) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{15}
}

func (x *DeploymentRoute) GetDeploymentInfo() *DeploymentInfo {
	if x != nil {
		return x.DeploymentInfo
	}
	return nil
}

func (x *DeploymentRoute) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

// Wrap a list for DeploymentRoute.
type DeploymentRouteList struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DeploymentRoutes []*DeploymentRoute     `protobuf:"bytes,1,rep,name=deployment_routes,json=deploymentRoutes,proto3" json:"deployment_routes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeploymentRouteList) Reset() {
	*x = DeploymentRouteList{}
	mi := &file_model_ray_serve_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentRouteList) ProtoMessage() {}

func (x *DeploymentRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentRouteList.ProtoReflect.Descriptor instead.
func (*DeploymentRouteList) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{16}
}

func (x *DeploymentRouteList) GetDeploymentRoutes() []*DeploymentRoute {
	if x != nil {
		return x.DeploymentRoutes
	}
	return nil
}

type DeploymentStatusInfo struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Name          string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        DeploymentStatus        `protobuf:"varint,2,opt,name=status,proto3,enum=ray.serve.DeploymentStatus" json:"status,omitempty"`
	Message       string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	StatusTrigger DeploymentStatusTrigger `protobuf:"varint,4,opt,name=status_trigger,json=statusTrigger,proto3,enum=ray.serve.DeploymentStatusTrigger" json:"status_trigger,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentStatusInfo) Reset() {
	*x = DeploymentStatusInfo{}
	mi := &file_model_ray_serve_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStatusInfo) ProtoMessage() {}

func (x *DeploymentStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStatusInfo.ProtoReflect.Descriptor instead.
func (*DeploymentStatusInfo) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{17}
}

func (x *DeploymentStatusInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeploymentStatusInfo) GetStatus() DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return DeploymentStatus_DEPLOYMENT_STATUS_UPDATING
}

func (x *DeploymentStatusInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeploymentStatusInfo) GetStatusTrigger() DeploymentStatusTrigger {
	if x != nil {
		return x.StatusTrigger
	}
	return DeploymentStatusTrigger_DEPLOYMENT_STATUS_TRIGGER_UNSPECIFIED
}

// Wrap a list for DeploymentStatusInfo.
type DeploymentStatusInfoList struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	DeploymentStatusInfos []*DeploymentStatusInfo `protobuf:"bytes,1,rep,name=deployment_status_infos,json=deploymentStatusInfos,proto3" json:"deployment_status_infos,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DeploymentStatusInfoList) Reset() {
	*x = DeploymentStatusInfoList{}
	mi := &file_model_ray_serve_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentStatusInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStatusInfoList) ProtoMessage() {}

func (x *DeploymentStatusInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStatusInfoList.ProtoReflect.Descriptor instead.
func (*DeploymentStatusInfoList) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{18}
}

func (x *DeploymentStatusInfoList) GetDeploymentStatusInfos() []*DeploymentStatusInfo {
	if x != nil {
		return x.DeploymentStatusInfos
	}
	return nil
}

type ApplicationStatusInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Status              ApplicationStatus      `protobuf:"varint,1,opt,name=status,proto3,enum=ray.serve.ApplicationStatus" json:"status,omitempty"`
	Message             string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeploymentTimestamp float64                `protobuf:"fixed64,3,opt,name=deployment_timestamp,json=deploymentTimestamp,proto3" json:"deployment_timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ApplicationStatusInfo) Reset() {
	*x = ApplicationStatusInfo{}
	mi := &file_model_ray_serve_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStatusInfo) ProtoMessage() {}

func (x *ApplicationStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStatusInfo.ProtoReflect.Descriptor instead.
func (*ApplicationStatusInfo) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{19}
}

func (x *ApplicationStatusInfo) GetStatus() ApplicationStatus {
	if x != nil {
		return x.Status
	}
	return ApplicationStatus_APPLICATION_STATUS_DEPLOYING
}

func (x *ApplicationStatusInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationStatusInfo) GetDeploymentTimestamp() float64 {
	if x != nil {
		return x.DeploymentTimestamp
	}
	return 0
}

type StatusOverview struct {
	state              protoimpl.MessageState    `protogen:"open.v1"`
	AppStatus          *ApplicationStatusInfo    `protobuf:"bytes,1,opt,name=app_status,json=appStatus,proto3" json:"app_status,omitempty"`
	DeploymentStatuses *DeploymentStatusInfoList `protobuf:"bytes,2,opt,name=deployment_statuses,json=deploymentStatuses,proto3" json:"deployment_statuses,omitempty"`
	Name               string                    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StatusOverview) Reset() {
	*x = StatusOverview{}
	mi := &file_model_ray_serve_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusOverview) ProtoMessage() {}

func (x *StatusOverview) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusOverview.ProtoReflect.Descriptor instead.
func (*StatusOverview) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{20}
}

func (x *StatusOverview) GetAppStatus() *ApplicationStatusInfo {
	if x != nil {
		return x.AppStatus
	}
	return nil
}

func (x *StatusOverview) GetDeploymentStatuses() *DeploymentStatusInfoList {
	if x != nil {
		return x.DeploymentStatuses
	}
	return nil
}

func (x *StatusOverview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Used for gRPC proxy health check
type ListApplicationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	mi := &file_model_ray_serve_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{21}
}

type ListApplicationsResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ApplicationNames []string               `protobuf:"bytes,1,rep,name=application_names,json=applicationNames,proto3" json:"application_names,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListApplicationsResponse) Reset() {
	*x = ListApplicationsResponse{}
	mi := &file_model_ray_serve_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsResponse) ProtoMessage() {}

func (x *ListApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{22}
}

func (x *ListApplicationsResponse) GetApplicationNames() []string {
	if x != nil {
		return x.ApplicationNames
	}
	return nil
}

type HealthzRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthzRequest) Reset() {
	*x = HealthzRequest{}
	mi := &file_model_ray_serve_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzRequest) ProtoMessage() {}

func (x *HealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzRequest.ProtoReflect.Descriptor instead.
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{23}
}

type HealthzResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthzResponse) Reset() {
	*x = HealthzResponse{}
	mi := &file_model_ray_serve_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzResponse) ProtoMessage() {}

func (x *HealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzResponse.ProtoReflect.Descriptor instead.
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{24}
}

func (x *HealthzResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Used for gRPC related tests
type UserDefinedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Foo           string                 `protobuf:"bytes,2,opt,name=foo,proto3" json:"foo,omitempty"`
	Num           int64                  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDefinedMessage) Reset() {
	*x = UserDefinedMessage{}
	mi := &file_model_ray_serve_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDefinedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefinedMessage) ProtoMessage() {}

func (x *UserDefinedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefinedMessage.ProtoReflect.Descriptor instead.
func (*UserDefinedMessage) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{25}
}

func (x *UserDefinedMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDefinedMessage) GetFoo() string {
	if x != nil {
		return x.Foo
	}
	return ""
}

func (x *UserDefinedMessage) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type UserDefinedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Greeting      string                 `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	NumX2         int64                  `protobuf:"varint,2,opt,name=num_x2,json=numX2,proto3" json:"num_x2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDefinedResponse) Reset() {
	*x = UserDefinedResponse{}
	mi := &file_model_ray_serve_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDefinedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefinedResponse) ProtoMessage() {}

func (x *UserDefinedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefinedResponse.ProtoReflect.Descriptor instead.
func (*UserDefinedResponse) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{26}
}

func (x *UserDefinedResponse) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *UserDefinedResponse) GetNumX2() int64 {
	if x != nil {
		return x.NumX2
	}
	return 0
}

type UserDefinedMessage2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDefinedMessage2) Reset() {
	*x = UserDefinedMessage2{}
	mi := &file_model_ray_serve_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDefinedMessage2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefinedMessage2) ProtoMessage() {}

func (x *UserDefinedMessage2) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefinedMessage2.ProtoReflect.Descriptor instead.
func (*UserDefinedMessage2) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{27}
}

type UserDefinedResponse2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Greeting      string                 `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDefinedResponse2) Reset() {
	*x = UserDefinedResponse2{}
	mi := &file_model_ray_serve_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDefinedResponse2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefinedResponse2) ProtoMessage() {}

func (x *UserDefinedResponse2) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefinedResponse2.ProtoReflect.Descriptor instead.
func (*UserDefinedResponse2) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{28}
}

func (x *UserDefinedResponse2) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

type FruitAmounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orange        int64                  `protobuf:"varint,1,opt,name=orange,proto3" json:"orange,omitempty"`
	Apple         int64                  `protobuf:"varint,2,opt,name=apple,proto3" json:"apple,omitempty"`
	Banana        int64                  `protobuf:"varint,3,opt,name=banana,proto3" json:"banana,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FruitAmounts) Reset() {
	*x = FruitAmounts{}
	mi := &file_model_ray_serve_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FruitAmounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FruitAmounts) ProtoMessage() {}

func (x *FruitAmounts) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FruitAmounts.ProtoReflect.Descriptor instead.
func (*FruitAmounts) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{29}
}

func (x *FruitAmounts) GetOrange() int64 {
	if x != nil {
		return x.Orange
	}
	return 0
}

func (x *FruitAmounts) GetApple() int64 {
	if x != nil {
		return x.Apple
	}
	return 0
}

func (x *FruitAmounts) GetBanana() int64 {
	if x != nil {
		return x.Banana
	}
	return 0
}

type FruitCosts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Costs         float32                `protobuf:"fixed32,1,opt,name=costs,proto3" json:"costs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FruitCosts) Reset() {
	*x = FruitCosts{}
	mi := &file_model_ray_serve_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FruitCosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FruitCosts) ProtoMessage() {}

func (x *FruitCosts) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FruitCosts.ProtoReflect.Descriptor instead.
func (*FruitCosts) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{30}
}

func (x *FruitCosts) GetCosts() float32 {
	if x != nil {
		return x.Costs
	}
	return 0
}

// Used for gRPC benchmark
type ArrayData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nums          []float32              `protobuf:"fixed32,1,rep,packed,name=nums,proto3" json:"nums,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArrayData) Reset() {
	*x = ArrayData{}
	mi := &file_model_ray_serve_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArrayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayData) ProtoMessage() {}

func (x *ArrayData) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayData.ProtoReflect.Descriptor instead.
func (*ArrayData) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{31}
}

func (x *ArrayData) GetNums() []float32 {
	if x != nil {
		return x.Nums
	}
	return nil
}

type StringData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringData) Reset() {
	*x = StringData{}
	mi := &file_model_ray_serve_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringData) ProtoMessage() {}

func (x *StringData) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringData.ProtoReflect.Descriptor instead.
func (*StringData) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{32}
}

func (x *StringData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ModelOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        float32                `protobuf:"fixed32,1,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModelOutput) Reset() {
	*x = ModelOutput{}
	mi := &file_model_ray_serve_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelOutput) ProtoMessage() {}

func (x *ModelOutput) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelOutput.ProtoReflect.Descriptor instead.
func (*ModelOutput) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{33}
}

func (x *ModelOutput) GetOutput() float32 {
	if x != nil {
		return x.Output
	}
	return 0
}

// The required deployment parameters when deploying an application.
type DeploymentArgs struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DeploymentName   string                 `protobuf:"bytes,1,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
	DeploymentConfig []byte                 `protobuf:"bytes,2,opt,name=deployment_config,json=deploymentConfig,proto3" json:"deployment_config,omitempty"`
	ReplicaConfig    []byte                 `protobuf:"bytes,3,opt,name=replica_config,json=replicaConfig,proto3" json:"replica_config,omitempty"`
	DeployerJobId    string                 `protobuf:"bytes,4,opt,name=deployer_job_id,json=deployerJobId,proto3" json:"deployer_job_id,omitempty"`
	RoutePrefix      *string                `protobuf:"bytes,5,opt,name=route_prefix,json=routePrefix,proto3,oneof" json:"route_prefix,omitempty"`
	Ingress          bool                   `protobuf:"varint,6,opt,name=ingress,proto3" json:"ingress,omitempty"`
	DocsPath         *string                `protobuf:"bytes,7,opt,name=docs_path,json=docsPath,proto3,oneof" json:"docs_path,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeploymentArgs) Reset() {
	*x = DeploymentArgs{}
	mi := &file_model_ray_serve_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentArgs) ProtoMessage() {}

func (x *DeploymentArgs) ProtoReflect() protoreflect.Message {
	mi := &file_model_ray_serve_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentArgs.ProtoReflect.Descriptor instead.
func (*DeploymentArgs) Descriptor() ([]byte, []int) {
	return file_model_ray_serve_proto_rawDescGZIP(), []int{34}
}

func (x *DeploymentArgs) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

func (x *DeploymentArgs) GetDeploymentConfig() []byte {
	if x != nil {
		return x.DeploymentConfig
	}
	return nil
}

func (x *DeploymentArgs) GetReplicaConfig() []byte {
	if x != nil {
		return x.ReplicaConfig
	}
	return nil
}

func (x *DeploymentArgs) GetDeployerJobId() string {
	if x != nil {
		return x.DeployerJobId
	}
	return ""
}

func (x *DeploymentArgs) GetRoutePrefix() string {
	if x != nil && x.RoutePrefix != nil {
		return *x.RoutePrefix
	}
	return ""
}

func (x *DeploymentArgs) GetIngress() bool {
	if x != nil {
		return x.Ingress
	}
	return false
}

func (x *DeploymentArgs) GetDocsPath() string {
	if x != nil && x.DocsPath != nil {
		return *x.DocsPath
	}
	return ""
}

var File_model_ray_serve_proto protoreflect.FileDescriptor

const file_model_ray_serve_proto_rawDesc = "" +
	"\n" +
	"\x15model/ray/serve.proto\x12\tray.serve\"\xcc\x06\n" +
	"\x11AutoscalingConfig\x12!\n" +
	"\fmin_replicas\x18\x01 \x01(\rR\vminReplicas\x12!\n" +
	"\fmax_replicas\x18\x02 \x01(\rR\vmaxReplicas\x12,\n" +
	"\x12metrics_interval_s\x18\x03 \x01(\x01R\x10metricsIntervalS\x12+\n" +
	"\x12look_back_period_s\x18\x04 \x01(\x01R\x0flookBackPeriodS\x12)\n" +
	"\x10smoothing_factor\x18\x05 \x01(\x01R\x0fsmoothingFactor\x12*\n" +
	"\x11downscale_delay_s\x18\x06 \x01(\x01R\x0fdownscaleDelayS\x12&\n" +
	"\x0fupscale_delay_s\x18\a \x01(\x01R\rupscaleDelayS\x12.\n" +
	"\x10initial_replicas\x18\b \x01(\rH\x00R\x0finitialReplicas\x88\x01\x01\x12=\n" +
	"\x18upscale_smoothing_factor\x18\t \x01(\x01H\x01R\x16upscaleSmoothingFactor\x88\x01\x01\x12A\n" +
	"\x1adownscale_smoothing_factor\x18\n" +
	" \x01(\x01H\x02R\x18downscaleSmoothingFactor\x88\x01\x01\x123\n" +
	"\x16_serialized_policy_def\x18\v \x01(\fR\x13SerializedPolicyDef\x12\x17\n" +
	"\a_policy\x18\f \x01(\tR\x06Policy\x126\n" +
	"\x17target_ongoing_requests\x18\r \x01(\x01R\x15targetOngoingRequests\x12.\n" +
	"\x10upscaling_factor\x18\x0e \x01(\x01H\x03R\x0fupscalingFactor\x88\x01\x01\x122\n" +
	"\x12downscaling_factor\x18\x0f \x01(\x01H\x04R\x11downscalingFactor\x88\x01\x01B\x13\n" +
	"\x11_initial_replicasB\x1b\n" +
	"\x19_upscale_smoothing_factorB\x1d\n" +
	"\x1b_downscale_smoothing_factorB\x13\n" +
	"\x11_upscaling_factorB\x15\n" +
	"\x13_downscaling_factor\"\xeb\x01\n" +
	"\rLoggingConfig\x123\n" +
	"\bencoding\x18\x01 \x01(\x0e2\x17.ray.serve.EncodingTypeR\bencoding\x12\x1b\n" +
	"\tlog_level\x18\x02 \x01(\tR\blogLevel\x12\x19\n" +
	"\blogs_dir\x18\x03 \x01(\tR\alogsDir\x12*\n" +
	"\x11enable_access_log\x18\x04 \x01(\bR\x0fenableAccessLog\x12A\n" +
	"\x1dadditional_log_standard_attrs\x18\x05 \x03(\tR\x1aadditionalLogStandardAttrs\"\x86\x06\n" +
	"\x10DeploymentConfig\x12!\n" +
	"\fnum_replicas\x18\x01 \x01(\x05R\vnumReplicas\x120\n" +
	"\x14max_ongoing_requests\x18\x02 \x01(\x05R\x12maxOngoingRequests\x12.\n" +
	"\x13max_queued_requests\x18\x03 \x01(\x05R\x11maxQueuedRequests\x12\x1f\n" +
	"\vuser_config\x18\x04 \x01(\fR\n" +
	"userConfig\x12@\n" +
	"\x1dgraceful_shutdown_wait_loop_s\x18\x05 \x01(\x01R\x19gracefulShutdownWaitLoopS\x12=\n" +
	"\x1bgraceful_shutdown_timeout_s\x18\x06 \x01(\x01R\x18gracefulShutdownTimeoutS\x121\n" +
	"\x15health_check_period_s\x18\a \x01(\x01R\x12healthCheckPeriodS\x123\n" +
	"\x16health_check_timeout_s\x18\b \x01(\x01R\x13healthCheckTimeoutS\x12*\n" +
	"\x11is_cross_language\x18\t \x01(\bR\x0fisCrossLanguage\x12N\n" +
	"\x13deployment_language\x18\n" +
	" \x01(\x0e2\x1d.ray.serve.DeploymentLanguageR\x12deploymentLanguage\x12K\n" +
	"\x12autoscaling_config\x18\v \x01(\v2\x1c.ray.serve.AutoscalingConfigR\x11autoscalingConfig\x12\x18\n" +
	"\aversion\x18\f \x01(\tR\aversion\x12?\n" +
	"\x1cuser_configured_option_names\x18\r \x03(\tR\x19userConfiguredOptionNames\x12?\n" +
	"\x0elogging_config\x18\x0e \x01(\v2\x18.ray.serve.LoggingConfigR\rloggingConfig\"\xc8\x02\n" +
	"\x0fRequestMetadata\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12.\n" +
	"\x13internal_request_id\x18\x02 \x01(\tR\x11internalRequestId\x12\x1f\n" +
	"\vcall_method\x18\x03 \x01(\tR\n" +
	"callMethod\x12A\n" +
	"\acontext\x18\x04 \x03(\v2'.ray.serve.RequestMetadata.ContextEntryR\acontext\x120\n" +
	"\x14multiplexed_model_id\x18\x05 \x01(\tR\x12multiplexedModelId\x12\x14\n" +
	"\x05route\x18\x06 \x01(\tR\x05route\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\x0eRequestWrapper\x12\x12\n" +
	"\x04body\x18\x01 \x01(\fR\x04body\"Y\n" +
	"\rUpdatedObject\x12'\n" +
	"\x0fobject_snapshot\x18\x01 \x01(\fR\x0eobjectSnapshot\x12\x1f\n" +
	"\vsnapshot_id\x18\x02 \x01(\x05R\n" +
	"snapshotId\"\xbb\x01\n" +
	"\x0fLongPollRequest\x12b\n" +
	"\x14keys_to_snapshot_ids\x18\x01 \x03(\v21.ray.serve.LongPollRequest.KeysToSnapshotIdsEntryR\x11keysToSnapshotIds\x1aD\n" +
	"\x16KeysToSnapshotIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xc5\x01\n" +
	"\x0eLongPollResult\x12V\n" +
	"\x0fupdated_objects\x18\x01 \x03(\v2-.ray.serve.LongPollResult.UpdatedObjectsEntryR\x0eupdatedObjects\x1a[\n" +
	"\x13UpdatedObjectsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.ray.serve.UpdatedObjectR\x05value:\x028\x01\"\xc1\x01\n" +
	"\fEndpointInfo\x12#\n" +
	"\rendpoint_name\x18\x01 \x01(\tR\fendpointName\x12\x14\n" +
	"\x05route\x18\x02 \x01(\tR\x05route\x12;\n" +
	"\x06config\x18\x03 \x03(\v2#.ray.serve.EndpointInfo.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa9\x01\n" +
	"\vEndpointSet\x12C\n" +
	"\tendpoints\x18\x01 \x03(\v2%.ray.serve.EndpointSet.EndpointsEntryR\tendpoints\x1aU\n" +
	"\x0eEndpointsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.ray.serve.EndpointInfoR\x05value:\x028\x01\"%\n" +
	"\rActorNameList\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"^\n" +
	"\x14DeploymentTargetInfo\x12#\n" +
	"\rreplica_names\x18\x01 \x03(\tR\freplicaNames\x12!\n" +
	"\fis_available\x18\x02 \x01(\bR\visAvailable\"\xd1\x02\n" +
	"\x11DeploymentVersion\x12!\n" +
	"\fcode_version\x18\x01 \x01(\tR\vcodeVersion\x12H\n" +
	"\x11deployment_config\x18\x02 \x01(\v2\x1b.ray.serve.DeploymentConfigR\x10deploymentConfig\x12*\n" +
	"\x11ray_actor_options\x18\x03 \x01(\tR\x0frayActorOptions\x126\n" +
	"\x17placement_group_bundles\x18\x04 \x01(\tR\x15placementGroupBundles\x128\n" +
	"\x18placement_group_strategy\x18\x05 \x01(\tR\x16placementGroupStrategy\x121\n" +
	"\x15max_replicas_per_node\x18\x06 \x01(\x05R\x12maxReplicasPerNode\"\xf5\x02\n" +
	"\rReplicaConfig\x12.\n" +
	"\x13deployment_def_name\x18\x01 \x01(\tR\x11deploymentDefName\x12%\n" +
	"\x0edeployment_def\x18\x02 \x01(\fR\rdeploymentDef\x12\x1b\n" +
	"\tinit_args\x18\x03 \x01(\fR\binitArgs\x12\x1f\n" +
	"\vinit_kwargs\x18\x04 \x01(\fR\n" +
	"initKwargs\x12*\n" +
	"\x11ray_actor_options\x18\x05 \x01(\tR\x0frayActorOptions\x126\n" +
	"\x17placement_group_bundles\x18\x06 \x01(\tR\x15placementGroupBundles\x128\n" +
	"\x18placement_group_strategy\x18\a \x01(\tR\x16placementGroupStrategy\x121\n" +
	"\x15max_replicas_per_node\x18\b \x01(\x05R\x12maxReplicasPerNode\"\xb5\x03\n" +
	"\x0eDeploymentInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12H\n" +
	"\x11deployment_config\x18\x02 \x01(\v2\x1b.ray.serve.DeploymentConfigR\x10deploymentConfig\x12?\n" +
	"\x0ereplica_config\x18\x03 \x01(\v2\x18.ray.serve.ReplicaConfigR\rreplicaConfig\x12\"\n" +
	"\rstart_time_ms\x18\x04 \x01(\x03R\vstartTimeMs\x12\x1d\n" +
	"\n" +
	"actor_name\x18\x05 \x01(\tR\tactorName\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12\x1e\n" +
	"\vend_time_ms\x18\a \x01(\x03R\tendTimeMs\x12'\n" +
	"\x0ftarget_capacity\x18\b \x01(\x01R\x0etargetCapacity\x12^\n" +
	"\x19target_capacity_direction\x18\t \x01(\x0e2\".ray.serve.TargetCapacityDirectionR\x17targetCapacityDirection\"k\n" +
	"\x0fDeploymentRoute\x12B\n" +
	"\x0fdeployment_info\x18\x01 \x01(\v2\x19.ray.serve.DeploymentInfoR\x0edeploymentInfo\x12\x14\n" +
	"\x05route\x18\x02 \x01(\tR\x05route\"^\n" +
	"\x13DeploymentRouteList\x12G\n" +
	"\x11deployment_routes\x18\x01 \x03(\v2\x1a.ray.serve.DeploymentRouteR\x10deploymentRoutes\"\xc4\x01\n" +
	"\x14DeploymentStatusInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x123\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1b.ray.serve.DeploymentStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12I\n" +
	"\x0estatus_trigger\x18\x04 \x01(\x0e2\".ray.serve.DeploymentStatusTriggerR\rstatusTrigger\"s\n" +
	"\x18DeploymentStatusInfoList\x12W\n" +
	"\x17deployment_status_infos\x18\x01 \x03(\v2\x1f.ray.serve.DeploymentStatusInfoR\x15deploymentStatusInfos\"\x9a\x01\n" +
	"\x15ApplicationStatusInfo\x124\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1c.ray.serve.ApplicationStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\x14deployment_timestamp\x18\x03 \x01(\x01R\x13deploymentTimestamp\"\xbb\x01\n" +
	"\x0eStatusOverview\x12?\n" +
	"\n" +
	"app_status\x18\x01 \x01(\v2 .ray.serve.ApplicationStatusInfoR\tappStatus\x12T\n" +
	"\x13deployment_statuses\x18\x02 \x01(\v2#.ray.serve.DeploymentStatusInfoListR\x12deploymentStatuses\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\x19\n" +
	"\x17ListApplicationsRequest\"G\n" +
	"\x18ListApplicationsResponse\x12+\n" +
	"\x11application_names\x18\x01 \x03(\tR\x10applicationNames\"\x10\n" +
	"\x0eHealthzRequest\"+\n" +
	"\x0fHealthzResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"L\n" +
	"\x12UserDefinedMessage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03foo\x18\x02 \x01(\tR\x03foo\x12\x10\n" +
	"\x03num\x18\x03 \x01(\x03R\x03num\"H\n" +
	"\x13UserDefinedResponse\x12\x1a\n" +
	"\bgreeting\x18\x01 \x01(\tR\bgreeting\x12\x15\n" +
	"\x06num_x2\x18\x02 \x01(\x03R\x05numX2\"\x15\n" +
	"\x13UserDefinedMessage2\"2\n" +
	"\x14UserDefinedResponse2\x12\x1a\n" +
	"\bgreeting\x18\x01 \x01(\tR\bgreeting\"T\n" +
	"\fFruitAmounts\x12\x16\n" +
	"\x06orange\x18\x01 \x01(\x03R\x06orange\x12\x14\n" +
	"\x05apple\x18\x02 \x01(\x03R\x05apple\x12\x16\n" +
	"\x06banana\x18\x03 \x01(\x03R\x06banana\"\"\n" +
	"\n" +
	"FruitCosts\x12\x14\n" +
	"\x05costs\x18\x01 \x01(\x02R\x05costs\"\x1f\n" +
	"\tArrayData\x12\x12\n" +
	"\x04nums\x18\x01 \x03(\x02R\x04nums\" \n" +
	"\n" +
	"StringData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"%\n" +
	"\vModelOutput\x12\x16\n" +
	"\x06output\x18\x01 \x01(\x02R\x06output\"\xb8\x02\n" +
	"\x0eDeploymentArgs\x12'\n" +
	"\x0fdeployment_name\x18\x01 \x01(\tR\x0edeploymentName\x12+\n" +
	"\x11deployment_config\x18\x02 \x01(\fR\x10deploymentConfig\x12%\n" +
	"\x0ereplica_config\x18\x03 \x01(\fR\rreplicaConfig\x12&\n" +
	"\x0fdeployer_job_id\x18\x04 \x01(\tR\rdeployerJobId\x12&\n" +
	"\froute_prefix\x18\x05 \x01(\tH\x00R\vroutePrefix\x88\x01\x01\x12\x18\n" +
	"\aingress\x18\x06 \x01(\bR\aingress\x12 \n" +
	"\tdocs_path\x18\a \x01(\tH\x01R\bdocsPath\x88\x01\x01B\x0f\n" +
	"\r_route_prefixB\f\n" +
	"\n" +
	"_docs_path*\"\n" +
	"\fEncodingType\x12\b\n" +
	"\x04TEXT\x10\x00\x12\b\n" +
	"\x04JSON\x10\x01**\n" +
	"\x12DeploymentLanguage\x12\n" +
	"\n" +
	"\x06PYTHON\x10\x00\x12\b\n" +
	"\x04JAVA\x10\x01*6\n" +
	"\x17TargetCapacityDirection\x12\t\n" +
	"\x05UNSET\x10\x00\x12\x06\n" +
	"\x02UP\x10\x01\x12\b\n" +
	"\x04DOWN\x10\x02*\xdb\x01\n" +
	"\x10DeploymentStatus\x12\x1e\n" +
	"\x1aDEPLOYMENT_STATUS_UPDATING\x10\x00\x12\x1d\n" +
	"\x19DEPLOYMENT_STATUS_HEALTHY\x10\x01\x12\x1f\n" +
	"\x1bDEPLOYMENT_STATUS_UNHEALTHY\x10\x02\x12#\n" +
	"\x1fDEPLOYMENT_STATUS_DEPLOY_FAILED\x10\x03\x12\x1f\n" +
	"\x1bDEPLOYMENT_STATUS_UPSCALING\x10\x04\x12!\n" +
	"\x1dDEPLOYMENT_STATUS_DOWNSCALING\x10\x05*\xfe\x03\n" +
	"\x17DeploymentStatusTrigger\x12)\n" +
	"%DEPLOYMENT_STATUS_TRIGGER_UNSPECIFIED\x10\x00\x123\n" +
	"/DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_STARTED\x10\x01\x125\n" +
	"1DEPLOYMENT_STATUS_TRIGGER_CONFIG_UPDATE_COMPLETED\x10\x02\x12/\n" +
	"+DEPLOYMENT_STATUS_TRIGGER_UPSCALE_COMPLETED\x10\x03\x121\n" +
	"-DEPLOYMENT_STATUS_TRIGGER_DOWNSCALE_COMPLETED\x10\x04\x12)\n" +
	"%DEPLOYMENT_STATUS_TRIGGER_AUTOSCALING\x10\x05\x124\n" +
	"0DEPLOYMENT_STATUS_TRIGGER_REPLICA_STARTUP_FAILED\x10\x06\x121\n" +
	"-DEPLOYMENT_STATUS_TRIGGER_HEALTH_CHECK_FAILED\x10\a\x12,\n" +
	"(DEPLOYMENT_STATUS_TRIGGER_INTERNAL_ERROR\x10\b\x12&\n" +
	"\"DEPLOYMENT_STATUS_TRIGGER_DELETING\x10\t*\xe2\x01\n" +
	"\x11ApplicationStatus\x12 \n" +
	"\x1cAPPLICATION_STATUS_DEPLOYING\x10\x00\x12\x1e\n" +
	"\x1aAPPLICATION_STATUS_RUNNING\x10\x01\x12$\n" +
	" APPLICATION_STATUS_DEPLOY_FAILED\x10\x02\x12\x1f\n" +
	"\x1bAPPLICATION_STATUS_DELETING\x10\x03\x12\"\n" +
	"\x1eAPPLICATION_STATUS_NOT_STARTED\x10\x05\x12 \n" +
	"\x1cAPPLICATION_STATUS_UNHEALTHY\x10\x062\xb3\x01\n" +
	"\x12RayServeAPIService\x12[\n" +
	"\x10ListApplications\x12\".ray.serve.ListApplicationsRequest\x1a#.ray.serve.ListApplicationsResponse\x12@\n" +
	"\aHealthz\x12\x19.ray.serve.HealthzRequest\x1a\x1a.ray.serve.HealthzResponse2\xc3\x02\n" +
	"\x12UserDefinedService\x12I\n" +
	"\b__call__\x12\x1d.ray.serve.UserDefinedMessage\x1a\x1e.ray.serve.UserDefinedResponse\x12H\n" +
	"\aMethod1\x12\x1d.ray.serve.UserDefinedMessage\x1a\x1e.ray.serve.UserDefinedResponse\x12J\n" +
	"\aMethod2\x12\x1e.ray.serve.UserDefinedMessage2\x1a\x1f.ray.serve.UserDefinedResponse2\x12L\n" +
	"\tStreaming\x12\x1d.ray.serve.UserDefinedMessage\x1a\x1e.ray.serve.UserDefinedResponse0\x012L\n" +
	"\fFruitService\x12<\n" +
	"\n" +
	"FruitStand\x12\x17.ray.serve.FruitAmounts\x1a\x15.ray.serve.FruitCosts2\x98\x01\n" +
	"\x18RayServeBenchmarkService\x129\n" +
	"\tgrpc_call\x12\x14.ray.serve.ArrayData\x1a\x16.ray.serve.ModelOutput\x12A\n" +
	"\x10call_with_string\x12\x15.ray.serve.StringData\x1a\x16.ray.serve.ModelOutputB\x8d\x01\n" +
	"\rcom.ray.serveB\n" +
	"ServeProtoP\x01Z+github.com/instill-ai/protogen-go/model/ray\xa2\x02\x03RSX\xaa\x02\tRay.Serve\xca\x02\tRay\\Serve\xe2\x02\x15Ray\\Serve\\GPBMetadata\xea\x02\n" +
	"Ray::Serveb\x06proto3"

var (
	file_model_ray_serve_proto_rawDescOnce sync.Once
	file_model_ray_serve_proto_rawDescData []byte
)

func file_model_ray_serve_proto_rawDescGZIP() []byte {
	file_model_ray_serve_proto_rawDescOnce.Do(func() {
		file_model_ray_serve_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_model_ray_serve_proto_rawDesc), len(file_model_ray_serve_proto_rawDesc)))
	})
	return file_model_ray_serve_proto_rawDescData
}

var file_model_ray_serve_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_model_ray_serve_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_model_ray_serve_proto_goTypes = []any{
	(EncodingType)(0),                // 0: ray.serve.EncodingType
	(DeploymentLanguage)(0),          // 1: ray.serve.DeploymentLanguage
	(TargetCapacityDirection)(0),     // 2: ray.serve.TargetCapacityDirection
	(DeploymentStatus)(0),            // 3: ray.serve.DeploymentStatus
	(DeploymentStatusTrigger)(0),     // 4: ray.serve.DeploymentStatusTrigger
	(ApplicationStatus)(0),           // 5: ray.serve.ApplicationStatus
	(*AutoscalingConfig)(nil),        // 6: ray.serve.AutoscalingConfig
	(*LoggingConfig)(nil),            // 7: ray.serve.LoggingConfig
	(*DeploymentConfig)(nil),         // 8: ray.serve.DeploymentConfig
	(*RequestMetadata)(nil),          // 9: ray.serve.RequestMetadata
	(*RequestWrapper)(nil),           // 10: ray.serve.RequestWrapper
	(*UpdatedObject)(nil),            // 11: ray.serve.UpdatedObject
	(*LongPollRequest)(nil),          // 12: ray.serve.LongPollRequest
	(*LongPollResult)(nil),           // 13: ray.serve.LongPollResult
	(*EndpointInfo)(nil),             // 14: ray.serve.EndpointInfo
	(*EndpointSet)(nil),              // 15: ray.serve.EndpointSet
	(*ActorNameList)(nil),            // 16: ray.serve.ActorNameList
	(*DeploymentTargetInfo)(nil),     // 17: ray.serve.DeploymentTargetInfo
	(*DeploymentVersion)(nil),        // 18: ray.serve.DeploymentVersion
	(*ReplicaConfig)(nil),            // 19: ray.serve.ReplicaConfig
	(*DeploymentInfo)(nil),           // 20: ray.serve.DeploymentInfo
	(*DeploymentRoute)(nil),          // 21: ray.serve.DeploymentRoute
	(*DeploymentRouteList)(nil),      // 22: ray.serve.DeploymentRouteList
	(*DeploymentStatusInfo)(nil),     // 23: ray.serve.DeploymentStatusInfo
	(*DeploymentStatusInfoList)(nil), // 24: ray.serve.DeploymentStatusInfoList
	(*ApplicationStatusInfo)(nil),    // 25: ray.serve.ApplicationStatusInfo
	(*StatusOverview)(nil),           // 26: ray.serve.StatusOverview
	(*ListApplicationsRequest)(nil),  // 27: ray.serve.ListApplicationsRequest
	(*ListApplicationsResponse)(nil), // 28: ray.serve.ListApplicationsResponse
	(*HealthzRequest)(nil),           // 29: ray.serve.HealthzRequest
	(*HealthzResponse)(nil),          // 30: ray.serve.HealthzResponse
	(*UserDefinedMessage)(nil),       // 31: ray.serve.UserDefinedMessage
	(*UserDefinedResponse)(nil),      // 32: ray.serve.UserDefinedResponse
	(*UserDefinedMessage2)(nil),      // 33: ray.serve.UserDefinedMessage2
	(*UserDefinedResponse2)(nil),     // 34: ray.serve.UserDefinedResponse2
	(*FruitAmounts)(nil),             // 35: ray.serve.FruitAmounts
	(*FruitCosts)(nil),               // 36: ray.serve.FruitCosts
	(*ArrayData)(nil),                // 37: ray.serve.ArrayData
	(*StringData)(nil),               // 38: ray.serve.StringData
	(*ModelOutput)(nil),              // 39: ray.serve.ModelOutput
	(*DeploymentArgs)(nil),           // 40: ray.serve.DeploymentArgs
	nil,                              // 41: ray.serve.RequestMetadata.ContextEntry
	nil,                              // 42: ray.serve.LongPollRequest.KeysToSnapshotIdsEntry
	nil,                              // 43: ray.serve.LongPollResult.UpdatedObjectsEntry
	nil,                              // 44: ray.serve.EndpointInfo.ConfigEntry
	nil,                              // 45: ray.serve.EndpointSet.EndpointsEntry
}
var file_model_ray_serve_proto_depIdxs = []int32{
	0,  // 0: ray.serve.LoggingConfig.encoding:type_name -> ray.serve.EncodingType
	1,  // 1: ray.serve.DeploymentConfig.deployment_language:type_name -> ray.serve.DeploymentLanguage
	6,  // 2: ray.serve.DeploymentConfig.autoscaling_config:type_name -> ray.serve.AutoscalingConfig
	7,  // 3: ray.serve.DeploymentConfig.logging_config:type_name -> ray.serve.LoggingConfig
	41, // 4: ray.serve.RequestMetadata.context:type_name -> ray.serve.RequestMetadata.ContextEntry
	42, // 5: ray.serve.LongPollRequest.keys_to_snapshot_ids:type_name -> ray.serve.LongPollRequest.KeysToSnapshotIdsEntry
	43, // 6: ray.serve.LongPollResult.updated_objects:type_name -> ray.serve.LongPollResult.UpdatedObjectsEntry
	44, // 7: ray.serve.EndpointInfo.config:type_name -> ray.serve.EndpointInfo.ConfigEntry
	45, // 8: ray.serve.EndpointSet.endpoints:type_name -> ray.serve.EndpointSet.EndpointsEntry
	8,  // 9: ray.serve.DeploymentVersion.deployment_config:type_name -> ray.serve.DeploymentConfig
	8,  // 10: ray.serve.DeploymentInfo.deployment_config:type_name -> ray.serve.DeploymentConfig
	19, // 11: ray.serve.DeploymentInfo.replica_config:type_name -> ray.serve.ReplicaConfig
	2,  // 12: ray.serve.DeploymentInfo.target_capacity_direction:type_name -> ray.serve.TargetCapacityDirection
	20, // 13: ray.serve.DeploymentRoute.deployment_info:type_name -> ray.serve.DeploymentInfo
	21, // 14: ray.serve.DeploymentRouteList.deployment_routes:type_name -> ray.serve.DeploymentRoute
	3,  // 15: ray.serve.DeploymentStatusInfo.status:type_name -> ray.serve.DeploymentStatus
	4,  // 16: ray.serve.DeploymentStatusInfo.status_trigger:type_name -> ray.serve.DeploymentStatusTrigger
	23, // 17: ray.serve.DeploymentStatusInfoList.deployment_status_infos:type_name -> ray.serve.DeploymentStatusInfo
	5,  // 18: ray.serve.ApplicationStatusInfo.status:type_name -> ray.serve.ApplicationStatus
	25, // 19: ray.serve.StatusOverview.app_status:type_name -> ray.serve.ApplicationStatusInfo
	24, // 20: ray.serve.StatusOverview.deployment_statuses:type_name -> ray.serve.DeploymentStatusInfoList
	11, // 21: ray.serve.LongPollResult.UpdatedObjectsEntry.value:type_name -> ray.serve.UpdatedObject
	14, // 22: ray.serve.EndpointSet.EndpointsEntry.value:type_name -> ray.serve.EndpointInfo
	27, // 23: ray.serve.RayServeAPIService.ListApplications:input_type -> ray.serve.ListApplicationsRequest
	29, // 24: ray.serve.RayServeAPIService.Healthz:input_type -> ray.serve.HealthzRequest
	31, // 25: ray.serve.UserDefinedService.__call__:input_type -> ray.serve.UserDefinedMessage
	31, // 26: ray.serve.UserDefinedService.Method1:input_type -> ray.serve.UserDefinedMessage
	33, // 27: ray.serve.UserDefinedService.Method2:input_type -> ray.serve.UserDefinedMessage2
	31, // 28: ray.serve.UserDefinedService.Streaming:input_type -> ray.serve.UserDefinedMessage
	35, // 29: ray.serve.FruitService.FruitStand:input_type -> ray.serve.FruitAmounts
	37, // 30: ray.serve.RayServeBenchmarkService.grpc_call:input_type -> ray.serve.ArrayData
	38, // 31: ray.serve.RayServeBenchmarkService.call_with_string:input_type -> ray.serve.StringData
	28, // 32: ray.serve.RayServeAPIService.ListApplications:output_type -> ray.serve.ListApplicationsResponse
	30, // 33: ray.serve.RayServeAPIService.Healthz:output_type -> ray.serve.HealthzResponse
	32, // 34: ray.serve.UserDefinedService.__call__:output_type -> ray.serve.UserDefinedResponse
	32, // 35: ray.serve.UserDefinedService.Method1:output_type -> ray.serve.UserDefinedResponse
	34, // 36: ray.serve.UserDefinedService.Method2:output_type -> ray.serve.UserDefinedResponse2
	32, // 37: ray.serve.UserDefinedService.Streaming:output_type -> ray.serve.UserDefinedResponse
	36, // 38: ray.serve.FruitService.FruitStand:output_type -> ray.serve.FruitCosts
	39, // 39: ray.serve.RayServeBenchmarkService.grpc_call:output_type -> ray.serve.ModelOutput
	39, // 40: ray.serve.RayServeBenchmarkService.call_with_string:output_type -> ray.serve.ModelOutput
	32, // [32:41] is the sub-list for method output_type
	23, // [23:32] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_model_ray_serve_proto_init() }
func file_model_ray_serve_proto_init() {
	if File_model_ray_serve_proto != nil {
		return
	}
	file_model_ray_serve_proto_msgTypes[0].OneofWrappers = []any{}
	file_model_ray_serve_proto_msgTypes[34].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_model_ray_serve_proto_rawDesc), len(file_model_ray_serve_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_model_ray_serve_proto_goTypes,
		DependencyIndexes: file_model_ray_serve_proto_depIdxs,
		EnumInfos:         file_model_ray_serve_proto_enumTypes,
		MessageInfos:      file_model_ray_serve_proto_msgTypes,
	}.Build()
	File_model_ray_serve_proto = out.File
	file_model_ray_serve_proto_goTypes = nil
	file_model_ray_serve_proto_depIdxs = nil
}
