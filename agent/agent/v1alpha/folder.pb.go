// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: agent/agent/v1alpha/folder.proto

package agentv1alpha

import (
	v1alpha "github.com/instill-ai/protogen-go/artifact/artifact/v1alpha"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Folder represents a folder resource.
type Folder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the folder.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// The name of the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A description of the folder.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Additional metadata associated with the folder.
	Metadata *structpb.Struct `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The timestamp when the folder was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The timestamp when the folder was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The ID of the catalog that this folder is bound to.
	CatalogId string `protobuf:"bytes,7,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// Permission defines how a folder can be used.
	Permission *Folder_Permission `protobuf:"bytes,8,opt,name=permission,proto3" json:"permission,omitempty"`
	// The information about the catalog.
	CatalogInfo   *CatalogInfo `protobuf:"bytes,9,opt,name=catalog_info,json=catalogInfo,proto3" json:"catalog_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Folder) Reset() {
	*x = Folder{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Folder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Folder) ProtoMessage() {}

func (x *Folder) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Folder.ProtoReflect.Descriptor instead.
func (*Folder) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{0}
}

func (x *Folder) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Folder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Folder) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Folder) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Folder) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Folder) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Folder) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *Folder) GetPermission() *Folder_Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *Folder) GetCatalogInfo() *CatalogInfo {
	if x != nil {
		return x.CatalogInfo
	}
	return nil
}

// CatalogInfo contains the information about the catalog.
type CatalogInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of files in the catalog.
	FileCount int32 `protobuf:"varint,1,opt,name=file_count,json=fileCount,proto3" json:"file_count,omitempty"`
	// The total size of all files in the catalog in bytes.
	TotalSizeBytes int64 `protobuf:"varint,2,opt,name=total_size_bytes,json=totalSizeBytes,proto3" json:"total_size_bytes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CatalogInfo) Reset() {
	*x = CatalogInfo{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogInfo) ProtoMessage() {}

func (x *CatalogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogInfo.ProtoReflect.Descriptor instead.
func (*CatalogInfo) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{1}
}

func (x *CatalogInfo) GetFileCount() int32 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *CatalogInfo) GetTotalSizeBytes() int64 {
	if x != nil {
		return x.TotalSizeBytes
	}
	return 0
}

// ListFoldersRequest represents a request to list folders.
type ListFoldersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the folders.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The page token for pagination.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of folders to return.
	PageSize      int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFoldersRequest) Reset() {
	*x = ListFoldersRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFoldersRequest) ProtoMessage() {}

func (x *ListFoldersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFoldersRequest.ProtoReflect.Descriptor instead.
func (*ListFoldersRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{2}
}

func (x *ListFoldersRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListFoldersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFoldersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ListFoldersResponse contains the list of folders.
type ListFoldersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of folders.
	Folders []*Folder `protobuf:"bytes,1,rep,name=folders,proto3" json:"folders,omitempty"`
	// The token for the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of tables.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFoldersResponse) Reset() {
	*x = ListFoldersResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFoldersResponse) ProtoMessage() {}

func (x *ListFoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFoldersResponse.ProtoReflect.Descriptor instead.
func (*ListFoldersResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{3}
}

func (x *ListFoldersResponse) GetFolders() []*Folder {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *ListFoldersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListFoldersResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// CreateFolderRequest represents a request to create a folder.
type CreateFolderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace where the folder will be created.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The folder resource to create.
	Folder        *Folder `protobuf:"bytes,2,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderRequest) Reset() {
	*x = CreateFolderRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest) ProtoMessage() {}

func (x *CreateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFolderRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateFolderRequest) GetFolder() *Folder {
	if x != nil {
		return x.Folder
	}
	return nil
}

// CreateFolderResponse contains the created folder.
type CreateFolderResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created folder resource.
	Folder        *Folder `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderResponse) Reset() {
	*x = CreateFolderResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderResponse) ProtoMessage() {}

func (x *CreateFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateFolderResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFolderResponse) GetFolder() *Folder {
	if x != nil {
		return x.Folder
	}
	return nil
}

// GetFolderRequest represents a request to fetch a folder.
type GetFolderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the folder.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the folder to fetch.
	FolderUid     string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFolderRequest) Reset() {
	*x = GetFolderRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFolderRequest) ProtoMessage() {}

func (x *GetFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFolderRequest.ProtoReflect.Descriptor instead.
func (*GetFolderRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{6}
}

func (x *GetFolderRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetFolderRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

// GetFolderResponse contains the requested folder.
type GetFolderResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The folder resource.
	Folder        *Folder `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFolderResponse) Reset() {
	*x = GetFolderResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFolderResponse) ProtoMessage() {}

func (x *GetFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFolderResponse.ProtoReflect.Descriptor instead.
func (*GetFolderResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{7}
}

func (x *GetFolderResponse) GetFolder() *Folder {
	if x != nil {
		return x.Folder
	}
	return nil
}

// UpdateFolderRequest represents a request to update a folder.
type UpdateFolderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the folder.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the folder to update.
	FolderUid string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	// The folder fields that will replace the existing ones.
	Folder *Folder `protobuf:"bytes,3,opt,name=folder,proto3" json:"folder,omitempty"`
	// The update mask specifies the subset of fields that should be modified.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFolderRequest) Reset() {
	*x = UpdateFolderRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFolderRequest) ProtoMessage() {}

func (x *UpdateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFolderRequest.ProtoReflect.Descriptor instead.
func (*UpdateFolderRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFolderRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateFolderRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *UpdateFolderRequest) GetFolder() *Folder {
	if x != nil {
		return x.Folder
	}
	return nil
}

func (x *UpdateFolderRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateFolderResponse contains the updated folder.
type UpdateFolderResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated folder resource.
	Folder        *Folder `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFolderResponse) Reset() {
	*x = UpdateFolderResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFolderResponse) ProtoMessage() {}

func (x *UpdateFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFolderResponse.ProtoReflect.Descriptor instead.
func (*UpdateFolderResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFolderResponse) GetFolder() *Folder {
	if x != nil {
		return x.Folder
	}
	return nil
}

// DeleteFolderRequest represents a request to delete a folder.
type DeleteFolderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the folder.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the folder to delete.
	FolderUid     string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFolderRequest) Reset() {
	*x = DeleteFolderRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderRequest) ProtoMessage() {}

func (x *DeleteFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderRequest.ProtoReflect.Descriptor instead.
func (*DeleteFolderRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteFolderRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteFolderRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

// DeleteFolderResponse is an empty response for deleting a folder.
type DeleteFolderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFolderResponse) Reset() {
	*x = DeleteFolderResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderResponse) ProtoMessage() {}

func (x *DeleteFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderResponse.ProtoReflect.Descriptor instead.
func (*DeleteFolderResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{11}
}

// create folder file request
type CreateFolderFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// owner/namespace uid
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// folder uid
	FolderUid string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	// file
	File          *v1alpha.File `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderFileRequest) Reset() {
	*x = CreateFolderFileRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderFileRequest) ProtoMessage() {}

func (x *CreateFolderFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderFileRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{12}
}

func (x *CreateFolderFileRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateFolderFileRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *CreateFolderFileRequest) GetFile() *v1alpha.File {
	if x != nil {
		return x.File
	}
	return nil
}

// create folder file response
type CreateFolderFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// file
	File          *v1alpha.File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderFileResponse) Reset() {
	*x = CreateFolderFileResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderFileResponse) ProtoMessage() {}

func (x *CreateFolderFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFolderFileResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{13}
}

func (x *CreateFolderFileResponse) GetFile() *v1alpha.File {
	if x != nil {
		return x.File
	}
	return nil
}

// delete folder file request
type DeleteFolderFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace id.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The folder uid.
	FolderUid string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	// The file uid.
	FileUid       string `protobuf:"bytes,3,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFolderFileRequest) Reset() {
	*x = DeleteFolderFileRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFolderFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderFileRequest) ProtoMessage() {}

func (x *DeleteFolderFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFolderFileRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteFolderFileRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteFolderFileRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *DeleteFolderFileRequest) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

// delete folder file response
type DeleteFolderFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	FileUid       string `protobuf:"bytes,1,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFolderFileResponse) Reset() {
	*x = DeleteFolderFileResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFolderFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderFileResponse) ProtoMessage() {}

func (x *DeleteFolderFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFolderFileResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteFolderFileResponse) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

// list folder files request
type ListFolderFilesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The owner/namespace uid id.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The folder uid.
	FolderUid string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	// The page size (default:10; max 100).
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next page token(default from first file's token).
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The filter.
	Filter        *v1alpha.ListCatalogFilesFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFolderFilesRequest) Reset() {
	*x = ListFolderFilesRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFolderFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFolderFilesRequest) ProtoMessage() {}

func (x *ListFolderFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFolderFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFolderFilesRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{16}
}

func (x *ListFolderFilesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListFolderFilesRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *ListFolderFilesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFolderFilesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFolderFilesRequest) GetFilter() *v1alpha.ListCatalogFilesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// list folder files response
type ListFolderFilesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of files.
	Files []*v1alpha.File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// The total number of files.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// next page token
	NextPageToken string `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The filter.
	Filter        *v1alpha.ListCatalogFilesFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFolderFilesResponse) Reset() {
	*x = ListFolderFilesResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFolderFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFolderFilesResponse) ProtoMessage() {}

func (x *ListFolderFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFolderFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFolderFilesResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{17}
}

func (x *ListFolderFilesResponse) GetFiles() []*v1alpha.File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListFolderFilesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListFolderFilesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFolderFilesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListFolderFilesResponse) GetFilter() *v1alpha.ListCatalogFilesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// GetFolderFileRequest represents a request to get a folder file.
type GetFolderFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace id.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The folder uid.
	FolderUid string `protobuf:"bytes,2,opt,name=folder_uid,json=folderUid,proto3" json:"folder_uid,omitempty"`
	// The file uid.
	FileUid       string `protobuf:"bytes,3,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFolderFileRequest) Reset() {
	*x = GetFolderFileRequest{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFolderFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFolderFileRequest) ProtoMessage() {}

func (x *GetFolderFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFolderFileRequest.ProtoReflect.Descriptor instead.
func (*GetFolderFileRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{18}
}

func (x *GetFolderFileRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetFolderFileRequest) GetFolderUid() string {
	if x != nil {
		return x.FolderUid
	}
	return ""
}

func (x *GetFolderFileRequest) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

// GetFolderFileResponse represents a response for getting a folder file.
type GetFolderFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file.
	File          *v1alpha.File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFolderFileResponse) Reset() {
	*x = GetFolderFileResponse{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFolderFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFolderFileResponse) ProtoMessage() {}

func (x *GetFolderFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFolderFileResponse.ProtoReflect.Descriptor instead.
func (*GetFolderFileResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{19}
}

func (x *GetFolderFileResponse) GetFile() *v1alpha.File {
	if x != nil {
		return x.File
	}
	return nil
}

// Permission defines how a folder can be used.
type Folder_Permission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines whether the folder can be modified.
	CanEdit       bool `protobuf:"varint,1,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Folder_Permission) Reset() {
	*x = Folder_Permission{}
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Folder_Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Folder_Permission) ProtoMessage() {}

func (x *Folder_Permission) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_folder_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Folder_Permission.ProtoReflect.Descriptor instead.
func (*Folder_Permission) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_folder_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Folder_Permission) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

var File_agent_agent_v1alpha_folder_proto protoreflect.FileDescriptor

const file_agent_agent_v1alpha_folder_proto_rawDesc = "" +
	"\n" +
	" agent/agent/v1alpha/folder.proto\x12\x13agent.agent.v1alpha\x1a(artifact/artifact/v1alpha/artifact.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x81\x04\n" +
	"\x06Folder\x12\x15\n" +
	"\x03uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x03uid\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tB\x03\xe0A\x01R\vdescription\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x17.google.protobuf.StructB\x03\xe0A\x01R\bmetadata\x12@\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12@\n" +
	"\vupdate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime\x12\"\n" +
	"\n" +
	"catalog_id\x18\a \x01(\tB\x03\xe0A\x03R\tcatalogId\x12K\n" +
	"\n" +
	"permission\x18\b \x01(\v2&.agent.agent.v1alpha.Folder.PermissionB\x03\xe0A\x03R\n" +
	"permission\x12H\n" +
	"\fcatalog_info\x18\t \x01(\v2 .agent.agent.v1alpha.CatalogInfoB\x03\xe0A\x03R\vcatalogInfo\x1a'\n" +
	"\n" +
	"Permission\x12\x19\n" +
	"\bcan_edit\x18\x01 \x01(\bR\acanEdit\"`\n" +
	"\vCatalogInfo\x12\"\n" +
	"\n" +
	"file_count\x18\x01 \x01(\x05B\x03\xe0A\x03R\tfileCount\x12-\n" +
	"\x10total_size_bytes\x18\x02 \x01(\x03B\x03\xe0A\x03R\x0etotalSizeBytes\"\x82\x01\n" +
	"\x12ListFoldersRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\x03\xe0A\x01R\tpageToken\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x05B\x03\xe0A\x01R\bpageSize\"\xa2\x01\n" +
	"\x13ListFoldersResponse\x12:\n" +
	"\afolders\x18\x01 \x03(\v2\x1b.agent.agent.v1alpha.FolderB\x03\xe0A\x03R\afolders\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\x03\xe0A\x03R\rnextPageToken\x12\"\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05B\x03\xe0A\x03R\ttotalSize\"w\n" +
	"\x13CreateFolderRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x128\n" +
	"\x06folder\x18\x02 \x01(\v2\x1b.agent.agent.v1alpha.FolderB\x03\xe0A\x02R\x06folder\"P\n" +
	"\x14CreateFolderResponse\x128\n" +
	"\x06folder\x18\x01 \x01(\v2\x1b.agent.agent.v1alpha.FolderB\x03\xe0A\x03R\x06folder\"^\n" +
	"\x10GetFolderRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\tfolderUid\"M\n" +
	"\x11GetFolderResponse\x128\n" +
	"\x06folder\x18\x01 \x01(\v2\x1b.agent.agent.v1alpha.FolderB\x03\xe0A\x03R\x06folder\"\xd8\x01\n" +
	"\x13UpdateFolderRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\tfolderUid\x123\n" +
	"\x06folder\x18\x03 \x01(\v2\x1b.agent.agent.v1alpha.FolderR\x06folder\x12@\n" +
	"\vupdate_mask\x18\x04 \x01(\v2\x1a.google.protobuf.FieldMaskB\x03\xe0A\x02R\n" +
	"updateMask\"P\n" +
	"\x14UpdateFolderResponse\x128\n" +
	"\x06folder\x18\x01 \x01(\v2\x1b.agent.agent.v1alpha.FolderB\x03\xe0A\x03R\x06folder\"a\n" +
	"\x13DeleteFolderRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\tfolderUid\"\x16\n" +
	"\x14DeleteFolderResponse\"\x9a\x01\n" +
	"\x17CreateFolderFileRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\tfolderUid\x123\n" +
	"\x04file\x18\x03 \x01(\v2\x1f.artifact.artifact.v1alpha.FileR\x04file\"O\n" +
	"\x18CreateFolderFileResponse\x123\n" +
	"\x04file\x18\x01 \x01(\v2\x1f.artifact.artifact.v1alpha.FileR\x04file\"\x85\x01\n" +
	"\x17DeleteFolderFileRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\tfolderUid\x12\x1e\n" +
	"\bfile_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\afileUid\"5\n" +
	"\x18DeleteFolderFileResponse\x12\x19\n" +
	"\bfile_uid\x18\x01 \x01(\tR\afileUid\"\xf0\x01\n" +
	"\x16ListFolderFilesRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tR\tfolderUid\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\x03\xe0A\x01R\tpageToken\x12N\n" +
	"\x06filter\x18\x05 \x01(\v21.artifact.artifact.v1alpha.ListCatalogFilesFilterB\x03\xe0A\x01R\x06filter\"\xff\x01\n" +
	"\x17ListFolderFilesResponse\x125\n" +
	"\x05files\x18\x01 \x03(\v2\x1f.artifact.artifact.v1alpha.FileR\x05files\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x05R\ttotalSize\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x04 \x01(\tR\rnextPageToken\x12I\n" +
	"\x06filter\x18\x05 \x01(\v21.artifact.artifact.v1alpha.ListCatalogFilesFilterR\x06filter\"\x82\x01\n" +
	"\x14GetFolderFileRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"folder_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\tfolderUid\x12\x1e\n" +
	"\bfile_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\afileUid\"L\n" +
	"\x15GetFolderFileResponse\x123\n" +
	"\x04file\x18\x01 \x01(\v2\x1f.artifact.artifact.v1alpha.FileR\x04fileB\xd8\x01\n" +
	"\x17com.agent.agent.v1alphaB\vFolderProtoP\x01ZBgithub.com/instill-ai/protogen-go/agent/agent/v1alpha;agentv1alpha\xa2\x02\x03AAX\xaa\x02\x13Agent.Agent.V1alpha\xca\x02\x13Agent\\Agent\\V1alpha\xe2\x02\x1fAgent\\Agent\\V1alpha\\GPBMetadata\xea\x02\x15Agent::Agent::V1alphab\x06proto3"

var (
	file_agent_agent_v1alpha_folder_proto_rawDescOnce sync.Once
	file_agent_agent_v1alpha_folder_proto_rawDescData []byte
)

func file_agent_agent_v1alpha_folder_proto_rawDescGZIP() []byte {
	file_agent_agent_v1alpha_folder_proto_rawDescOnce.Do(func() {
		file_agent_agent_v1alpha_folder_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_agent_v1alpha_folder_proto_rawDesc), len(file_agent_agent_v1alpha_folder_proto_rawDesc)))
	})
	return file_agent_agent_v1alpha_folder_proto_rawDescData
}

var file_agent_agent_v1alpha_folder_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_agent_agent_v1alpha_folder_proto_goTypes = []any{
	(*Folder)(nil),                         // 0: agent.agent.v1alpha.Folder
	(*CatalogInfo)(nil),                    // 1: agent.agent.v1alpha.CatalogInfo
	(*ListFoldersRequest)(nil),             // 2: agent.agent.v1alpha.ListFoldersRequest
	(*ListFoldersResponse)(nil),            // 3: agent.agent.v1alpha.ListFoldersResponse
	(*CreateFolderRequest)(nil),            // 4: agent.agent.v1alpha.CreateFolderRequest
	(*CreateFolderResponse)(nil),           // 5: agent.agent.v1alpha.CreateFolderResponse
	(*GetFolderRequest)(nil),               // 6: agent.agent.v1alpha.GetFolderRequest
	(*GetFolderResponse)(nil),              // 7: agent.agent.v1alpha.GetFolderResponse
	(*UpdateFolderRequest)(nil),            // 8: agent.agent.v1alpha.UpdateFolderRequest
	(*UpdateFolderResponse)(nil),           // 9: agent.agent.v1alpha.UpdateFolderResponse
	(*DeleteFolderRequest)(nil),            // 10: agent.agent.v1alpha.DeleteFolderRequest
	(*DeleteFolderResponse)(nil),           // 11: agent.agent.v1alpha.DeleteFolderResponse
	(*CreateFolderFileRequest)(nil),        // 12: agent.agent.v1alpha.CreateFolderFileRequest
	(*CreateFolderFileResponse)(nil),       // 13: agent.agent.v1alpha.CreateFolderFileResponse
	(*DeleteFolderFileRequest)(nil),        // 14: agent.agent.v1alpha.DeleteFolderFileRequest
	(*DeleteFolderFileResponse)(nil),       // 15: agent.agent.v1alpha.DeleteFolderFileResponse
	(*ListFolderFilesRequest)(nil),         // 16: agent.agent.v1alpha.ListFolderFilesRequest
	(*ListFolderFilesResponse)(nil),        // 17: agent.agent.v1alpha.ListFolderFilesResponse
	(*GetFolderFileRequest)(nil),           // 18: agent.agent.v1alpha.GetFolderFileRequest
	(*GetFolderFileResponse)(nil),          // 19: agent.agent.v1alpha.GetFolderFileResponse
	(*Folder_Permission)(nil),              // 20: agent.agent.v1alpha.Folder.Permission
	(*structpb.Struct)(nil),                // 21: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),          // 22: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),          // 23: google.protobuf.FieldMask
	(*v1alpha.File)(nil),                   // 24: artifact.artifact.v1alpha.File
	(*v1alpha.ListCatalogFilesFilter)(nil), // 25: artifact.artifact.v1alpha.ListCatalogFilesFilter
}
var file_agent_agent_v1alpha_folder_proto_depIdxs = []int32{
	21, // 0: agent.agent.v1alpha.Folder.metadata:type_name -> google.protobuf.Struct
	22, // 1: agent.agent.v1alpha.Folder.create_time:type_name -> google.protobuf.Timestamp
	22, // 2: agent.agent.v1alpha.Folder.update_time:type_name -> google.protobuf.Timestamp
	20, // 3: agent.agent.v1alpha.Folder.permission:type_name -> agent.agent.v1alpha.Folder.Permission
	1,  // 4: agent.agent.v1alpha.Folder.catalog_info:type_name -> agent.agent.v1alpha.CatalogInfo
	0,  // 5: agent.agent.v1alpha.ListFoldersResponse.folders:type_name -> agent.agent.v1alpha.Folder
	0,  // 6: agent.agent.v1alpha.CreateFolderRequest.folder:type_name -> agent.agent.v1alpha.Folder
	0,  // 7: agent.agent.v1alpha.CreateFolderResponse.folder:type_name -> agent.agent.v1alpha.Folder
	0,  // 8: agent.agent.v1alpha.GetFolderResponse.folder:type_name -> agent.agent.v1alpha.Folder
	0,  // 9: agent.agent.v1alpha.UpdateFolderRequest.folder:type_name -> agent.agent.v1alpha.Folder
	23, // 10: agent.agent.v1alpha.UpdateFolderRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 11: agent.agent.v1alpha.UpdateFolderResponse.folder:type_name -> agent.agent.v1alpha.Folder
	24, // 12: agent.agent.v1alpha.CreateFolderFileRequest.file:type_name -> artifact.artifact.v1alpha.File
	24, // 13: agent.agent.v1alpha.CreateFolderFileResponse.file:type_name -> artifact.artifact.v1alpha.File
	25, // 14: agent.agent.v1alpha.ListFolderFilesRequest.filter:type_name -> artifact.artifact.v1alpha.ListCatalogFilesFilter
	24, // 15: agent.agent.v1alpha.ListFolderFilesResponse.files:type_name -> artifact.artifact.v1alpha.File
	25, // 16: agent.agent.v1alpha.ListFolderFilesResponse.filter:type_name -> artifact.artifact.v1alpha.ListCatalogFilesFilter
	24, // 17: agent.agent.v1alpha.GetFolderFileResponse.file:type_name -> artifact.artifact.v1alpha.File
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_agent_agent_v1alpha_folder_proto_init() }
func file_agent_agent_v1alpha_folder_proto_init() {
	if File_agent_agent_v1alpha_folder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_agent_v1alpha_folder_proto_rawDesc), len(file_agent_agent_v1alpha_folder_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agent_agent_v1alpha_folder_proto_goTypes,
		DependencyIndexes: file_agent_agent_v1alpha_folder_proto_depIdxs,
		MessageInfos:      file_agent_agent_v1alpha_folder_proto_msgTypes,
	}.Build()
	File_agent_agent_v1alpha_folder_proto = out.File
	file_agent_agent_v1alpha_folder_proto_goTypes = nil
	file_agent_agent_v1alpha_folder_proto_depIdxs = nil
}
