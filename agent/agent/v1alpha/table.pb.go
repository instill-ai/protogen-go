// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: agent/agent/v1alpha/table.proto

package agentv1alpha

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the column.
type Type int32

const (
	// The type is not specified.
	Type_TYPE_UNSPECIFIED Type = 0
	// The type is a string.
	Type_TYPE_STRING Type = 1
	// The type is a number.
	Type_TYPE_NUMBER Type = 2
	// The type is a boolean.
	Type_TYPE_BOOLEAN Type = 3
	// The type is a file resource.
	Type_TYPE_FILE Type = 4
	// The type is a document resource.
	Type_TYPE_DOCUMENT Type = 5
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_STRING",
		2: "TYPE_NUMBER",
		3: "TYPE_BOOLEAN",
		4: "TYPE_FILE",
		5: "TYPE_DOCUMENT",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_STRING":      1,
		"TYPE_NUMBER":      2,
		"TYPE_BOOLEAN":     3,
		"TYPE_FILE":        4,
		"TYPE_DOCUMENT":    5,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{0}
}

// CellStatus represents the processing state of a cell.
type CellStatus int32

const (
	// The cell status is not specified or unknown.
	CellStatus_CELL_STATUS_UNSPECIFIED CellStatus = 0
	// The cell is in a stable, ready state with no active processing.
	CellStatus_CELL_STATUS_IDLE CellStatus = 1
	// The cell's file data is currently being uploaded to the server.
	// This status only applies to cells with file type values.
	CellStatus_CELL_STATUS_DATA_UPLOADING CellStatus = 2
	// The cell's data is queued for processing but has not started yet.
	CellStatus_CELL_STATUS_DATA_PENDING CellStatus = 3
	// The cell's data is actively being processed.
	CellStatus_CELL_STATUS_DATA_PROCESSING CellStatus = 4
	// The cell's data processing encountered an error and failed to complete.
	CellStatus_CELL_STATUS_DATA_FAILED CellStatus = 5
	// The cell's transparency information is queued for generation but has not started yet.
	CellStatus_CELL_STATUS_TRANSPARENCY_PENDING CellStatus = 6
	// The cell's transparency information is actively being generated.
	CellStatus_CELL_STATUS_TRANSPARENCY_PROCESSING CellStatus = 7
	// The cell's transparency generation encountered an error and failed to complete.
	CellStatus_CELL_STATUS_TRANSPARENCY_FAILED CellStatus = 8
)

// Enum value maps for CellStatus.
var (
	CellStatus_name = map[int32]string{
		0: "CELL_STATUS_UNSPECIFIED",
		1: "CELL_STATUS_IDLE",
		2: "CELL_STATUS_DATA_UPLOADING",
		3: "CELL_STATUS_DATA_PENDING",
		4: "CELL_STATUS_DATA_PROCESSING",
		5: "CELL_STATUS_DATA_FAILED",
		6: "CELL_STATUS_TRANSPARENCY_PENDING",
		7: "CELL_STATUS_TRANSPARENCY_PROCESSING",
		8: "CELL_STATUS_TRANSPARENCY_FAILED",
	}
	CellStatus_value = map[string]int32{
		"CELL_STATUS_UNSPECIFIED":             0,
		"CELL_STATUS_IDLE":                    1,
		"CELL_STATUS_DATA_UPLOADING":          2,
		"CELL_STATUS_DATA_PENDING":            3,
		"CELL_STATUS_DATA_PROCESSING":         4,
		"CELL_STATUS_DATA_FAILED":             5,
		"CELL_STATUS_TRANSPARENCY_PENDING":    6,
		"CELL_STATUS_TRANSPARENCY_PROCESSING": 7,
		"CELL_STATUS_TRANSPARENCY_FAILED":     8,
	}
)

func (x CellStatus) Enum() *CellStatus {
	p := new(CellStatus)
	*p = x
	return p
}

func (x CellStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CellStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[1].Descriptor()
}

func (CellStatus) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[1]
}

func (x CellStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CellStatus.Descriptor instead.
func (CellStatus) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{1}
}

// The lock state of a cell.
type LockState int32

const (
	// The lock state is not specified.
	LockState_LOCK_STATE_UNSPECIFIED LockState = 0
	// The cell is locked.
	LockState_LOCK_STATE_LOCKED LockState = 1
	// The cell is unlocked.
	LockState_LOCK_STATE_UNLOCKED LockState = 2
)

// Enum value maps for LockState.
var (
	LockState_name = map[int32]string{
		0: "LOCK_STATE_UNSPECIFIED",
		1: "LOCK_STATE_LOCKED",
		2: "LOCK_STATE_UNLOCKED",
	}
	LockState_value = map[string]int32{
		"LOCK_STATE_UNSPECIFIED": 0,
		"LOCK_STATE_LOCKED":      1,
		"LOCK_STATE_UNLOCKED":    2,
	}
)

func (x LockState) Enum() *LockState {
	p := new(LockState)
	*p = x
	return p
}

func (x LockState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockState) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[2].Descriptor()
}

func (LockState) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[2]
}

func (x LockState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockState.Descriptor instead.
func (LockState) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{2}
}

// ExportFormat represents the format to export the data in.
type ExportFormat int32

const (
	// The format is not specified.
	ExportFormat_EXPORT_FORMAT_UNSPECIFIED ExportFormat = 0
	// The format is CSV.
	ExportFormat_EXPORT_FORMAT_CSV ExportFormat = 1
	// The format is Parquet.
	ExportFormat_EXPORT_FORMAT_PARQUET ExportFormat = 2
)

// Enum value maps for ExportFormat.
var (
	ExportFormat_name = map[int32]string{
		0: "EXPORT_FORMAT_UNSPECIFIED",
		1: "EXPORT_FORMAT_CSV",
		2: "EXPORT_FORMAT_PARQUET",
	}
	ExportFormat_value = map[string]int32{
		"EXPORT_FORMAT_UNSPECIFIED": 0,
		"EXPORT_FORMAT_CSV":         1,
		"EXPORT_FORMAT_PARQUET":     2,
	}
)

func (x ExportFormat) Enum() *ExportFormat {
	p := new(ExportFormat)
	*p = x
	return p
}

func (x ExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[3].Descriptor()
}

func (ExportFormat) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[3]
}

func (x ExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportFormat.Descriptor instead.
func (ExportFormat) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{3}
}

// Format specifies the visual representation of numbers in the column.
type NumberFormat_Format int32

const (
	// Default number format with no specific formatting applied.
	NumberFormat_FORMAT_UNSPECIFIED NumberFormat_Format = 0
	// Plain number format without any separators or special formatting.
	NumberFormat_FORMAT_PLAIN NumberFormat_Format = 1
	// Number format with commas as thousand separators (e.g., 1,234,567).
	NumberFormat_FORMAT_COMMAS NumberFormat_Format = 2
	// Currency format that displays values with a currency symbol.
	NumberFormat_FORMAT_CURRENCY NumberFormat_Format = 3
	// Percentage format that displays values with a percent symbol.
	NumberFormat_FORMAT_PERCENTAGE NumberFormat_Format = 4
)

// Enum value maps for NumberFormat_Format.
var (
	NumberFormat_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_PLAIN",
		2: "FORMAT_COMMAS",
		3: "FORMAT_CURRENCY",
		4: "FORMAT_PERCENTAGE",
	}
	NumberFormat_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"FORMAT_PLAIN":       1,
		"FORMAT_COMMAS":      2,
		"FORMAT_CURRENCY":    3,
		"FORMAT_PERCENTAGE":  4,
	}
)

func (x NumberFormat_Format) Enum() *NumberFormat_Format {
	p := new(NumberFormat_Format)
	*p = x
	return p
}

func (x NumberFormat_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumberFormat_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[4].Descriptor()
}

func (NumberFormat_Format) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[4]
}

func (x NumberFormat_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumberFormat_Format.Descriptor instead.
func (NumberFormat_Format) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{13, 0}
}

// The sort of the column.
type ColumnDefinition_Sort int32

const (
	// The sort is not specified.
	ColumnDefinition_SORT_UNSPECIFIED ColumnDefinition_Sort = 0
	// The sort is ascending.
	ColumnDefinition_SORT_ASCENDING ColumnDefinition_Sort = 1
	// The sort is descending.
	ColumnDefinition_SORT_DESCENDING ColumnDefinition_Sort = 2
)

// Enum value maps for ColumnDefinition_Sort.
var (
	ColumnDefinition_Sort_name = map[int32]string{
		0: "SORT_UNSPECIFIED",
		1: "SORT_ASCENDING",
		2: "SORT_DESCENDING",
	}
	ColumnDefinition_Sort_value = map[string]int32{
		"SORT_UNSPECIFIED": 0,
		"SORT_ASCENDING":   1,
		"SORT_DESCENDING":  2,
	}
)

func (x ColumnDefinition_Sort) Enum() *ColumnDefinition_Sort {
	p := new(ColumnDefinition_Sort)
	*p = x
	return p
}

func (x ColumnDefinition_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnDefinition_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[5].Descriptor()
}

func (ColumnDefinition_Sort) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[5]
}

func (x ColumnDefinition_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnDefinition_Sort.Descriptor instead.
func (ColumnDefinition_Sort) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14, 0}
}

// The type of the selection.
type ColumnDefinition_Selection_SelectionType int32

const (
	// The selection is not specified.
	ColumnDefinition_Selection_SELECTION_TYPE_UNSPECIFIED ColumnDefinition_Selection_SelectionType = 0
	// No selection.
	ColumnDefinition_Selection_SELECTION_TYPE_NONE ColumnDefinition_Selection_SelectionType = 1
	// The selection is a single value.
	ColumnDefinition_Selection_SELECTION_TYPE_SINGLE ColumnDefinition_Selection_SelectionType = 2
)

// Enum value maps for ColumnDefinition_Selection_SelectionType.
var (
	ColumnDefinition_Selection_SelectionType_name = map[int32]string{
		0: "SELECTION_TYPE_UNSPECIFIED",
		1: "SELECTION_TYPE_NONE",
		2: "SELECTION_TYPE_SINGLE",
	}
	ColumnDefinition_Selection_SelectionType_value = map[string]int32{
		"SELECTION_TYPE_UNSPECIFIED": 0,
		"SELECTION_TYPE_NONE":        1,
		"SELECTION_TYPE_SINGLE":      2,
	}
)

func (x ColumnDefinition_Selection_SelectionType) Enum() *ColumnDefinition_Selection_SelectionType {
	p := new(ColumnDefinition_Selection_SelectionType)
	*p = x
	return p
}

func (x ColumnDefinition_Selection_SelectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnDefinition_Selection_SelectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[6].Descriptor()
}

func (ColumnDefinition_Selection_SelectionType) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[6]
}

func (x ColumnDefinition_Selection_SelectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnDefinition_Selection_SelectionType.Descriptor instead.
func (ColumnDefinition_Selection_SelectionType) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14, 1, 0}
}

// The mode to generate mock data.
type GenerateMockTableRequest_Mode int32

const (
	// The mode is not specified.
	GenerateMockTableRequest_MODE_UNSPECIFIED GenerateMockTableRequest_Mode = 0
	// The mode is to generate mock data for a file-type table.
	GenerateMockTableRequest_MODE_FILE GenerateMockTableRequest_Mode = 1
	// The mode is to generate mock data for a sheet-type table.
	GenerateMockTableRequest_MODE_SHEET GenerateMockTableRequest_Mode = 2
)

// Enum value maps for GenerateMockTableRequest_Mode.
var (
	GenerateMockTableRequest_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_FILE",
		2: "MODE_SHEET",
	}
	GenerateMockTableRequest_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"MODE_FILE":        1,
		"MODE_SHEET":       2,
	}
)

func (x GenerateMockTableRequest_Mode) Enum() *GenerateMockTableRequest_Mode {
	p := new(GenerateMockTableRequest_Mode)
	*p = x
	return p
}

func (x GenerateMockTableRequest_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateMockTableRequest_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_agent_v1alpha_table_proto_enumTypes[7].Descriptor()
}

func (GenerateMockTableRequest_Mode) Type() protoreflect.EnumType {
	return &file_agent_agent_v1alpha_table_proto_enumTypes[7]
}

func (x GenerateMockTableRequest_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateMockTableRequest_Mode.Descriptor instead.
func (GenerateMockTableRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{72, 0}
}

// Table represents a table resource.
type Table struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the table.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// The title of the table.
	// If the table is in draft mode, the title is optional.
	// If the table is not in draft mode, the title is required.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// A description of the table.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Additional metadata associated with the table.
	Metadata *structpb.Struct `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The timestamp when the table was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The timestamp when the table was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The configuration for the agent.
	AgentConfig *Table_AgentConfig `protobuf:"bytes,8,opt,name=agent_config,json=agentConfig,proto3" json:"agent_config,omitempty"`
	// Whether to enable draft mode for the table.
	DraftMode *bool `protobuf:"varint,9,opt,name=draft_mode,json=draftMode,proto3,oneof" json:"draft_mode,omitempty"`
	// Permission defines how a table can be used.
	Permission *Table_Permission `protobuf:"bytes,10,opt,name=permission,proto3" json:"permission,omitempty"`
	// The ID of the catalog that this table is bound to.
	CatalogId     string `protobuf:"bytes,11,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Table) Reset() {
	*x = Table{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Table) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Table) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Table) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Table) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Table) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Table) GetAgentConfig() *Table_AgentConfig {
	if x != nil {
		return x.AgentConfig
	}
	return nil
}

func (x *Table) GetDraftMode() bool {
	if x != nil && x.DraftMode != nil {
		return *x.DraftMode
	}
	return false
}

func (x *Table) GetPermission() *Table_Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *Table) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

// CreateTableFromTemplateRequest represents a request to create a table from a table template.
type CreateTableFromTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The table resource to create.
	Table *Table `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// The ID of the table namespace to create the table from.
	TemplateNamespaceId string `protobuf:"bytes,3,opt,name=template_namespace_id,json=templateNamespaceId,proto3" json:"template_namespace_id,omitempty"`
	// The ID of the table to create the table from.
	TemplateTableUid string `protobuf:"bytes,4,opt,name=template_table_uid,json=templateTableUid,proto3" json:"template_table_uid,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateTableFromTemplateRequest) Reset() {
	*x = CreateTableFromTemplateRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableFromTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableFromTemplateRequest) ProtoMessage() {}

func (x *CreateTableFromTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableFromTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTableFromTemplateRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTableFromTemplateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateTableFromTemplateRequest) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *CreateTableFromTemplateRequest) GetTemplateNamespaceId() string {
	if x != nil {
		return x.TemplateNamespaceId
	}
	return ""
}

func (x *CreateTableFromTemplateRequest) GetTemplateTableUid() string {
	if x != nil {
		return x.TemplateTableUid
	}
	return ""
}

// CreateTableFromTemplateResponse contains the created table.
type CreateTableFromTemplateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created table.
	Table         *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableFromTemplateResponse) Reset() {
	*x = CreateTableFromTemplateResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableFromTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableFromTemplateResponse) ProtoMessage() {}

func (x *CreateTableFromTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableFromTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTableFromTemplateResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTableFromTemplateResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// ListTablesRequest represents a request to list tables.
type ListTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the tables.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The page token for pagination.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The maximum number of tables to return.
	PageSize      int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTablesRequest) Reset() {
	*x = ListTablesRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesRequest) ProtoMessage() {}

func (x *ListTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesRequest.ProtoReflect.Descriptor instead.
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{3}
}

func (x *ListTablesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListTablesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTablesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ListTablesResponse contains the list of tables.
type ListTablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of tables.
	Tables []*Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	// The token for the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of tables.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTablesResponse) Reset() {
	*x = ListTablesResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesResponse) ProtoMessage() {}

func (x *ListTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesResponse.ProtoReflect.Descriptor instead.
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{4}
}

func (x *ListTablesResponse) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ListTablesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListTablesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// CreateTableRequest represents a request to create a table.
type CreateTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace where the table will be created.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The table resource to create.
	Table         *Table `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateTableRequest) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// CreateTableResponse contains the created table.
type CreateTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created table resource.
	Table         *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// GetTableRequest represents a request to fetch a table.
type GetTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to fetch.
	TableUid      string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableRequest) Reset() {
	*x = GetTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRequest) ProtoMessage() {}

func (x *GetTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRequest.ProtoReflect.Descriptor instead.
func (*GetTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{7}
}

func (x *GetTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

// GetTableResponse contains the requested table.
type GetTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The table resource.
	Table         *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableResponse) Reset() {
	*x = GetTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableResponse) ProtoMessage() {}

func (x *GetTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableResponse.ProtoReflect.Descriptor instead.
func (*GetTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{8}
}

func (x *GetTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// UpdateTableRequest represents a request to update a table.
type UpdateTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to update.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The table fields that will replace the existing ones.
	Table *Table `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	// The update mask specifies the subset of fields that should be modified.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTableRequest) Reset() {
	*x = UpdateTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableRequest) ProtoMessage() {}

func (x *UpdateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *UpdateTableRequest) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *UpdateTableRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateTableResponse contains the updated table.
type UpdateTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated table resource.
	Table         *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTableResponse) Reset() {
	*x = UpdateTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableResponse) ProtoMessage() {}

func (x *UpdateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableResponse.ProtoReflect.Descriptor instead.
func (*UpdateTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// DeleteTableRequest represents a request to delete a table.
type DeleteTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to delete.
	TableUid      string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTableRequest) Reset() {
	*x = DeleteTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableRequest) ProtoMessage() {}

func (x *DeleteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

// DeleteTableResponse is an empty response for deleting a table.
type DeleteTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTableResponse) Reset() {
	*x = DeleteTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableResponse) ProtoMessage() {}

func (x *DeleteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableResponse.ProtoReflect.Descriptor instead.
func (*DeleteTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{12}
}

// NumberFormat defines the display format for number type columns.
type NumberFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The specific format to apply to numbers in this column.
	Format NumberFormat_Format `protobuf:"varint,1,opt,name=format,proto3,enum=agent.agent.v1alpha.NumberFormat_Format" json:"format,omitempty"`
	// Number of decimal places to display (e.g., 2 would show 1.23).
	// If not specified, a default appropriate to the format will be used.
	DecimalPlaces int32 `protobuf:"varint,2,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
	// ISO 4217 currency code (e.g., "USD", "EUR", "JPY") for currency format.
	// Required when format is FORMAT_CURRENCY, ignored for other formats.
	CurrencyCode  string `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumberFormat) Reset() {
	*x = NumberFormat{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumberFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberFormat) ProtoMessage() {}

func (x *NumberFormat) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberFormat.ProtoReflect.Descriptor instead.
func (*NumberFormat) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{13}
}

func (x *NumberFormat) GetFormat() NumberFormat_Format {
	if x != nil {
		return x.Format
	}
	return NumberFormat_FORMAT_UNSPECIFIED
}

func (x *NumberFormat) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

func (x *NumberFormat) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// ColumnDefinition represents a column definition in a table.
type ColumnDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the column.
	ColumnUid string `protobuf:"bytes,1,opt,name=column_uid,json=columnUid,proto3" json:"column_uid,omitempty"`
	// The name of the column.
	// The name of the column. If this differs from the key in the ColumnDefinitions map,
	// the key will be updated to match this value.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the column.
	Type Type `protobuf:"varint,3,opt,name=type,proto3,enum=agent.agent.v1alpha.Type" json:"type,omitempty"`
	// The order of the column in the table, starting at 1. This determines the column's position
	// when displaying or processing table data.
	Order int32 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	// The configuration for the agent.
	AgentConfig *ColumnDefinition_AgentConfig `protobuf:"bytes,5,opt,name=agent_config,json=agentConfig,proto3" json:"agent_config,omitempty"`
	// The sort of the column.
	Sort ColumnDefinition_Sort `protobuf:"varint,6,opt,name=sort,proto3,enum=agent.agent.v1alpha.ColumnDefinition_Sort" json:"sort,omitempty"`
	// The description for the column.
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Format options for different column types.
	//
	// Types that are valid to be assigned to Format:
	//
	//	*ColumnDefinition_NumberFormat
	Format isColumnDefinition_Format `protobuf_oneof:"format"`
	// The selection settings of the column.
	Selection *ColumnDefinition_Selection `protobuf:"bytes,9,opt,name=selection,proto3" json:"selection,omitempty"`
	// The metadata of the column.
	Metadata      *structpb.Struct `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnDefinition) Reset() {
	*x = ColumnDefinition{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDefinition) ProtoMessage() {}

func (x *ColumnDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDefinition.ProtoReflect.Descriptor instead.
func (*ColumnDefinition) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14}
}

func (x *ColumnDefinition) GetColumnUid() string {
	if x != nil {
		return x.ColumnUid
	}
	return ""
}

func (x *ColumnDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnDefinition) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *ColumnDefinition) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ColumnDefinition) GetAgentConfig() *ColumnDefinition_AgentConfig {
	if x != nil {
		return x.AgentConfig
	}
	return nil
}

func (x *ColumnDefinition) GetSort() ColumnDefinition_Sort {
	if x != nil {
		return x.Sort
	}
	return ColumnDefinition_SORT_UNSPECIFIED
}

func (x *ColumnDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ColumnDefinition) GetFormat() isColumnDefinition_Format {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *ColumnDefinition) GetNumberFormat() *NumberFormat {
	if x != nil {
		if x, ok := x.Format.(*ColumnDefinition_NumberFormat); ok {
			return x.NumberFormat
		}
	}
	return nil
}

func (x *ColumnDefinition) GetSelection() *ColumnDefinition_Selection {
	if x != nil {
		return x.Selection
	}
	return nil
}

func (x *ColumnDefinition) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isColumnDefinition_Format interface {
	isColumnDefinition_Format()
}

type ColumnDefinition_NumberFormat struct {
	// Format for number type columns.
	NumberFormat *NumberFormat `protobuf:"bytes,8,opt,name=number_format,json=numberFormat,proto3,oneof"`
}

func (*ColumnDefinition_NumberFormat) isColumnDefinition_Format() {}

// GetColumnDefinitionsRequest represents a request to fetch column definitions.
type GetColumnDefinitionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table whose columns to fetch.
	TableUid      string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColumnDefinitionsRequest) Reset() {
	*x = GetColumnDefinitionsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColumnDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnDefinitionsRequest) ProtoMessage() {}

func (x *GetColumnDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*GetColumnDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{15}
}

func (x *GetColumnDefinitionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetColumnDefinitionsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

// GetColumnDefinitionsResponse contains the column definitions.
type GetColumnDefinitionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map of column UID to their definitions.
	ColumnDefinitions map[string]*ColumnDefinition `protobuf:"bytes,1,rep,name=column_definitions,json=columnDefinitions,proto3" json:"column_definitions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetColumnDefinitionsResponse) Reset() {
	*x = GetColumnDefinitionsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColumnDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnDefinitionsResponse) ProtoMessage() {}

func (x *GetColumnDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*GetColumnDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{16}
}

func (x *GetColumnDefinitionsResponse) GetColumnDefinitions() map[string]*ColumnDefinition {
	if x != nil {
		return x.ColumnDefinitions
	}
	return nil
}

// UpdateColumnDefinitionsRequest represents a request to update column definitions.
type UpdateColumnDefinitionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table whose columns to update.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// Map of column UID to their new definitions.
	ColumnDefinitions map[string]*ColumnDefinition `protobuf:"bytes,3,rep,name=column_definitions,json=columnDefinitions,proto3" json:"column_definitions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateColumnDefinitionsRequest) Reset() {
	*x = UpdateColumnDefinitionsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateColumnDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateColumnDefinitionsRequest) ProtoMessage() {}

func (x *UpdateColumnDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateColumnDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateColumnDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateColumnDefinitionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateColumnDefinitionsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *UpdateColumnDefinitionsRequest) GetColumnDefinitions() map[string]*ColumnDefinition {
	if x != nil {
		return x.ColumnDefinitions
	}
	return nil
}

// UpdateColumnDefinitionsResponse contains the updated column definitions.
type UpdateColumnDefinitionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map of column UID to the updated definitions.
	ColumnDefinitions map[string]*ColumnDefinition `protobuf:"bytes,1,rep,name=column_definitions,json=columnDefinitions,proto3" json:"column_definitions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateColumnDefinitionsResponse) Reset() {
	*x = UpdateColumnDefinitionsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateColumnDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateColumnDefinitionsResponse) ProtoMessage() {}

func (x *UpdateColumnDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateColumnDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateColumnDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateColumnDefinitionsResponse) GetColumnDefinitions() map[string]*ColumnDefinition {
	if x != nil {
		return x.ColumnDefinitions
	}
	return nil
}

// GetColumnDefinitionRequest represents a request to fetch a column definition.
type GetColumnDefinitionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table whose column definition to fetch.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The UID of the column whose definition to fetch.
	ColumnUid     string `protobuf:"bytes,3,opt,name=column_uid,json=columnUid,proto3" json:"column_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColumnDefinitionRequest) Reset() {
	*x = GetColumnDefinitionRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColumnDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnDefinitionRequest) ProtoMessage() {}

func (x *GetColumnDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetColumnDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{19}
}

func (x *GetColumnDefinitionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetColumnDefinitionRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *GetColumnDefinitionRequest) GetColumnUid() string {
	if x != nil {
		return x.ColumnUid
	}
	return ""
}

// GetColumnDefinitionResponse contains the requested column definition.
type GetColumnDefinitionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The column definition.
	ColumnDefinition *ColumnDefinition `protobuf:"bytes,1,opt,name=column_definition,json=columnDefinition,proto3" json:"column_definition,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetColumnDefinitionResponse) Reset() {
	*x = GetColumnDefinitionResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColumnDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnDefinitionResponse) ProtoMessage() {}

func (x *GetColumnDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetColumnDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{20}
}

func (x *GetColumnDefinitionResponse) GetColumnDefinition() *ColumnDefinition {
	if x != nil {
		return x.ColumnDefinition
	}
	return nil
}

// RecomputeColumnRequest represents a request to recompute a column.
type RecomputeColumnRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table whose column to recompute.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The UID of the column to recompute.
	ColumnUid     string `protobuf:"bytes,3,opt,name=column_uid,json=columnUid,proto3" json:"column_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeColumnRequest) Reset() {
	*x = RecomputeColumnRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeColumnRequest) ProtoMessage() {}

func (x *RecomputeColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeColumnRequest.ProtoReflect.Descriptor instead.
func (*RecomputeColumnRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{21}
}

func (x *RecomputeColumnRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RecomputeColumnRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *RecomputeColumnRequest) GetColumnUid() string {
	if x != nil {
		return x.ColumnUid
	}
	return ""
}

// RecomputeColumnResponse is an empty response for recomputing a column.
type RecomputeColumnResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeColumnResponse) Reset() {
	*x = RecomputeColumnResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeColumnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeColumnResponse) ProtoMessage() {}

func (x *RecomputeColumnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeColumnResponse.ProtoReflect.Descriptor instead.
func (*RecomputeColumnResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{22}
}

// Cell represents a cell in a table.
type Cell struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the cell.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// The unique identifier of the column this cell belongs to.
	ColumnUid string `protobuf:"bytes,2,opt,name=column_uid,json=columnUid,proto3" json:"column_uid,omitempty"`
	// The row that this cell belongs to.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The timestamp when the cell was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The type of the cell's value.
	Type Type `protobuf:"varint,5,opt,name=type,proto3,enum=agent.agent.v1alpha.Type" json:"type,omitempty"`
	// The value of the cell as a string.
	//
	// Types that are valid to be assigned to Value:
	//
	//	*Cell_StringValue
	//	*Cell_NumberValue
	//	*Cell_BooleanValue
	//	*Cell_FileValue
	//	*Cell_DocumentValue
	Value isCell_Value `protobuf_oneof:"value"`
	// Additional metadata for the cell.
	Metadata *structpb.Struct `protobuf:"bytes,11,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The status of the cell.
	Status CellStatus `protobuf:"varint,12,opt,name=status,proto3,enum=agent.agent.v1alpha.CellStatus" json:"status,omitempty"`
	// The citations for the cell.
	Citations []*Citation `protobuf:"bytes,14,rep,name=citations,proto3" json:"citations,omitempty"`
	// The transparency of the cell.
	Transparency *Cell_Transparency `protobuf:"bytes,13,opt,name=transparency,proto3" json:"transparency,omitempty"`
	// The lock state of the cell.
	LockState     LockState `protobuf:"varint,15,opt,name=lock_state,json=lockState,proto3,enum=agent.agent.v1alpha.LockState" json:"lock_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cell) Reset() {
	*x = Cell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cell) ProtoMessage() {}

func (x *Cell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cell.ProtoReflect.Descriptor instead.
func (*Cell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{23}
}

func (x *Cell) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Cell) GetColumnUid() string {
	if x != nil {
		return x.ColumnUid
	}
	return ""
}

func (x *Cell) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *Cell) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Cell) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *Cell) GetValue() isCell_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Cell) GetStringValue() *StringCell {
	if x != nil {
		if x, ok := x.Value.(*Cell_StringValue); ok {
			return x.StringValue
		}
	}
	return nil
}

func (x *Cell) GetNumberValue() *NumberCell {
	if x != nil {
		if x, ok := x.Value.(*Cell_NumberValue); ok {
			return x.NumberValue
		}
	}
	return nil
}

func (x *Cell) GetBooleanValue() *BooleanCell {
	if x != nil {
		if x, ok := x.Value.(*Cell_BooleanValue); ok {
			return x.BooleanValue
		}
	}
	return nil
}

func (x *Cell) GetFileValue() *FileCell {
	if x != nil {
		if x, ok := x.Value.(*Cell_FileValue); ok {
			return x.FileValue
		}
	}
	return nil
}

func (x *Cell) GetDocumentValue() *DocumentCell {
	if x != nil {
		if x, ok := x.Value.(*Cell_DocumentValue); ok {
			return x.DocumentValue
		}
	}
	return nil
}

func (x *Cell) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Cell) GetStatus() CellStatus {
	if x != nil {
		return x.Status
	}
	return CellStatus_CELL_STATUS_UNSPECIFIED
}

func (x *Cell) GetCitations() []*Citation {
	if x != nil {
		return x.Citations
	}
	return nil
}

func (x *Cell) GetTransparency() *Cell_Transparency {
	if x != nil {
		return x.Transparency
	}
	return nil
}

func (x *Cell) GetLockState() LockState {
	if x != nil {
		return x.LockState
	}
	return LockState_LOCK_STATE_UNSPECIFIED
}

type isCell_Value interface {
	isCell_Value()
}

type Cell_StringValue struct {
	// The value of the cell as a string.
	StringValue *StringCell `protobuf:"bytes,6,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Cell_NumberValue struct {
	// The value of the cell as a number.
	NumberValue *NumberCell `protobuf:"bytes,7,opt,name=number_value,json=numberValue,proto3,oneof"`
}

type Cell_BooleanValue struct {
	// The value of the cell as a boolean.
	BooleanValue *BooleanCell `protobuf:"bytes,8,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type Cell_FileValue struct {
	// The value of the cell as a file resource. This can represent various file types
	// such as images, documents, audio, or other binary data.
	FileValue *FileCell `protobuf:"bytes,9,opt,name=file_value,json=fileValue,proto3,oneof"`
}

type Cell_DocumentValue struct {
	// The value of the cell as a document resource. The document resource is a
	// file resource that is specifically designed for document types, such as
	// TXT, Markdown, PDF, DOC, and PPT.
	DocumentValue *DocumentCell `protobuf:"bytes,10,opt,name=document_value,json=documentValue,proto3,oneof"`
}

func (*Cell_StringValue) isCell_Value() {}

func (*Cell_NumberValue) isCell_Value() {}

func (*Cell_BooleanValue) isCell_Value() {}

func (*Cell_FileValue) isCell_Value() {}

func (*Cell_DocumentValue) isCell_Value() {}

// NullCell represents a null cell.
type NullCell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NullCell) Reset() {
	*x = NullCell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NullCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullCell) ProtoMessage() {}

func (x *NullCell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullCell.ProtoReflect.Descriptor instead.
func (*NullCell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{24}
}

// StringCell represents a cell with a string value.
type StringCell struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the cell that directly set by the user.
	UserInput *string `protobuf:"bytes,2,opt,name=user_input,json=userInput,proto3,oneof" json:"user_input,omitempty"`
	// The value of the cell that was computed by the automatic computation.
	ComputedValue *string `protobuf:"bytes,3,opt,name=computed_value,json=computedValue,proto3,oneof" json:"computed_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringCell) Reset() {
	*x = StringCell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringCell) ProtoMessage() {}

func (x *StringCell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringCell.ProtoReflect.Descriptor instead.
func (*StringCell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{25}
}

func (x *StringCell) GetUserInput() string {
	if x != nil && x.UserInput != nil {
		return *x.UserInput
	}
	return ""
}

func (x *StringCell) GetComputedValue() string {
	if x != nil && x.ComputedValue != nil {
		return *x.ComputedValue
	}
	return ""
}

// NumberCell represents a cell with a number value.
type NumberCell struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the cell that directly set by the user.
	UserInput *float64 `protobuf:"fixed64,2,opt,name=user_input,json=userInput,proto3,oneof" json:"user_input,omitempty"`
	// The value of the cell that was computed by the automatic computation.
	ComputedValue *float64 `protobuf:"fixed64,3,opt,name=computed_value,json=computedValue,proto3,oneof" json:"computed_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumberCell) Reset() {
	*x = NumberCell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumberCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberCell) ProtoMessage() {}

func (x *NumberCell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberCell.ProtoReflect.Descriptor instead.
func (*NumberCell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{26}
}

func (x *NumberCell) GetUserInput() float64 {
	if x != nil && x.UserInput != nil {
		return *x.UserInput
	}
	return 0
}

func (x *NumberCell) GetComputedValue() float64 {
	if x != nil && x.ComputedValue != nil {
		return *x.ComputedValue
	}
	return 0
}

// BooleanCell represents a cell with a boolean value.
type BooleanCell struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the cell that directly set by the user.
	UserInput *bool `protobuf:"varint,2,opt,name=user_input,json=userInput,proto3,oneof" json:"user_input,omitempty"`
	// The value of the cell that was computed by the automatic computation.
	ComputedValue *bool `protobuf:"varint,3,opt,name=computed_value,json=computedValue,proto3,oneof" json:"computed_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooleanCell) Reset() {
	*x = BooleanCell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanCell) ProtoMessage() {}

func (x *BooleanCell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanCell.ProtoReflect.Descriptor instead.
func (*BooleanCell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{27}
}

func (x *BooleanCell) GetUserInput() bool {
	if x != nil && x.UserInput != nil {
		return *x.UserInput
	}
	return false
}

func (x *BooleanCell) GetComputedValue() bool {
	if x != nil && x.ComputedValue != nil {
		return *x.ComputedValue
	}
	return false
}

// FileCell represents a cell with a file resource.
type FileCell struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace of the file resource.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The File UID of the file resource.
	FileUid string `protobuf:"bytes,2,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	// The UID of the raw object that the file resource belongs to.
	ObjectUid string `protobuf:"bytes,3,opt,name=object_uid,json=objectUid,proto3" json:"object_uid,omitempty"`
	// File name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// MIME type of the file.
	MimeType string `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// The catalog ID of the file resource.
	CatalogId string `protobuf:"bytes,6,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The URL of the file resource.
	FileUrl       string `protobuf:"bytes,7,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileCell) Reset() {
	*x = FileCell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCell) ProtoMessage() {}

func (x *FileCell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCell.ProtoReflect.Descriptor instead.
func (*FileCell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{28}
}

func (x *FileCell) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FileCell) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

func (x *FileCell) GetObjectUid() string {
	if x != nil {
		return x.ObjectUid
	}
	return ""
}

func (x *FileCell) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileCell) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *FileCell) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *FileCell) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

// DocumentCell represents a cell with a document resource.
type DocumentCell struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace of the document resource.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The File UID of the document resource.
	FileUid string `protobuf:"bytes,2,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	// The UID of the raw object that the document resource belongs to.
	ObjectUid string `protobuf:"bytes,3,opt,name=object_uid,json=objectUid,proto3" json:"object_uid,omitempty"`
	// File name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// MIME type of the document.
	MimeType      string `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentCell) Reset() {
	*x = DocumentCell{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCell) ProtoMessage() {}

func (x *DocumentCell) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCell.ProtoReflect.Descriptor instead.
func (*DocumentCell) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{29}
}

func (x *DocumentCell) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DocumentCell) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

func (x *DocumentCell) GetObjectUid() string {
	if x != nil {
		return x.ObjectUid
	}
	return ""
}

func (x *DocumentCell) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DocumentCell) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// Row represents a row in a table.
type Row struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the row.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Map of column UID to their cell values.
	Cells map[string]*Cell `protobuf:"bytes,2,rep,name=cells,proto3" json:"cells,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The order of the row in the table, starting at 1. This determines the row's position
	// when displaying or processing table data.
	Order int32 `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	// The timestamp when the row was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The timestamp when the row was last updated.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{30}
}

func (x *Row) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Row) GetCells() map[string]*Cell {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *Row) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Row) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Row) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// ListRowsRequest represents a request to fetch rows from a table.
type ListRowsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table whose rows to fetch.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The maximum number of rows to return.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page token for pagination.
	PageToken     string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRowsRequest) Reset() {
	*x = ListRowsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowsRequest) ProtoMessage() {}

func (x *ListRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowsRequest.ProtoReflect.Descriptor instead.
func (*ListRowsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{31}
}

func (x *ListRowsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListRowsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *ListRowsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRowsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListRowsResponse contains the requested rows.
type ListRowsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of rows.
	Rows []*Row `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	// The token for the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of rows that match the request.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRowsResponse) Reset() {
	*x = ListRowsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowsResponse) ProtoMessage() {}

func (x *ListRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowsResponse.ProtoReflect.Descriptor instead.
func (*ListRowsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{32}
}

func (x *ListRowsResponse) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListRowsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListRowsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// InsertRowRequest represents a request to insert a row into a table.
type InsertRowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to insert rows into.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The rows to insert.
	Row *Row `protobuf:"bytes,3,opt,name=row,proto3" json:"row,omitempty"`
	// The unique identifier of the row to insert before.
	BeforeRowUid  *string `protobuf:"bytes,4,opt,name=before_row_uid,json=beforeRowUid,proto3,oneof" json:"before_row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertRowRequest) Reset() {
	*x = InsertRowRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRowRequest) ProtoMessage() {}

func (x *InsertRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRowRequest.ProtoReflect.Descriptor instead.
func (*InsertRowRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{33}
}

func (x *InsertRowRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *InsertRowRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *InsertRowRequest) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

func (x *InsertRowRequest) GetBeforeRowUid() string {
	if x != nil && x.BeforeRowUid != nil {
		return *x.BeforeRowUid
	}
	return ""
}

// InsertRowResponse contains the inserted row.
type InsertRowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The inserted row resource.
	Row           *Row `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertRowResponse) Reset() {
	*x = InsertRowResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRowResponse) ProtoMessage() {}

func (x *InsertRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRowResponse.ProtoReflect.Descriptor instead.
func (*InsertRowResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{34}
}

func (x *InsertRowResponse) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

// UpdateRowRequest represents a request to update a row.
type UpdateRowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the row.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row to update.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The new row data.
	Row           *Row `protobuf:"bytes,4,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRowRequest) Reset() {
	*x = UpdateRowRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRowRequest) ProtoMessage() {}

func (x *UpdateRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRowRequest.ProtoReflect.Descriptor instead.
func (*UpdateRowRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateRowRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateRowRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *UpdateRowRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *UpdateRowRequest) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

// UpdateRowResponse contains the updated row.
type UpdateRowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated row resource.
	Row           *Row `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRowResponse) Reset() {
	*x = UpdateRowResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRowResponse) ProtoMessage() {}

func (x *UpdateRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRowResponse.ProtoReflect.Descriptor instead.
func (*UpdateRowResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateRowResponse) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

// GetRowRequest represents a request to get a row.
type GetRowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the row.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row to get.
	RowUid        string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRowRequest) Reset() {
	*x = GetRowRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowRequest) ProtoMessage() {}

func (x *GetRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowRequest.ProtoReflect.Descriptor instead.
func (*GetRowRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{37}
}

func (x *GetRowRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetRowRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *GetRowRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

// GetRowResponse contains the requested row.
type GetRowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The row resource.
	Row           *Row `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRowResponse) Reset() {
	*x = GetRowResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowResponse) ProtoMessage() {}

func (x *GetRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowResponse.ProtoReflect.Descriptor instead.
func (*GetRowResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{38}
}

func (x *GetRowResponse) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

// UpdateRowsRequest represents a request to update multiple rows.
type UpdateRowsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the rows.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The rows to update.
	Rows          []*Row `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRowsRequest) Reset() {
	*x = UpdateRowsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRowsRequest) ProtoMessage() {}

func (x *UpdateRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRowsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRowsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateRowsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateRowsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *UpdateRowsRequest) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

// UpdateRowsResponse contains the updated rows.
type UpdateRowsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated row resources.
	Rows          []*Row `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRowsResponse) Reset() {
	*x = UpdateRowsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRowsResponse) ProtoMessage() {}

func (x *UpdateRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRowsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRowsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateRowsResponse) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

// DeleteRowRequest represents a request to delete a row.
type DeleteRowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the row.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row to delete.
	RowUid        string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRowRequest) Reset() {
	*x = DeleteRowRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowRequest) ProtoMessage() {}

func (x *DeleteRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowRequest.ProtoReflect.Descriptor instead.
func (*DeleteRowRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteRowRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteRowRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *DeleteRowRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

// DeleteRowResponse is an empty response for deleting a row.
type DeleteRowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRowResponse) Reset() {
	*x = DeleteRowResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowResponse) ProtoMessage() {}

func (x *DeleteRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowResponse.ProtoReflect.Descriptor instead.
func (*DeleteRowResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{42}
}

// DeleteRowsRequest represents a request to delete multiple rows.
type DeleteRowsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the rows.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifiers of the rows to delete.
	RowUids       []string `protobuf:"bytes,3,rep,name=row_uids,json=rowUids,proto3" json:"row_uids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRowsRequest) Reset() {
	*x = DeleteRowsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowsRequest) ProtoMessage() {}

func (x *DeleteRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowsRequest.ProtoReflect.Descriptor instead.
func (*DeleteRowsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteRowsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteRowsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *DeleteRowsRequest) GetRowUids() []string {
	if x != nil {
		return x.RowUids
	}
	return nil
}

// DeleteRowsResponse is an empty response for deleting multiple rows.
type DeleteRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRowsResponse) Reset() {
	*x = DeleteRowsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowsResponse) ProtoMessage() {}

func (x *DeleteRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowsResponse.ProtoReflect.Descriptor instead.
func (*DeleteRowsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{44}
}

// MoveRowsRequest represents a request to move multiple rows.
type MoveRowsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the row.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifiers of the rows to be moved.
	RowUids []string `protobuf:"bytes,3,rep,name=row_uids,json=rowUids,proto3" json:"row_uids,omitempty"`
	// The unique identifier of the row to move before.
	BeforeRowUid  *string `protobuf:"bytes,4,opt,name=before_row_uid,json=beforeRowUid,proto3,oneof" json:"before_row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveRowsRequest) Reset() {
	*x = MoveRowsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRowsRequest) ProtoMessage() {}

func (x *MoveRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRowsRequest.ProtoReflect.Descriptor instead.
func (*MoveRowsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{45}
}

func (x *MoveRowsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *MoveRowsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *MoveRowsRequest) GetRowUids() []string {
	if x != nil {
		return x.RowUids
	}
	return nil
}

func (x *MoveRowsRequest) GetBeforeRowUid() string {
	if x != nil && x.BeforeRowUid != nil {
		return *x.BeforeRowUid
	}
	return ""
}

// MoveRowsResponse is an empty response for moving multiple rows.
type MoveRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveRowsResponse) Reset() {
	*x = MoveRowsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRowsResponse) ProtoMessage() {}

func (x *MoveRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRowsResponse.ProtoReflect.Descriptor instead.
func (*MoveRowsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{46}
}

// GetCellRequest represents a request to get a cell.
type GetCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the row.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row containing the cell.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The unique identifier of the cell to get.
	CellUid       string `protobuf:"bytes,4,opt,name=cell_uid,json=cellUid,proto3" json:"cell_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellRequest) Reset() {
	*x = GetCellRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellRequest) ProtoMessage() {}

func (x *GetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellRequest.ProtoReflect.Descriptor instead.
func (*GetCellRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{47}
}

func (x *GetCellRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetCellRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *GetCellRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *GetCellRequest) GetCellUid() string {
	if x != nil {
		return x.CellUid
	}
	return ""
}

// GetCellResponse contains the requested cell.
type GetCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The cell resource.
	Cell          *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCellResponse) Reset() {
	*x = GetCellResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCellResponse) ProtoMessage() {}

func (x *GetCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCellResponse.ProtoReflect.Descriptor instead.
func (*GetCellResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{48}
}

func (x *GetCellResponse) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// UpdateCellRequest represents a request to update a cell.
type UpdateCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the row.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row containing the cell.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The unique identifier of the cell to update.
	CellUid string `protobuf:"bytes,4,opt,name=cell_uid,json=cellUid,proto3" json:"cell_uid,omitempty"`
	// The new cell data.
	Cell          *Cell `protobuf:"bytes,5,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCellRequest) Reset() {
	*x = UpdateCellRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCellRequest) ProtoMessage() {}

func (x *UpdateCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCellRequest.ProtoReflect.Descriptor instead.
func (*UpdateCellRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateCellRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateCellRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *UpdateCellRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *UpdateCellRequest) GetCellUid() string {
	if x != nil {
		return x.CellUid
	}
	return ""
}

func (x *UpdateCellRequest) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// UpdateCellResponse contains the updated cell.
type UpdateCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated cell resource.
	Cell          *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCellResponse) Reset() {
	*x = UpdateCellResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCellResponse) ProtoMessage() {}

func (x *UpdateCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCellResponse.ProtoReflect.Descriptor instead.
func (*UpdateCellResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateCellResponse) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// RecomputeCellRequest represents a request to recompute a cell.
type RecomputeCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the cell.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row containing the cell.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The unique identifier of the cell to recompute.
	CellUid       string `protobuf:"bytes,4,opt,name=cell_uid,json=cellUid,proto3" json:"cell_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeCellRequest) Reset() {
	*x = RecomputeCellRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeCellRequest) ProtoMessage() {}

func (x *RecomputeCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeCellRequest.ProtoReflect.Descriptor instead.
func (*RecomputeCellRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{51}
}

func (x *RecomputeCellRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RecomputeCellRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *RecomputeCellRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *RecomputeCellRequest) GetCellUid() string {
	if x != nil {
		return x.CellUid
	}
	return ""
}

// RecomputeCellResponse contains the updated cell.
type RecomputeCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated cell resource.
	Cell          *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeCellResponse) Reset() {
	*x = RecomputeCellResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeCellResponse) ProtoMessage() {}

func (x *RecomputeCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeCellResponse.ProtoReflect.Descriptor instead.
func (*RecomputeCellResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{52}
}

func (x *RecomputeCellResponse) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// ResetCellRequest represents a request to reset a cell.
type ResetCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the cell.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row containing the cell.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The unique identifier of the cell to reset.
	CellUid       string `protobuf:"bytes,4,opt,name=cell_uid,json=cellUid,proto3" json:"cell_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetCellRequest) Reset() {
	*x = ResetCellRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCellRequest) ProtoMessage() {}

func (x *ResetCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCellRequest.ProtoReflect.Descriptor instead.
func (*ResetCellRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{53}
}

func (x *ResetCellRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ResetCellRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *ResetCellRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *ResetCellRequest) GetCellUid() string {
	if x != nil {
		return x.CellUid
	}
	return ""
}

// ResetCellResponse is an empty response for resetting a cell.
type ResetCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated cell resource.
	Cell          *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetCellResponse) Reset() {
	*x = ResetCellResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCellResponse) ProtoMessage() {}

func (x *ResetCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCellResponse.ProtoReflect.Descriptor instead.
func (*ResetCellResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{54}
}

func (x *ResetCellResponse) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// LockCellRequest represents a request to lock a cell.
type LockCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the cell.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row containing the cell.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The unique identifier of the cell to lock.
	CellUid       string `protobuf:"bytes,4,opt,name=cell_uid,json=cellUid,proto3" json:"cell_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockCellRequest) Reset() {
	*x = LockCellRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockCellRequest) ProtoMessage() {}

func (x *LockCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockCellRequest.ProtoReflect.Descriptor instead.
func (*LockCellRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{55}
}

func (x *LockCellRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *LockCellRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *LockCellRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *LockCellRequest) GetCellUid() string {
	if x != nil {
		return x.CellUid
	}
	return ""
}

// LockCellResponse is an empty response for locking a cell.
type LockCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated cell resource.
	Cell          *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockCellResponse) Reset() {
	*x = LockCellResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockCellResponse) ProtoMessage() {}

func (x *LockCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockCellResponse.ProtoReflect.Descriptor instead.
func (*LockCellResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{56}
}

func (x *LockCellResponse) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// UnlockCellRequest represents a request to unlock a cell.
type UnlockCellRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table containing the cell.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The unique identifier of the row containing the cell.
	RowUid string `protobuf:"bytes,3,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	// The unique identifier of the cell to unlock.
	CellUid       string `protobuf:"bytes,4,opt,name=cell_uid,json=cellUid,proto3" json:"cell_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockCellRequest) Reset() {
	*x = UnlockCellRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockCellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockCellRequest) ProtoMessage() {}

func (x *UnlockCellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockCellRequest.ProtoReflect.Descriptor instead.
func (*UnlockCellRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{57}
}

func (x *UnlockCellRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UnlockCellRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *UnlockCellRequest) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

func (x *UnlockCellRequest) GetCellUid() string {
	if x != nil {
		return x.CellUid
	}
	return ""
}

// UnlockCellResponse is an empty response for unlocking a cell.
type UnlockCellResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated cell resource.
	Cell          *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockCellResponse) Reset() {
	*x = UnlockCellResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockCellResponse) ProtoMessage() {}

func (x *UnlockCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockCellResponse.ProtoReflect.Descriptor instead.
func (*UnlockCellResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{58}
}

func (x *UnlockCellResponse) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

// ExportTableRequest represents a request to export table data.
type ExportTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to export.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The format to export the data in.
	Format        ExportFormat `protobuf:"varint,3,opt,name=format,proto3,enum=agent.agent.v1alpha.ExportFormat" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportTableRequest) Reset() {
	*x = ExportTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTableRequest) ProtoMessage() {}

func (x *ExportTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTableRequest.ProtoReflect.Descriptor instead.
func (*ExportTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{59}
}

func (x *ExportTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ExportTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *ExportTableRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

// ExportTableResponse is an empty response for exporting table data.
type ExportTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The exported data.
	Data          []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportTableResponse) Reset() {
	*x = ExportTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTableResponse) ProtoMessage() {}

func (x *ExportTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTableResponse.ProtoReflect.Descriptor instead.
func (*ExportTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{60}
}

func (x *ExportTableResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetTableEventsRequest represents a request to fetch events for a table.
type GetTableEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to fetch events for.
	TableUid      string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableEventsRequest) Reset() {
	*x = GetTableEventsRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableEventsRequest) ProtoMessage() {}

func (x *GetTableEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableEventsRequest.ProtoReflect.Descriptor instead.
func (*GetTableEventsRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{61}
}

func (x *GetTableEventsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetTableEventsRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

// GetTableEventsResponse contains the events for a table.
type GetTableEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The events for the table.
	Event         *TableEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableEventsResponse) Reset() {
	*x = GetTableEventsResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableEventsResponse) ProtoMessage() {}

func (x *GetTableEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableEventsResponse.ProtoReflect.Descriptor instead.
func (*GetTableEventsResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{62}
}

func (x *GetTableEventsResponse) GetEvent() *TableEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

// TableEvent represents an event for a table.
type TableEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The event type.
	// In text/event-stream format, this maps to the `event` field.
	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// The ID of the event.
	// In text/event-stream format, this maps to the `id` field.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The data of the event.
	// In text/event-stream format, this maps to the `data` field.
	//
	// Types that are valid to be assigned to Data:
	//
	//	*TableEvent_TableUpdatedEvent
	//	*TableEvent_TableDeletedEvent
	//	*TableEvent_ColumnDefinitionsUpdatedEvent
	//	*TableEvent_RowInsertedEvent
	//	*TableEvent_RowUpdatedEvent
	//	*TableEvent_RowDeletedEvent
	//	*TableEvent_RowsMovedEvent
	//	*TableEvent_CellUpdatedEvent
	Data          isTableEvent_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableEvent) Reset() {
	*x = TableEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableEvent) ProtoMessage() {}

func (x *TableEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableEvent.ProtoReflect.Descriptor instead.
func (*TableEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{63}
}

func (x *TableEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *TableEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TableEvent) GetData() isTableEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TableEvent) GetTableUpdatedEvent() *TableUpdatedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_TableUpdatedEvent); ok {
			return x.TableUpdatedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetTableDeletedEvent() *TableDeletedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_TableDeletedEvent); ok {
			return x.TableDeletedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetColumnDefinitionsUpdatedEvent() *ColumnDefinitionsUpdatedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_ColumnDefinitionsUpdatedEvent); ok {
			return x.ColumnDefinitionsUpdatedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetRowInsertedEvent() *RowInsertedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_RowInsertedEvent); ok {
			return x.RowInsertedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetRowUpdatedEvent() *RowUpdatedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_RowUpdatedEvent); ok {
			return x.RowUpdatedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetRowDeletedEvent() *RowDeletedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_RowDeletedEvent); ok {
			return x.RowDeletedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetRowsMovedEvent() *RowsMovedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_RowsMovedEvent); ok {
			return x.RowsMovedEvent
		}
	}
	return nil
}

func (x *TableEvent) GetCellUpdatedEvent() *CellUpdatedEvent {
	if x != nil {
		if x, ok := x.Data.(*TableEvent_CellUpdatedEvent); ok {
			return x.CellUpdatedEvent
		}
	}
	return nil
}

type isTableEvent_Data interface {
	isTableEvent_Data()
}

type TableEvent_TableUpdatedEvent struct {
	// The table that was updated.
	TableUpdatedEvent *TableUpdatedEvent `protobuf:"bytes,3,opt,name=table_updated_event,json=tableUpdatedEvent,proto3,oneof"`
}

type TableEvent_TableDeletedEvent struct {
	// The table that was deleted.
	TableDeletedEvent *TableDeletedEvent `protobuf:"bytes,4,opt,name=table_deleted_event,json=tableDeletedEvent,proto3,oneof"`
}

type TableEvent_ColumnDefinitionsUpdatedEvent struct {
	// The column definitions that were updated.
	ColumnDefinitionsUpdatedEvent *ColumnDefinitionsUpdatedEvent `protobuf:"bytes,5,opt,name=column_definitions_updated_event,json=columnDefinitionsUpdatedEvent,proto3,oneof"`
}

type TableEvent_RowInsertedEvent struct {
	// The row that was inserted.
	RowInsertedEvent *RowInsertedEvent `protobuf:"bytes,6,opt,name=row_inserted_event,json=rowInsertedEvent,proto3,oneof"`
}

type TableEvent_RowUpdatedEvent struct {
	// The row that was updated.
	RowUpdatedEvent *RowUpdatedEvent `protobuf:"bytes,7,opt,name=row_updated_event,json=rowUpdatedEvent,proto3,oneof"`
}

type TableEvent_RowDeletedEvent struct {
	// The row that was deleted.
	RowDeletedEvent *RowDeletedEvent `protobuf:"bytes,8,opt,name=row_deleted_event,json=rowDeletedEvent,proto3,oneof"`
}

type TableEvent_RowsMovedEvent struct {
	// The rows that were moved.
	RowsMovedEvent *RowsMovedEvent `protobuf:"bytes,9,opt,name=rows_moved_event,json=rowsMovedEvent,proto3,oneof"`
}

type TableEvent_CellUpdatedEvent struct {
	// The cell that was updated.
	CellUpdatedEvent *CellUpdatedEvent `protobuf:"bytes,10,opt,name=cell_updated_event,json=cellUpdatedEvent,proto3,oneof"`
}

func (*TableEvent_TableUpdatedEvent) isTableEvent_Data() {}

func (*TableEvent_TableDeletedEvent) isTableEvent_Data() {}

func (*TableEvent_ColumnDefinitionsUpdatedEvent) isTableEvent_Data() {}

func (*TableEvent_RowInsertedEvent) isTableEvent_Data() {}

func (*TableEvent_RowUpdatedEvent) isTableEvent_Data() {}

func (*TableEvent_RowDeletedEvent) isTableEvent_Data() {}

func (*TableEvent_RowsMovedEvent) isTableEvent_Data() {}

func (*TableEvent_CellUpdatedEvent) isTableEvent_Data() {}

// TableUpdatedEvent represents an event for a table being updated.
type TableUpdatedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The table that was updated.
	Table         *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableUpdatedEvent) Reset() {
	*x = TableUpdatedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableUpdatedEvent) ProtoMessage() {}

func (x *TableUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableUpdatedEvent.ProtoReflect.Descriptor instead.
func (*TableUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{64}
}

func (x *TableUpdatedEvent) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// TableDeletedEvent represents an event for a table being deleted.
type TableDeletedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableDeletedEvent) Reset() {
	*x = TableDeletedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableDeletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableDeletedEvent) ProtoMessage() {}

func (x *TableDeletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableDeletedEvent.ProtoReflect.Descriptor instead.
func (*TableDeletedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{65}
}

// ColumnDefinitionsUpdatedEvent represents an event for column definitions being updated.
type ColumnDefinitionsUpdatedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The column definitions that were updated.
	ColumnDefinitions map[string]*ColumnDefinition `protobuf:"bytes,1,rep,name=column_definitions,json=columnDefinitions,proto3" json:"column_definitions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ColumnDefinitionsUpdatedEvent) Reset() {
	*x = ColumnDefinitionsUpdatedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDefinitionsUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDefinitionsUpdatedEvent) ProtoMessage() {}

func (x *ColumnDefinitionsUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDefinitionsUpdatedEvent.ProtoReflect.Descriptor instead.
func (*ColumnDefinitionsUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{66}
}

func (x *ColumnDefinitionsUpdatedEvent) GetColumnDefinitions() map[string]*ColumnDefinition {
	if x != nil {
		return x.ColumnDefinitions
	}
	return nil
}

// RowInsertedEvent represents an event for a row being inserted.
type RowInsertedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The row that was inserted.
	// Note: Only the row metadata is returned, not the cell data.
	Row *Row `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	// The unique identifier of the row that was inserted before.
	BeforeRowUid  string `protobuf:"bytes,2,opt,name=before_row_uid,json=beforeRowUid,proto3" json:"before_row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowInsertedEvent) Reset() {
	*x = RowInsertedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowInsertedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowInsertedEvent) ProtoMessage() {}

func (x *RowInsertedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowInsertedEvent.ProtoReflect.Descriptor instead.
func (*RowInsertedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{67}
}

func (x *RowInsertedEvent) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

func (x *RowInsertedEvent) GetBeforeRowUid() string {
	if x != nil {
		return x.BeforeRowUid
	}
	return ""
}

// RowUpdatedEvent represents an event for a row being updated.
type RowUpdatedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The row that was updated.
	// Note: Only the row metadata is returned, not the cell data.
	Row           *Row `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowUpdatedEvent) Reset() {
	*x = RowUpdatedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowUpdatedEvent) ProtoMessage() {}

func (x *RowUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowUpdatedEvent.ProtoReflect.Descriptor instead.
func (*RowUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{68}
}

func (x *RowUpdatedEvent) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

// RowDeletedEvent represents an event for a row being deleted.
type RowDeletedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the row that was deleted.
	RowUid        string `protobuf:"bytes,1,opt,name=row_uid,json=rowUid,proto3" json:"row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowDeletedEvent) Reset() {
	*x = RowDeletedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowDeletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowDeletedEvent) ProtoMessage() {}

func (x *RowDeletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowDeletedEvent.ProtoReflect.Descriptor instead.
func (*RowDeletedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{69}
}

func (x *RowDeletedEvent) GetRowUid() string {
	if x != nil {
		return x.RowUid
	}
	return ""
}

// RowsMovedEvent represents an event for multiple rows being moved.
type RowsMovedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifiers of the rows that were moved.
	RowUids []string `protobuf:"bytes,1,rep,name=row_uids,json=rowUids,proto3" json:"row_uids,omitempty"`
	// The unique identifier of the row that was moved before.
	BeforeRowUid  *string `protobuf:"bytes,2,opt,name=before_row_uid,json=beforeRowUid,proto3,oneof" json:"before_row_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowsMovedEvent) Reset() {
	*x = RowsMovedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowsMovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsMovedEvent) ProtoMessage() {}

func (x *RowsMovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsMovedEvent.ProtoReflect.Descriptor instead.
func (*RowsMovedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{70}
}

func (x *RowsMovedEvent) GetRowUids() []string {
	if x != nil {
		return x.RowUids
	}
	return nil
}

func (x *RowsMovedEvent) GetBeforeRowUid() string {
	if x != nil && x.BeforeRowUid != nil {
		return *x.BeforeRowUid
	}
	return ""
}

// CellUpdatedEvent represents an event for a cell being updated.
type CellUpdatedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The cell that was updated.
	Cell *Cell `protobuf:"bytes,1,opt,name=cell,proto3" json:"cell,omitempty"`
	// Whether the event is a delta update.
	// Only cells with string type can be returned in delta mode. Delta mode returns
	// only the changes made to the cell value rather than the full value.
	DeltaMode     bool `protobuf:"varint,2,opt,name=delta_mode,json=deltaMode,proto3" json:"delta_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CellUpdatedEvent) Reset() {
	*x = CellUpdatedEvent{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CellUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellUpdatedEvent) ProtoMessage() {}

func (x *CellUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellUpdatedEvent.ProtoReflect.Descriptor instead.
func (*CellUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{71}
}

func (x *CellUpdatedEvent) GetCell() *Cell {
	if x != nil {
		return x.Cell
	}
	return nil
}

func (x *CellUpdatedEvent) GetDeltaMode() bool {
	if x != nil {
		return x.DeltaMode
	}
	return false
}

// GenerateMockTableRequest represents a request to generate mock table data.
type GenerateMockTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the table to generate mock data for.
	TableUid string `protobuf:"bytes,2,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	// The number of rows to generate.
	NumRows *int32 `protobuf:"varint,3,opt,name=num_rows,json=numRows,proto3,oneof" json:"num_rows,omitempty"`
	// Whether to enable transparency for the mock data.
	EnableTransparency *bool `protobuf:"varint,4,opt,name=enable_transparency,json=enableTransparency,proto3,oneof" json:"enable_transparency,omitempty"`
	// The mode to generate mock data.
	Mode          GenerateMockTableRequest_Mode `protobuf:"varint,5,opt,name=mode,proto3,enum=agent.agent.v1alpha.GenerateMockTableRequest_Mode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateMockTableRequest) Reset() {
	*x = GenerateMockTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateMockTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMockTableRequest) ProtoMessage() {}

func (x *GenerateMockTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMockTableRequest.ProtoReflect.Descriptor instead.
func (*GenerateMockTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{72}
}

func (x *GenerateMockTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GenerateMockTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

func (x *GenerateMockTableRequest) GetNumRows() int32 {
	if x != nil && x.NumRows != nil {
		return *x.NumRows
	}
	return 0
}

func (x *GenerateMockTableRequest) GetEnableTransparency() bool {
	if x != nil && x.EnableTransparency != nil {
		return *x.EnableTransparency
	}
	return false
}

func (x *GenerateMockTableRequest) GetMode() GenerateMockTableRequest_Mode {
	if x != nil {
		return x.Mode
	}
	return GenerateMockTableRequest_MODE_UNSPECIFIED
}

// GenerateMockTableResponse is an empty response for generating mock table data.
type GenerateMockTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateMockTableResponse) Reset() {
	*x = GenerateMockTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateMockTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMockTableResponse) ProtoMessage() {}

func (x *GenerateMockTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMockTableResponse.ProtoReflect.Descriptor instead.
func (*GenerateMockTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{73}
}

// BindChatTableRequest represents a request to bind a table to a chat.
type BindChatTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the chat to bind the table to.
	ChatUid string `protobuf:"bytes,2,opt,name=chat_uid,json=chatUid,proto3" json:"chat_uid,omitempty"`
	// The UID of the table to bind to the chat.
	TableUid      string `protobuf:"bytes,3,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindChatTableRequest) Reset() {
	*x = BindChatTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindChatTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindChatTableRequest) ProtoMessage() {}

func (x *BindChatTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindChatTableRequest.ProtoReflect.Descriptor instead.
func (*BindChatTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{74}
}

func (x *BindChatTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *BindChatTableRequest) GetChatUid() string {
	if x != nil {
		return x.ChatUid
	}
	return ""
}

func (x *BindChatTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

// BindChatTableResponse is an empty response for binding a table to a chat.
type BindChatTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindChatTableResponse) Reset() {
	*x = BindChatTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindChatTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindChatTableResponse) ProtoMessage() {}

func (x *BindChatTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindChatTableResponse.ProtoReflect.Descriptor instead.
func (*BindChatTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{75}
}

// UnbindChatTableRequest represents a request to unbind a table from a chat.
type UnbindChatTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the chat to unbind the table from.
	ChatUid string `protobuf:"bytes,2,opt,name=chat_uid,json=chatUid,proto3" json:"chat_uid,omitempty"`
	// The UID of the table to unbind from the chat.
	TableUid      string `protobuf:"bytes,3,opt,name=table_uid,json=tableUid,proto3" json:"table_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbindChatTableRequest) Reset() {
	*x = UnbindChatTableRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbindChatTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindChatTableRequest) ProtoMessage() {}

func (x *UnbindChatTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindChatTableRequest.ProtoReflect.Descriptor instead.
func (*UnbindChatTableRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{76}
}

func (x *UnbindChatTableRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UnbindChatTableRequest) GetChatUid() string {
	if x != nil {
		return x.ChatUid
	}
	return ""
}

func (x *UnbindChatTableRequest) GetTableUid() string {
	if x != nil {
		return x.TableUid
	}
	return ""
}

// UnbindChatTableResponse is an empty response for unbinding a table from a chat.
type UnbindChatTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbindChatTableResponse) Reset() {
	*x = UnbindChatTableResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbindChatTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindChatTableResponse) ProtoMessage() {}

func (x *UnbindChatTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindChatTableResponse.ProtoReflect.Descriptor instead.
func (*UnbindChatTableResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{77}
}

// ListChatTablesRequest represents a request to list tables bound to a chat.
type ListChatTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the namespace that owns the table.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The UID of the chat to list tables for.
	ChatUid       string `protobuf:"bytes,2,opt,name=chat_uid,json=chatUid,proto3" json:"chat_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChatTablesRequest) Reset() {
	*x = ListChatTablesRequest{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChatTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatTablesRequest) ProtoMessage() {}

func (x *ListChatTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatTablesRequest.ProtoReflect.Descriptor instead.
func (*ListChatTablesRequest) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{78}
}

func (x *ListChatTablesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListChatTablesRequest) GetChatUid() string {
	if x != nil {
		return x.ChatUid
	}
	return ""
}

// ListChatTablesResponse contains the list of tables bound to a chat.
type ListChatTablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The tables bound to the chat.
	Tables        []*Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChatTablesResponse) Reset() {
	*x = ListChatTablesResponse{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChatTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatTablesResponse) ProtoMessage() {}

func (x *ListChatTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatTablesResponse.ProtoReflect.Descriptor instead.
func (*ListChatTablesResponse) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{79}
}

func (x *ListChatTablesResponse) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

// The configuration for the agent.
type Table_AgentConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable transparency for the table.
	EnableTransparency bool `protobuf:"varint,1,opt,name=enable_transparency,json=enableTransparency,proto3" json:"enable_transparency,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Table_AgentConfig) Reset() {
	*x = Table_AgentConfig{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table_AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table_AgentConfig) ProtoMessage() {}

func (x *Table_AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table_AgentConfig.ProtoReflect.Descriptor instead.
func (*Table_AgentConfig) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Table_AgentConfig) GetEnableTransparency() bool {
	if x != nil {
		return x.EnableTransparency
	}
	return false
}

// Permission defines how a table can be used.
type Table_Permission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines whether the table can be modified.
	CanEdit       bool `protobuf:"varint,1,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Table_Permission) Reset() {
	*x = Table_Permission{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table_Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table_Permission) ProtoMessage() {}

func (x *Table_Permission) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table_Permission.ProtoReflect.Descriptor instead.
func (*Table_Permission) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Table_Permission) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

// The configuration for the agent.
type ColumnDefinition_AgentConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The instructions for the agent.
	Instructions string `protobuf:"bytes,1,opt,name=instructions,proto3" json:"instructions,omitempty"`
	// Whether to enable web search for the column.
	EnableWebSearch bool `protobuf:"varint,2,opt,name=enable_web_search,json=enableWebSearch,proto3" json:"enable_web_search,omitempty"`
	// Whether to enable automatic computation for the column.
	EnableAutomaticComputation *bool `protobuf:"varint,3,opt,name=enable_automatic_computation,json=enableAutomaticComputation,proto3,oneof" json:"enable_automatic_computation,omitempty"`
	// The context for the agent. This setting is only used if enable_automatic_computation is true.
	Context       *ColumnDefinition_AgentConfig_Context `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnDefinition_AgentConfig) Reset() {
	*x = ColumnDefinition_AgentConfig{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDefinition_AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDefinition_AgentConfig) ProtoMessage() {}

func (x *ColumnDefinition_AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDefinition_AgentConfig.ProtoReflect.Descriptor instead.
func (*ColumnDefinition_AgentConfig) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ColumnDefinition_AgentConfig) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *ColumnDefinition_AgentConfig) GetEnableWebSearch() bool {
	if x != nil {
		return x.EnableWebSearch
	}
	return false
}

func (x *ColumnDefinition_AgentConfig) GetEnableAutomaticComputation() bool {
	if x != nil && x.EnableAutomaticComputation != nil {
		return *x.EnableAutomaticComputation
	}
	return false
}

func (x *ColumnDefinition_AgentConfig) GetContext() *ColumnDefinition_AgentConfig_Context {
	if x != nil {
		return x.Context
	}
	return nil
}

// The selection settings of the column.
type ColumnDefinition_Selection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The selection of the column.
	Type ColumnDefinition_Selection_SelectionType `protobuf:"varint,1,opt,name=type,proto3,enum=agent.agent.v1alpha.ColumnDefinition_Selection_SelectionType" json:"type,omitempty"`
	// The options for the selection.
	Options       []*ColumnDefinition_Selection_Option `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnDefinition_Selection) Reset() {
	*x = ColumnDefinition_Selection{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDefinition_Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDefinition_Selection) ProtoMessage() {}

func (x *ColumnDefinition_Selection) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDefinition_Selection.ProtoReflect.Descriptor instead.
func (*ColumnDefinition_Selection) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14, 1}
}

func (x *ColumnDefinition_Selection) GetType() ColumnDefinition_Selection_SelectionType {
	if x != nil {
		return x.Type
	}
	return ColumnDefinition_Selection_SELECTION_TYPE_UNSPECIFIED
}

func (x *ColumnDefinition_Selection) GetOptions() []*ColumnDefinition_Selection_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

// The context for the agent.
type ColumnDefinition_AgentConfig_Context struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The column uids to include in the context.
	ColumnUids    []string `protobuf:"bytes,1,rep,name=column_uids,json=columnUids,proto3" json:"column_uids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnDefinition_AgentConfig_Context) Reset() {
	*x = ColumnDefinition_AgentConfig_Context{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDefinition_AgentConfig_Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDefinition_AgentConfig_Context) ProtoMessage() {}

func (x *ColumnDefinition_AgentConfig_Context) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDefinition_AgentConfig_Context.ProtoReflect.Descriptor instead.
func (*ColumnDefinition_AgentConfig_Context) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *ColumnDefinition_AgentConfig_Context) GetColumnUids() []string {
	if x != nil {
		return x.ColumnUids
	}
	return nil
}

// An option for the selection.
type ColumnDefinition_Selection_Option struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value of the cell as a string.
	//
	// Types that are valid to be assigned to Value:
	//
	//	*ColumnDefinition_Selection_Option_StringValue
	//	*ColumnDefinition_Selection_Option_NumberValue
	Value isColumnDefinition_Selection_Option_Value `protobuf_oneof:"value"`
	// Display color of the option.
	Color         string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnDefinition_Selection_Option) Reset() {
	*x = ColumnDefinition_Selection_Option{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnDefinition_Selection_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDefinition_Selection_Option) ProtoMessage() {}

func (x *ColumnDefinition_Selection_Option) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDefinition_Selection_Option.ProtoReflect.Descriptor instead.
func (*ColumnDefinition_Selection_Option) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{14, 1, 0}
}

func (x *ColumnDefinition_Selection_Option) GetValue() isColumnDefinition_Selection_Option_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ColumnDefinition_Selection_Option) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*ColumnDefinition_Selection_Option_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *ColumnDefinition_Selection_Option) GetNumberValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*ColumnDefinition_Selection_Option_NumberValue); ok {
			return x.NumberValue
		}
	}
	return 0
}

func (x *ColumnDefinition_Selection_Option) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type isColumnDefinition_Selection_Option_Value interface {
	isColumnDefinition_Selection_Option_Value()
}

type ColumnDefinition_Selection_Option_StringValue struct {
	// The value of the cell as a string.
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ColumnDefinition_Selection_Option_NumberValue struct {
	// The value of the cell as a number.
	NumberValue float64 `protobuf:"fixed64,2,opt,name=number_value,json=numberValue,proto3,oneof"`
}

func (*ColumnDefinition_Selection_Option_StringValue) isColumnDefinition_Selection_Option_Value() {}

func (*ColumnDefinition_Selection_Option_NumberValue) isColumnDefinition_Selection_Option_Value() {}

// The transparency of the cell.
type Cell_Transparency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The text of the transparency.
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cell_Transparency) Reset() {
	*x = Cell_Transparency{}
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cell_Transparency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cell_Transparency) ProtoMessage() {}

func (x *Cell_Transparency) ProtoReflect() protoreflect.Message {
	mi := &file_agent_agent_v1alpha_table_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cell_Transparency.ProtoReflect.Descriptor instead.
func (*Cell_Transparency) Descriptor() ([]byte, []int) {
	return file_agent_agent_v1alpha_table_proto_rawDescGZIP(), []int{23, 0}
}

func (x *Cell_Transparency) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_agent_agent_v1alpha_table_proto protoreflect.FileDescriptor

const file_agent_agent_v1alpha_table_proto_rawDesc = "" +
	"\n" +
	"\x1fagent/agent/v1alpha/table.proto\x12\x13agent.agent.v1alpha\x1a agent/agent/v1alpha/common.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8a\x05\n" +
	"\x05Table\x12\x15\n" +
	"\x03uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x03uid\x12\x19\n" +
	"\x05title\x18\x03 \x01(\tB\x03\xe0A\x01R\x05title\x12%\n" +
	"\vdescription\x18\x04 \x01(\tB\x03\xe0A\x01R\vdescription\x128\n" +
	"\bmetadata\x18\x05 \x01(\v2\x17.google.protobuf.StructB\x03\xe0A\x01R\bmetadata\x12@\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12@\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime\x12N\n" +
	"\fagent_config\x18\b \x01(\v2&.agent.agent.v1alpha.Table.AgentConfigB\x03\xe0A\x02R\vagentConfig\x12'\n" +
	"\n" +
	"draft_mode\x18\t \x01(\bB\x03\xe0A\x01H\x00R\tdraftMode\x88\x01\x01\x12J\n" +
	"\n" +
	"permission\x18\n" +
	" \x01(\v2%.agent.agent.v1alpha.Table.PermissionB\x03\xe0A\x03R\n" +
	"permission\x12\"\n" +
	"\n" +
	"catalog_id\x18\v \x01(\tB\x03\xe0A\x03R\tcatalogId\x1aC\n" +
	"\vAgentConfig\x124\n" +
	"\x13enable_transparency\x18\x01 \x01(\bB\x03\xe0A\x02R\x12enableTransparency\x1a'\n" +
	"\n" +
	"Permission\x12\x19\n" +
	"\bcan_edit\x18\x01 \x01(\bR\acanEditB\r\n" +
	"\v_draft_modeJ\x04\b\x02\x10\x03\"\xeb\x01\n" +
	"\x1eCreateTableFromTemplateRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x125\n" +
	"\x05table\x18\x02 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x02R\x05table\x127\n" +
	"\x15template_namespace_id\x18\x03 \x01(\tB\x03\xe0A\x02R\x13templateNamespaceId\x121\n" +
	"\x12template_table_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\x10templateTableUid\"X\n" +
	"\x1fCreateTableFromTemplateResponse\x125\n" +
	"\x05table\x18\x01 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x05table\"\x81\x01\n" +
	"\x11ListTablesRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\x03\xe0A\x01R\tpageToken\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x05B\x03\xe0A\x01R\bpageSize\"\x9e\x01\n" +
	"\x12ListTablesResponse\x127\n" +
	"\x06tables\x18\x01 \x03(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x06tables\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\x03\xe0A\x03R\rnextPageToken\x12\"\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05B\x03\xe0A\x03R\ttotalSize\"s\n" +
	"\x12CreateTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x125\n" +
	"\x05table\x18\x02 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x02R\x05table\"L\n" +
	"\x13CreateTableResponse\x125\n" +
	"\x05table\x18\x01 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x05table\"[\n" +
	"\x0fGetTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\"I\n" +
	"\x10GetTableResponse\x125\n" +
	"\x05table\x18\x01 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x05table\"\xd2\x01\n" +
	"\x12UpdateTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x120\n" +
	"\x05table\x18\x03 \x01(\v2\x1a.agent.agent.v1alpha.TableR\x05table\x12@\n" +
	"\vupdate_mask\x18\x04 \x01(\v2\x1a.google.protobuf.FieldMaskB\x03\xe0A\x02R\n" +
	"updateMask\"L\n" +
	"\x13UpdateTableResponse\x125\n" +
	"\x05table\x18\x01 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x05table\"^\n" +
	"\x12DeleteTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\"\x15\n" +
	"\x13DeleteTableResponse\"\x9e\x02\n" +
	"\fNumberFormat\x12E\n" +
	"\x06format\x18\x01 \x01(\x0e2(.agent.agent.v1alpha.NumberFormat.FormatB\x03\xe0A\x02R\x06format\x12*\n" +
	"\x0edecimal_places\x18\x02 \x01(\x05B\x03\xe0A\x01R\rdecimalPlaces\x12(\n" +
	"\rcurrency_code\x18\x03 \x01(\tB\x03\xe0A\x01R\fcurrencyCode\"q\n" +
	"\x06Format\x12\x16\n" +
	"\x12FORMAT_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fFORMAT_PLAIN\x10\x01\x12\x11\n" +
	"\rFORMAT_COMMAS\x10\x02\x12\x13\n" +
	"\x0fFORMAT_CURRENCY\x10\x03\x12\x15\n" +
	"\x11FORMAT_PERCENTAGE\x10\x04\"\x9a\v\n" +
	"\x10ColumnDefinition\x12\"\n" +
	"\n" +
	"column_uid\x18\x01 \x01(\tB\x03\xe0A\x03R\tcolumnUid\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x01R\x04name\x122\n" +
	"\x04type\x18\x03 \x01(\x0e2\x19.agent.agent.v1alpha.TypeB\x03\xe0A\x02R\x04type\x12\x19\n" +
	"\x05order\x18\x04 \x01(\x05B\x03\xe0A\x02R\x05order\x12Y\n" +
	"\fagent_config\x18\x05 \x01(\v21.agent.agent.v1alpha.ColumnDefinition.AgentConfigB\x03\xe0A\x01R\vagentConfig\x12C\n" +
	"\x04sort\x18\x06 \x01(\x0e2*.agent.agent.v1alpha.ColumnDefinition.SortB\x03\xe0A\x01R\x04sort\x12%\n" +
	"\vdescription\x18\a \x01(\tB\x03\xe0A\x01R\vdescription\x12M\n" +
	"\rnumber_format\x18\b \x01(\v2!.agent.agent.v1alpha.NumberFormatB\x03\xe0A\x01H\x00R\fnumberFormat\x12R\n" +
	"\tselection\x18\t \x01(\v2/.agent.agent.v1alpha.ColumnDefinition.SelectionB\x03\xe0A\x01R\tselection\x128\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x17.google.protobuf.StructB\x03\xe0A\x01R\bmetadata\x1a\xdf\x02\n" +
	"\vAgentConfig\x12'\n" +
	"\finstructions\x18\x01 \x01(\tB\x03\xe0A\x02R\finstructions\x12/\n" +
	"\x11enable_web_search\x18\x02 \x01(\bB\x03\xe0A\x02R\x0fenableWebSearch\x12J\n" +
	"\x1cenable_automatic_computation\x18\x03 \x01(\bB\x03\xe0A\x01H\x00R\x1aenableAutomaticComputation\x88\x01\x01\x12X\n" +
	"\acontext\x18\x04 \x01(\v29.agent.agent.v1alpha.ColumnDefinition.AgentConfig.ContextB\x03\xe0A\x01R\acontext\x1a/\n" +
	"\aContext\x12$\n" +
	"\vcolumn_uids\x18\x01 \x03(\tB\x03\xe0A\x01R\n" +
	"columnUidsB\x1f\n" +
	"\x1d_enable_automatic_computation\x1a\xa2\x03\n" +
	"\tSelection\x12V\n" +
	"\x04type\x18\x01 \x01(\x0e2=.agent.agent.v1alpha.ColumnDefinition.Selection.SelectionTypeB\x03\xe0A\x02R\x04type\x12U\n" +
	"\aoptions\x18\x02 \x03(\v26.agent.agent.v1alpha.ColumnDefinition.Selection.OptionB\x03\xe0A\x01R\aoptions\x1a\x80\x01\n" +
	"\x06Option\x12(\n" +
	"\fstring_value\x18\x01 \x01(\tB\x03\xe0A\x01H\x00R\vstringValue\x12(\n" +
	"\fnumber_value\x18\x02 \x01(\x01B\x03\xe0A\x01H\x00R\vnumberValue\x12\x19\n" +
	"\x05color\x18\x03 \x01(\tB\x03\xe0A\x01R\x05colorB\a\n" +
	"\x05value\"c\n" +
	"\rSelectionType\x12\x1e\n" +
	"\x1aSELECTION_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13SELECTION_TYPE_NONE\x10\x01\x12\x19\n" +
	"\x15SELECTION_TYPE_SINGLE\x10\x02\"E\n" +
	"\x04Sort\x12\x14\n" +
	"\x10SORT_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSORT_ASCENDING\x10\x01\x12\x13\n" +
	"\x0fSORT_DESCENDING\x10\x02B\b\n" +
	"\x06format\"g\n" +
	"\x1bGetColumnDefinitionsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\"\x89\x02\n" +
	"\x1cGetColumnDefinitionsResponse\x12|\n" +
	"\x12column_definitions\x18\x01 \x03(\v2H.agent.agent.v1alpha.GetColumnDefinitionsResponse.ColumnDefinitionsEntryB\x03\xe0A\x03R\x11columnDefinitions\x1ak\n" +
	"\x16ColumnDefinitionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.agent.agent.v1alpha.ColumnDefinitionR\x05value:\x028\x01\"\xd2\x02\n" +
	"\x1eUpdateColumnDefinitionsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12y\n" +
	"\x12column_definitions\x18\x03 \x03(\v2J.agent.agent.v1alpha.UpdateColumnDefinitionsRequest.ColumnDefinitionsEntryR\x11columnDefinitions\x1ak\n" +
	"\x16ColumnDefinitionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.agent.agent.v1alpha.ColumnDefinitionR\x05value:\x028\x01\"\x8f\x02\n" +
	"\x1fUpdateColumnDefinitionsResponse\x12\x7f\n" +
	"\x12column_definitions\x18\x01 \x03(\v2K.agent.agent.v1alpha.UpdateColumnDefinitionsResponse.ColumnDefinitionsEntryB\x03\xe0A\x03R\x11columnDefinitions\x1ak\n" +
	"\x16ColumnDefinitionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.agent.agent.v1alpha.ColumnDefinitionR\x05value:\x028\x01\"\x8a\x01\n" +
	"\x1aGetColumnDefinitionRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\"\n" +
	"\n" +
	"column_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\tcolumnUid\"v\n" +
	"\x1bGetColumnDefinitionResponse\x12W\n" +
	"\x11column_definition\x18\x01 \x01(\v2%.agent.agent.v1alpha.ColumnDefinitionB\x03\xe0A\x03R\x10columnDefinition\"\x86\x01\n" +
	"\x16RecomputeColumnRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\"\n" +
	"\n" +
	"column_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\tcolumnUid\"\x19\n" +
	"\x17RecomputeColumnResponse\"\xd0\a\n" +
	"\x04Cell\x12\x15\n" +
	"\x03uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x03uid\x12\"\n" +
	"\n" +
	"column_uid\x18\x02 \x01(\tB\x03\xe0A\x03R\tcolumnUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x03R\x06rowUid\x12@\n" +
	"\vupdate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime\x122\n" +
	"\x04type\x18\x05 \x01(\x0e2\x19.agent.agent.v1alpha.TypeB\x03\xe0A\x03R\x04type\x12I\n" +
	"\fstring_value\x18\x06 \x01(\v2\x1f.agent.agent.v1alpha.StringCellB\x03\xe0A\x01H\x00R\vstringValue\x12I\n" +
	"\fnumber_value\x18\a \x01(\v2\x1f.agent.agent.v1alpha.NumberCellB\x03\xe0A\x01H\x00R\vnumberValue\x12L\n" +
	"\rboolean_value\x18\b \x01(\v2 .agent.agent.v1alpha.BooleanCellB\x03\xe0A\x01H\x00R\fbooleanValue\x12C\n" +
	"\n" +
	"file_value\x18\t \x01(\v2\x1d.agent.agent.v1alpha.FileCellB\x03\xe0A\x01H\x00R\tfileValue\x12O\n" +
	"\x0edocument_value\x18\n" +
	" \x01(\v2!.agent.agent.v1alpha.DocumentCellB\x03\xe0A\x01H\x00R\rdocumentValue\x128\n" +
	"\bmetadata\x18\v \x01(\v2\x17.google.protobuf.StructB\x03\xe0A\x01R\bmetadata\x12<\n" +
	"\x06status\x18\f \x01(\x0e2\x1f.agent.agent.v1alpha.CellStatusB\x03\xe0A\x03R\x06status\x12@\n" +
	"\tcitations\x18\x0e \x03(\v2\x1d.agent.agent.v1alpha.CitationB\x03\xe0A\x03R\tcitations\x12O\n" +
	"\ftransparency\x18\r \x01(\v2&.agent.agent.v1alpha.Cell.TransparencyB\x03\xe0A\x03R\ftransparency\x12B\n" +
	"\n" +
	"lock_state\x18\x0f \x01(\x0e2\x1e.agent.agent.v1alpha.LockStateB\x03\xe0A\x03R\tlockState\x1a'\n" +
	"\fTransparency\x12\x17\n" +
	"\x04text\x18\x01 \x01(\tB\x03\xe0A\x03R\x04textB\a\n" +
	"\x05value\"\n" +
	"\n" +
	"\bNullCell\"\x8e\x01\n" +
	"\n" +
	"StringCell\x12'\n" +
	"\n" +
	"user_input\x18\x02 \x01(\tB\x03\xe0A\x01H\x00R\tuserInput\x88\x01\x01\x12/\n" +
	"\x0ecomputed_value\x18\x03 \x01(\tB\x03\xe0A\x01H\x01R\rcomputedValue\x88\x01\x01B\r\n" +
	"\v_user_inputB\x11\n" +
	"\x0f_computed_valueJ\x04\b\x01\x10\x02\"\x8e\x01\n" +
	"\n" +
	"NumberCell\x12'\n" +
	"\n" +
	"user_input\x18\x02 \x01(\x01B\x03\xe0A\x01H\x00R\tuserInput\x88\x01\x01\x12/\n" +
	"\x0ecomputed_value\x18\x03 \x01(\x01B\x03\xe0A\x03H\x01R\rcomputedValue\x88\x01\x01B\r\n" +
	"\v_user_inputB\x11\n" +
	"\x0f_computed_valueJ\x04\b\x01\x10\x02\"\x8f\x01\n" +
	"\vBooleanCell\x12'\n" +
	"\n" +
	"user_input\x18\x02 \x01(\bB\x03\xe0A\x01H\x00R\tuserInput\x88\x01\x01\x12/\n" +
	"\x0ecomputed_value\x18\x03 \x01(\bB\x03\xe0A\x03H\x01R\rcomputedValue\x88\x01\x01B\r\n" +
	"\v_user_inputB\x11\n" +
	"\x0f_computed_valueJ\x04\b\x01\x10\x02\"\xf0\x01\n" +
	"\bFileCell\x12!\n" +
	"\tnamespace\x18\x01 \x01(\tB\x03\xe0A\x03R\tnamespace\x12\x1e\n" +
	"\bfile_uid\x18\x02 \x01(\tB\x03\xe0A\x03R\afileUid\x12\"\n" +
	"\n" +
	"object_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\tobjectUid\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tB\x03\xe0A\x03R\x04name\x12 \n" +
	"\tmime_type\x18\x05 \x01(\tB\x03\xe0A\x03R\bmimeType\x12\"\n" +
	"\n" +
	"catalog_id\x18\x06 \x01(\tB\x03\xe0A\x03R\tcatalogId\x12\x1e\n" +
	"\bfile_url\x18\a \x01(\tB\x03\xe0A\x03R\afileUrl\"\xb0\x01\n" +
	"\fDocumentCell\x12!\n" +
	"\tnamespace\x18\x01 \x01(\tB\x03\xe0A\x02R\tnamespace\x12\x1e\n" +
	"\bfile_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\afileUid\x12\"\n" +
	"\n" +
	"object_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\tobjectUid\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\tmime_type\x18\x05 \x01(\tB\x03\xe0A\x02R\bmimeType\"\xd0\x02\n" +
	"\x03Row\x12\x15\n" +
	"\x03uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x03uid\x12>\n" +
	"\x05cells\x18\x02 \x03(\v2#.agent.agent.v1alpha.Row.CellsEntryB\x03\xe0A\x02R\x05cells\x12\x19\n" +
	"\x05order\x18\x03 \x01(\x05B\x03\xe0A\x03R\x05order\x12@\n" +
	"\vcreate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12@\n" +
	"\vupdate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime\x1aS\n" +
	"\n" +
	"CellsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.agent.agent.v1alpha.CellR\x05value:\x028\x01\"\xad\x01\n" +
	"\x0fListRowsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12 \n" +
	"\tpage_size\x18\x05 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x06 \x01(\tB\x03\xe0A\x01R\tpageTokenJ\x04\b\x03\x10\x04J\x04\b\x04\x10\x05\"\x96\x01\n" +
	"\x10ListRowsResponse\x121\n" +
	"\x04rows\x18\x01 \x03(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x04rows\x12+\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\x03\xe0A\x03R\rnextPageToken\x12\"\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05B\x03\xe0A\x03R\ttotalSize\"\xcb\x01\n" +
	"\x10InsertRowRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12*\n" +
	"\x03row\x18\x03 \x01(\v2\x18.agent.agent.v1alpha.RowR\x03row\x12.\n" +
	"\x0ebefore_row_uid\x18\x04 \x01(\tB\x03\xe0A\x01H\x00R\fbeforeRowUid\x88\x01\x01B\x11\n" +
	"\x0f_before_row_uid\"D\n" +
	"\x11InsertRowResponse\x12/\n" +
	"\x03row\x18\x01 \x01(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x03row\"\xa6\x01\n" +
	"\x10UpdateRowRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12*\n" +
	"\x03row\x18\x04 \x01(\v2\x18.agent.agent.v1alpha.RowR\x03row\"D\n" +
	"\x11UpdateRowResponse\x12/\n" +
	"\x03row\x18\x01 \x01(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x03row\"w\n" +
	"\rGetRowRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\"A\n" +
	"\x0eGetRowResponse\x12/\n" +
	"\x03row\x18\x01 \x01(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x03row\"\x8b\x01\n" +
	"\x11UpdateRowsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12,\n" +
	"\x04rows\x18\x03 \x03(\v2\x18.agent.agent.v1alpha.RowR\x04rows\"G\n" +
	"\x12UpdateRowsResponse\x121\n" +
	"\x04rows\x18\x01 \x03(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x04rows\"z\n" +
	"\x10DeleteRowRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\"\x13\n" +
	"\x11DeleteRowResponse\"}\n" +
	"\x11DeleteRowsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1e\n" +
	"\brow_uids\x18\x03 \x03(\tB\x03\xe0A\x02R\arowUids\"\x14\n" +
	"\x12DeleteRowsResponse\"\xbe\x01\n" +
	"\x0fMoveRowsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1e\n" +
	"\brow_uids\x18\x03 \x03(\tB\x03\xe0A\x02R\arowUids\x12.\n" +
	"\x0ebefore_row_uid\x18\x04 \x01(\tB\x03\xe0A\x01H\x00R\fbeforeRowUid\x88\x01\x01B\x11\n" +
	"\x0f_before_row_uid\"\x12\n" +
	"\x10MoveRowsResponse\"\x98\x01\n" +
	"\x0eGetCellRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12\x1e\n" +
	"\bcell_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\acellUid\"E\n" +
	"\x0fGetCellResponse\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\"\xca\x01\n" +
	"\x11UpdateCellRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12\x1e\n" +
	"\bcell_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\acellUid\x12-\n" +
	"\x04cell\x18\x05 \x01(\v2\x19.agent.agent.v1alpha.CellR\x04cell\"H\n" +
	"\x12UpdateCellResponse\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\"\x9e\x01\n" +
	"\x14RecomputeCellRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12\x1e\n" +
	"\bcell_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\acellUid\"K\n" +
	"\x15RecomputeCellResponse\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\"\x9a\x01\n" +
	"\x10ResetCellRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12\x1e\n" +
	"\bcell_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\acellUid\"G\n" +
	"\x11ResetCellResponse\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\"\x99\x01\n" +
	"\x0fLockCellRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12\x1e\n" +
	"\bcell_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\acellUid\"F\n" +
	"\x10LockCellResponse\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\"\x9b\x01\n" +
	"\x11UnlockCellRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12\x1c\n" +
	"\arow_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\x06rowUid\x12\x1e\n" +
	"\bcell_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\acellUid\"H\n" +
	"\x12UnlockCellResponse\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\"\x9e\x01\n" +
	"\x12ExportTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12>\n" +
	"\x06format\x18\x03 \x01(\x0e2!.agent.agent.v1alpha.ExportFormatB\x03\xe0A\x02R\x06format\".\n" +
	"\x13ExportTableResponse\x12\x17\n" +
	"\x04data\x18\x01 \x01(\fB\x03\xe0A\x03R\x04data\"a\n" +
	"\x15GetTableEventsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\"T\n" +
	"\x16GetTableEventsResponse\x12:\n" +
	"\x05event\x18\x01 \x01(\v2\x1f.agent.agent.v1alpha.TableEventB\x03\xe0A\x03R\x05event\"\x9e\x06\n" +
	"\n" +
	"TableEvent\x12\x19\n" +
	"\x05event\x18\x01 \x01(\tB\x03\xe0A\x03R\x05event\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x03R\x02id\x12X\n" +
	"\x13table_updated_event\x18\x03 \x01(\v2&.agent.agent.v1alpha.TableUpdatedEventH\x00R\x11tableUpdatedEvent\x12X\n" +
	"\x13table_deleted_event\x18\x04 \x01(\v2&.agent.agent.v1alpha.TableDeletedEventH\x00R\x11tableDeletedEvent\x12}\n" +
	" column_definitions_updated_event\x18\x05 \x01(\v22.agent.agent.v1alpha.ColumnDefinitionsUpdatedEventH\x00R\x1dcolumnDefinitionsUpdatedEvent\x12U\n" +
	"\x12row_inserted_event\x18\x06 \x01(\v2%.agent.agent.v1alpha.RowInsertedEventH\x00R\x10rowInsertedEvent\x12R\n" +
	"\x11row_updated_event\x18\a \x01(\v2$.agent.agent.v1alpha.RowUpdatedEventH\x00R\x0frowUpdatedEvent\x12R\n" +
	"\x11row_deleted_event\x18\b \x01(\v2$.agent.agent.v1alpha.RowDeletedEventH\x00R\x0frowDeletedEvent\x12O\n" +
	"\x10rows_moved_event\x18\t \x01(\v2#.agent.agent.v1alpha.RowsMovedEventH\x00R\x0erowsMovedEvent\x12U\n" +
	"\x12cell_updated_event\x18\n" +
	" \x01(\v2%.agent.agent.v1alpha.CellUpdatedEventH\x00R\x10cellUpdatedEventB\x06\n" +
	"\x04data\"J\n" +
	"\x11TableUpdatedEvent\x125\n" +
	"\x05table\x18\x01 \x01(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x05table\"\x13\n" +
	"\x11TableDeletedEvent\"\x8b\x02\n" +
	"\x1dColumnDefinitionsUpdatedEvent\x12}\n" +
	"\x12column_definitions\x18\x01 \x03(\v2I.agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent.ColumnDefinitionsEntryB\x03\xe0A\x03R\x11columnDefinitions\x1ak\n" +
	"\x16ColumnDefinitionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.agent.agent.v1alpha.ColumnDefinitionR\x05value:\x028\x01\"n\n" +
	"\x10RowInsertedEvent\x12/\n" +
	"\x03row\x18\x01 \x01(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x03row\x12)\n" +
	"\x0ebefore_row_uid\x18\x02 \x01(\tB\x03\xe0A\x03R\fbeforeRowUid\"B\n" +
	"\x0fRowUpdatedEvent\x12/\n" +
	"\x03row\x18\x01 \x01(\v2\x18.agent.agent.v1alpha.RowB\x03\xe0A\x03R\x03row\"/\n" +
	"\x0fRowDeletedEvent\x12\x1c\n" +
	"\arow_uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x06rowUid\"s\n" +
	"\x0eRowsMovedEvent\x12\x1e\n" +
	"\brow_uids\x18\x01 \x03(\tB\x03\xe0A\x03R\arowUids\x12.\n" +
	"\x0ebefore_row_uid\x18\x02 \x01(\tB\x03\xe0A\x03H\x00R\fbeforeRowUid\x88\x01\x01B\x11\n" +
	"\x0f_before_row_uid\"j\n" +
	"\x10CellUpdatedEvent\x122\n" +
	"\x04cell\x18\x01 \x01(\v2\x19.agent.agent.v1alpha.CellB\x03\xe0A\x03R\x04cell\x12\"\n" +
	"\n" +
	"delta_mode\x18\x02 \x01(\bB\x03\xe0A\x03R\tdeltaMode\"\xf3\x02\n" +
	"\x18GenerateMockTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12 \n" +
	"\ttable_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\btableUid\x12#\n" +
	"\bnum_rows\x18\x03 \x01(\x05B\x03\xe0A\x01H\x00R\anumRows\x88\x01\x01\x129\n" +
	"\x13enable_transparency\x18\x04 \x01(\bB\x03\xe0A\x01H\x01R\x12enableTransparency\x88\x01\x01\x12K\n" +
	"\x04mode\x18\x05 \x01(\x0e22.agent.agent.v1alpha.GenerateMockTableRequest.ModeB\x03\xe0A\x01R\x04mode\";\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tMODE_FILE\x10\x01\x12\x0e\n" +
	"\n" +
	"MODE_SHEET\x10\x02B\v\n" +
	"\t_num_rowsB\x16\n" +
	"\x14_enable_transparency\"\x1b\n" +
	"\x19GenerateMockTableResponse\"\x80\x01\n" +
	"\x14BindChatTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\x1e\n" +
	"\bchat_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\achatUid\x12 \n" +
	"\ttable_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\btableUid\"\x17\n" +
	"\x15BindChatTableResponse\"\x82\x01\n" +
	"\x16UnbindChatTableRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\x1e\n" +
	"\bchat_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\achatUid\x12 \n" +
	"\ttable_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\btableUid\"\x19\n" +
	"\x17UnbindChatTableResponse\"_\n" +
	"\x15ListChatTablesRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\x1e\n" +
	"\bchat_uid\x18\x02 \x01(\tB\x03\xe0A\x02R\achatUid\"Q\n" +
	"\x16ListChatTablesResponse\x127\n" +
	"\x06tables\x18\x01 \x03(\v2\x1a.agent.agent.v1alpha.TableB\x03\xe0A\x03R\x06tables*r\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vTYPE_STRING\x10\x01\x12\x0f\n" +
	"\vTYPE_NUMBER\x10\x02\x12\x10\n" +
	"\fTYPE_BOOLEAN\x10\x03\x12\r\n" +
	"\tTYPE_FILE\x10\x04\x12\x11\n" +
	"\rTYPE_DOCUMENT\x10\x05*\xaf\x02\n" +
	"\n" +
	"CellStatus\x12\x1b\n" +
	"\x17CELL_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10CELL_STATUS_IDLE\x10\x01\x12\x1e\n" +
	"\x1aCELL_STATUS_DATA_UPLOADING\x10\x02\x12\x1c\n" +
	"\x18CELL_STATUS_DATA_PENDING\x10\x03\x12\x1f\n" +
	"\x1bCELL_STATUS_DATA_PROCESSING\x10\x04\x12\x1b\n" +
	"\x17CELL_STATUS_DATA_FAILED\x10\x05\x12$\n" +
	" CELL_STATUS_TRANSPARENCY_PENDING\x10\x06\x12'\n" +
	"#CELL_STATUS_TRANSPARENCY_PROCESSING\x10\a\x12#\n" +
	"\x1fCELL_STATUS_TRANSPARENCY_FAILED\x10\b*W\n" +
	"\tLockState\x12\x1a\n" +
	"\x16LOCK_STATE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11LOCK_STATE_LOCKED\x10\x01\x12\x17\n" +
	"\x13LOCK_STATE_UNLOCKED\x10\x02*_\n" +
	"\fExportFormat\x12\x1d\n" +
	"\x19EXPORT_FORMAT_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11EXPORT_FORMAT_CSV\x10\x01\x12\x19\n" +
	"\x15EXPORT_FORMAT_PARQUET\x10\x02B\xd7\x01\n" +
	"\x17com.agent.agent.v1alphaB\n" +
	"TableProtoP\x01ZBgithub.com/instill-ai/protogen-go/agent/agent/v1alpha;agentv1alpha\xa2\x02\x03AAX\xaa\x02\x13Agent.Agent.V1alpha\xca\x02\x13Agent\\Agent\\V1alpha\xe2\x02\x1fAgent\\Agent\\V1alpha\\GPBMetadata\xea\x02\x15Agent::Agent::V1alphab\x06proto3"

var (
	file_agent_agent_v1alpha_table_proto_rawDescOnce sync.Once
	file_agent_agent_v1alpha_table_proto_rawDescData []byte
)

func file_agent_agent_v1alpha_table_proto_rawDescGZIP() []byte {
	file_agent_agent_v1alpha_table_proto_rawDescOnce.Do(func() {
		file_agent_agent_v1alpha_table_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_agent_v1alpha_table_proto_rawDesc), len(file_agent_agent_v1alpha_table_proto_rawDesc)))
	})
	return file_agent_agent_v1alpha_table_proto_rawDescData
}

var file_agent_agent_v1alpha_table_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_agent_agent_v1alpha_table_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_agent_agent_v1alpha_table_proto_goTypes = []any{
	(Type)(0),                  // 0: agent.agent.v1alpha.Type
	(CellStatus)(0),            // 1: agent.agent.v1alpha.CellStatus
	(LockState)(0),             // 2: agent.agent.v1alpha.LockState
	(ExportFormat)(0),          // 3: agent.agent.v1alpha.ExportFormat
	(NumberFormat_Format)(0),   // 4: agent.agent.v1alpha.NumberFormat.Format
	(ColumnDefinition_Sort)(0), // 5: agent.agent.v1alpha.ColumnDefinition.Sort
	(ColumnDefinition_Selection_SelectionType)(0), // 6: agent.agent.v1alpha.ColumnDefinition.Selection.SelectionType
	(GenerateMockTableRequest_Mode)(0),            // 7: agent.agent.v1alpha.GenerateMockTableRequest.Mode
	(*Table)(nil),                                 // 8: agent.agent.v1alpha.Table
	(*CreateTableFromTemplateRequest)(nil),        // 9: agent.agent.v1alpha.CreateTableFromTemplateRequest
	(*CreateTableFromTemplateResponse)(nil),       // 10: agent.agent.v1alpha.CreateTableFromTemplateResponse
	(*ListTablesRequest)(nil),                     // 11: agent.agent.v1alpha.ListTablesRequest
	(*ListTablesResponse)(nil),                    // 12: agent.agent.v1alpha.ListTablesResponse
	(*CreateTableRequest)(nil),                    // 13: agent.agent.v1alpha.CreateTableRequest
	(*CreateTableResponse)(nil),                   // 14: agent.agent.v1alpha.CreateTableResponse
	(*GetTableRequest)(nil),                       // 15: agent.agent.v1alpha.GetTableRequest
	(*GetTableResponse)(nil),                      // 16: agent.agent.v1alpha.GetTableResponse
	(*UpdateTableRequest)(nil),                    // 17: agent.agent.v1alpha.UpdateTableRequest
	(*UpdateTableResponse)(nil),                   // 18: agent.agent.v1alpha.UpdateTableResponse
	(*DeleteTableRequest)(nil),                    // 19: agent.agent.v1alpha.DeleteTableRequest
	(*DeleteTableResponse)(nil),                   // 20: agent.agent.v1alpha.DeleteTableResponse
	(*NumberFormat)(nil),                          // 21: agent.agent.v1alpha.NumberFormat
	(*ColumnDefinition)(nil),                      // 22: agent.agent.v1alpha.ColumnDefinition
	(*GetColumnDefinitionsRequest)(nil),           // 23: agent.agent.v1alpha.GetColumnDefinitionsRequest
	(*GetColumnDefinitionsResponse)(nil),          // 24: agent.agent.v1alpha.GetColumnDefinitionsResponse
	(*UpdateColumnDefinitionsRequest)(nil),        // 25: agent.agent.v1alpha.UpdateColumnDefinitionsRequest
	(*UpdateColumnDefinitionsResponse)(nil),       // 26: agent.agent.v1alpha.UpdateColumnDefinitionsResponse
	(*GetColumnDefinitionRequest)(nil),            // 27: agent.agent.v1alpha.GetColumnDefinitionRequest
	(*GetColumnDefinitionResponse)(nil),           // 28: agent.agent.v1alpha.GetColumnDefinitionResponse
	(*RecomputeColumnRequest)(nil),                // 29: agent.agent.v1alpha.RecomputeColumnRequest
	(*RecomputeColumnResponse)(nil),               // 30: agent.agent.v1alpha.RecomputeColumnResponse
	(*Cell)(nil),                                  // 31: agent.agent.v1alpha.Cell
	(*NullCell)(nil),                              // 32: agent.agent.v1alpha.NullCell
	(*StringCell)(nil),                            // 33: agent.agent.v1alpha.StringCell
	(*NumberCell)(nil),                            // 34: agent.agent.v1alpha.NumberCell
	(*BooleanCell)(nil),                           // 35: agent.agent.v1alpha.BooleanCell
	(*FileCell)(nil),                              // 36: agent.agent.v1alpha.FileCell
	(*DocumentCell)(nil),                          // 37: agent.agent.v1alpha.DocumentCell
	(*Row)(nil),                                   // 38: agent.agent.v1alpha.Row
	(*ListRowsRequest)(nil),                       // 39: agent.agent.v1alpha.ListRowsRequest
	(*ListRowsResponse)(nil),                      // 40: agent.agent.v1alpha.ListRowsResponse
	(*InsertRowRequest)(nil),                      // 41: agent.agent.v1alpha.InsertRowRequest
	(*InsertRowResponse)(nil),                     // 42: agent.agent.v1alpha.InsertRowResponse
	(*UpdateRowRequest)(nil),                      // 43: agent.agent.v1alpha.UpdateRowRequest
	(*UpdateRowResponse)(nil),                     // 44: agent.agent.v1alpha.UpdateRowResponse
	(*GetRowRequest)(nil),                         // 45: agent.agent.v1alpha.GetRowRequest
	(*GetRowResponse)(nil),                        // 46: agent.agent.v1alpha.GetRowResponse
	(*UpdateRowsRequest)(nil),                     // 47: agent.agent.v1alpha.UpdateRowsRequest
	(*UpdateRowsResponse)(nil),                    // 48: agent.agent.v1alpha.UpdateRowsResponse
	(*DeleteRowRequest)(nil),                      // 49: agent.agent.v1alpha.DeleteRowRequest
	(*DeleteRowResponse)(nil),                     // 50: agent.agent.v1alpha.DeleteRowResponse
	(*DeleteRowsRequest)(nil),                     // 51: agent.agent.v1alpha.DeleteRowsRequest
	(*DeleteRowsResponse)(nil),                    // 52: agent.agent.v1alpha.DeleteRowsResponse
	(*MoveRowsRequest)(nil),                       // 53: agent.agent.v1alpha.MoveRowsRequest
	(*MoveRowsResponse)(nil),                      // 54: agent.agent.v1alpha.MoveRowsResponse
	(*GetCellRequest)(nil),                        // 55: agent.agent.v1alpha.GetCellRequest
	(*GetCellResponse)(nil),                       // 56: agent.agent.v1alpha.GetCellResponse
	(*UpdateCellRequest)(nil),                     // 57: agent.agent.v1alpha.UpdateCellRequest
	(*UpdateCellResponse)(nil),                    // 58: agent.agent.v1alpha.UpdateCellResponse
	(*RecomputeCellRequest)(nil),                  // 59: agent.agent.v1alpha.RecomputeCellRequest
	(*RecomputeCellResponse)(nil),                 // 60: agent.agent.v1alpha.RecomputeCellResponse
	(*ResetCellRequest)(nil),                      // 61: agent.agent.v1alpha.ResetCellRequest
	(*ResetCellResponse)(nil),                     // 62: agent.agent.v1alpha.ResetCellResponse
	(*LockCellRequest)(nil),                       // 63: agent.agent.v1alpha.LockCellRequest
	(*LockCellResponse)(nil),                      // 64: agent.agent.v1alpha.LockCellResponse
	(*UnlockCellRequest)(nil),                     // 65: agent.agent.v1alpha.UnlockCellRequest
	(*UnlockCellResponse)(nil),                    // 66: agent.agent.v1alpha.UnlockCellResponse
	(*ExportTableRequest)(nil),                    // 67: agent.agent.v1alpha.ExportTableRequest
	(*ExportTableResponse)(nil),                   // 68: agent.agent.v1alpha.ExportTableResponse
	(*GetTableEventsRequest)(nil),                 // 69: agent.agent.v1alpha.GetTableEventsRequest
	(*GetTableEventsResponse)(nil),                // 70: agent.agent.v1alpha.GetTableEventsResponse
	(*TableEvent)(nil),                            // 71: agent.agent.v1alpha.TableEvent
	(*TableUpdatedEvent)(nil),                     // 72: agent.agent.v1alpha.TableUpdatedEvent
	(*TableDeletedEvent)(nil),                     // 73: agent.agent.v1alpha.TableDeletedEvent
	(*ColumnDefinitionsUpdatedEvent)(nil),         // 74: agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent
	(*RowInsertedEvent)(nil),                      // 75: agent.agent.v1alpha.RowInsertedEvent
	(*RowUpdatedEvent)(nil),                       // 76: agent.agent.v1alpha.RowUpdatedEvent
	(*RowDeletedEvent)(nil),                       // 77: agent.agent.v1alpha.RowDeletedEvent
	(*RowsMovedEvent)(nil),                        // 78: agent.agent.v1alpha.RowsMovedEvent
	(*CellUpdatedEvent)(nil),                      // 79: agent.agent.v1alpha.CellUpdatedEvent
	(*GenerateMockTableRequest)(nil),              // 80: agent.agent.v1alpha.GenerateMockTableRequest
	(*GenerateMockTableResponse)(nil),             // 81: agent.agent.v1alpha.GenerateMockTableResponse
	(*BindChatTableRequest)(nil),                  // 82: agent.agent.v1alpha.BindChatTableRequest
	(*BindChatTableResponse)(nil),                 // 83: agent.agent.v1alpha.BindChatTableResponse
	(*UnbindChatTableRequest)(nil),                // 84: agent.agent.v1alpha.UnbindChatTableRequest
	(*UnbindChatTableResponse)(nil),               // 85: agent.agent.v1alpha.UnbindChatTableResponse
	(*ListChatTablesRequest)(nil),                 // 86: agent.agent.v1alpha.ListChatTablesRequest
	(*ListChatTablesResponse)(nil),                // 87: agent.agent.v1alpha.ListChatTablesResponse
	(*Table_AgentConfig)(nil),                     // 88: agent.agent.v1alpha.Table.AgentConfig
	(*Table_Permission)(nil),                      // 89: agent.agent.v1alpha.Table.Permission
	(*ColumnDefinition_AgentConfig)(nil),          // 90: agent.agent.v1alpha.ColumnDefinition.AgentConfig
	(*ColumnDefinition_Selection)(nil),            // 91: agent.agent.v1alpha.ColumnDefinition.Selection
	(*ColumnDefinition_AgentConfig_Context)(nil),  // 92: agent.agent.v1alpha.ColumnDefinition.AgentConfig.Context
	(*ColumnDefinition_Selection_Option)(nil),     // 93: agent.agent.v1alpha.ColumnDefinition.Selection.Option
	nil,                           // 94: agent.agent.v1alpha.GetColumnDefinitionsResponse.ColumnDefinitionsEntry
	nil,                           // 95: agent.agent.v1alpha.UpdateColumnDefinitionsRequest.ColumnDefinitionsEntry
	nil,                           // 96: agent.agent.v1alpha.UpdateColumnDefinitionsResponse.ColumnDefinitionsEntry
	(*Cell_Transparency)(nil),     // 97: agent.agent.v1alpha.Cell.Transparency
	nil,                           // 98: agent.agent.v1alpha.Row.CellsEntry
	nil,                           // 99: agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent.ColumnDefinitionsEntry
	(*structpb.Struct)(nil),       // 100: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 101: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil), // 102: google.protobuf.FieldMask
	(*Citation)(nil),              // 103: agent.agent.v1alpha.Citation
}
var file_agent_agent_v1alpha_table_proto_depIdxs = []int32{
	100, // 0: agent.agent.v1alpha.Table.metadata:type_name -> google.protobuf.Struct
	101, // 1: agent.agent.v1alpha.Table.create_time:type_name -> google.protobuf.Timestamp
	101, // 2: agent.agent.v1alpha.Table.update_time:type_name -> google.protobuf.Timestamp
	88,  // 3: agent.agent.v1alpha.Table.agent_config:type_name -> agent.agent.v1alpha.Table.AgentConfig
	89,  // 4: agent.agent.v1alpha.Table.permission:type_name -> agent.agent.v1alpha.Table.Permission
	8,   // 5: agent.agent.v1alpha.CreateTableFromTemplateRequest.table:type_name -> agent.agent.v1alpha.Table
	8,   // 6: agent.agent.v1alpha.CreateTableFromTemplateResponse.table:type_name -> agent.agent.v1alpha.Table
	8,   // 7: agent.agent.v1alpha.ListTablesResponse.tables:type_name -> agent.agent.v1alpha.Table
	8,   // 8: agent.agent.v1alpha.CreateTableRequest.table:type_name -> agent.agent.v1alpha.Table
	8,   // 9: agent.agent.v1alpha.CreateTableResponse.table:type_name -> agent.agent.v1alpha.Table
	8,   // 10: agent.agent.v1alpha.GetTableResponse.table:type_name -> agent.agent.v1alpha.Table
	8,   // 11: agent.agent.v1alpha.UpdateTableRequest.table:type_name -> agent.agent.v1alpha.Table
	102, // 12: agent.agent.v1alpha.UpdateTableRequest.update_mask:type_name -> google.protobuf.FieldMask
	8,   // 13: agent.agent.v1alpha.UpdateTableResponse.table:type_name -> agent.agent.v1alpha.Table
	4,   // 14: agent.agent.v1alpha.NumberFormat.format:type_name -> agent.agent.v1alpha.NumberFormat.Format
	0,   // 15: agent.agent.v1alpha.ColumnDefinition.type:type_name -> agent.agent.v1alpha.Type
	90,  // 16: agent.agent.v1alpha.ColumnDefinition.agent_config:type_name -> agent.agent.v1alpha.ColumnDefinition.AgentConfig
	5,   // 17: agent.agent.v1alpha.ColumnDefinition.sort:type_name -> agent.agent.v1alpha.ColumnDefinition.Sort
	21,  // 18: agent.agent.v1alpha.ColumnDefinition.number_format:type_name -> agent.agent.v1alpha.NumberFormat
	91,  // 19: agent.agent.v1alpha.ColumnDefinition.selection:type_name -> agent.agent.v1alpha.ColumnDefinition.Selection
	100, // 20: agent.agent.v1alpha.ColumnDefinition.metadata:type_name -> google.protobuf.Struct
	94,  // 21: agent.agent.v1alpha.GetColumnDefinitionsResponse.column_definitions:type_name -> agent.agent.v1alpha.GetColumnDefinitionsResponse.ColumnDefinitionsEntry
	95,  // 22: agent.agent.v1alpha.UpdateColumnDefinitionsRequest.column_definitions:type_name -> agent.agent.v1alpha.UpdateColumnDefinitionsRequest.ColumnDefinitionsEntry
	96,  // 23: agent.agent.v1alpha.UpdateColumnDefinitionsResponse.column_definitions:type_name -> agent.agent.v1alpha.UpdateColumnDefinitionsResponse.ColumnDefinitionsEntry
	22,  // 24: agent.agent.v1alpha.GetColumnDefinitionResponse.column_definition:type_name -> agent.agent.v1alpha.ColumnDefinition
	101, // 25: agent.agent.v1alpha.Cell.update_time:type_name -> google.protobuf.Timestamp
	0,   // 26: agent.agent.v1alpha.Cell.type:type_name -> agent.agent.v1alpha.Type
	33,  // 27: agent.agent.v1alpha.Cell.string_value:type_name -> agent.agent.v1alpha.StringCell
	34,  // 28: agent.agent.v1alpha.Cell.number_value:type_name -> agent.agent.v1alpha.NumberCell
	35,  // 29: agent.agent.v1alpha.Cell.boolean_value:type_name -> agent.agent.v1alpha.BooleanCell
	36,  // 30: agent.agent.v1alpha.Cell.file_value:type_name -> agent.agent.v1alpha.FileCell
	37,  // 31: agent.agent.v1alpha.Cell.document_value:type_name -> agent.agent.v1alpha.DocumentCell
	100, // 32: agent.agent.v1alpha.Cell.metadata:type_name -> google.protobuf.Struct
	1,   // 33: agent.agent.v1alpha.Cell.status:type_name -> agent.agent.v1alpha.CellStatus
	103, // 34: agent.agent.v1alpha.Cell.citations:type_name -> agent.agent.v1alpha.Citation
	97,  // 35: agent.agent.v1alpha.Cell.transparency:type_name -> agent.agent.v1alpha.Cell.Transparency
	2,   // 36: agent.agent.v1alpha.Cell.lock_state:type_name -> agent.agent.v1alpha.LockState
	98,  // 37: agent.agent.v1alpha.Row.cells:type_name -> agent.agent.v1alpha.Row.CellsEntry
	101, // 38: agent.agent.v1alpha.Row.create_time:type_name -> google.protobuf.Timestamp
	101, // 39: agent.agent.v1alpha.Row.update_time:type_name -> google.protobuf.Timestamp
	38,  // 40: agent.agent.v1alpha.ListRowsResponse.rows:type_name -> agent.agent.v1alpha.Row
	38,  // 41: agent.agent.v1alpha.InsertRowRequest.row:type_name -> agent.agent.v1alpha.Row
	38,  // 42: agent.agent.v1alpha.InsertRowResponse.row:type_name -> agent.agent.v1alpha.Row
	38,  // 43: agent.agent.v1alpha.UpdateRowRequest.row:type_name -> agent.agent.v1alpha.Row
	38,  // 44: agent.agent.v1alpha.UpdateRowResponse.row:type_name -> agent.agent.v1alpha.Row
	38,  // 45: agent.agent.v1alpha.GetRowResponse.row:type_name -> agent.agent.v1alpha.Row
	38,  // 46: agent.agent.v1alpha.UpdateRowsRequest.rows:type_name -> agent.agent.v1alpha.Row
	38,  // 47: agent.agent.v1alpha.UpdateRowsResponse.rows:type_name -> agent.agent.v1alpha.Row
	31,  // 48: agent.agent.v1alpha.GetCellResponse.cell:type_name -> agent.agent.v1alpha.Cell
	31,  // 49: agent.agent.v1alpha.UpdateCellRequest.cell:type_name -> agent.agent.v1alpha.Cell
	31,  // 50: agent.agent.v1alpha.UpdateCellResponse.cell:type_name -> agent.agent.v1alpha.Cell
	31,  // 51: agent.agent.v1alpha.RecomputeCellResponse.cell:type_name -> agent.agent.v1alpha.Cell
	31,  // 52: agent.agent.v1alpha.ResetCellResponse.cell:type_name -> agent.agent.v1alpha.Cell
	31,  // 53: agent.agent.v1alpha.LockCellResponse.cell:type_name -> agent.agent.v1alpha.Cell
	31,  // 54: agent.agent.v1alpha.UnlockCellResponse.cell:type_name -> agent.agent.v1alpha.Cell
	3,   // 55: agent.agent.v1alpha.ExportTableRequest.format:type_name -> agent.agent.v1alpha.ExportFormat
	71,  // 56: agent.agent.v1alpha.GetTableEventsResponse.event:type_name -> agent.agent.v1alpha.TableEvent
	72,  // 57: agent.agent.v1alpha.TableEvent.table_updated_event:type_name -> agent.agent.v1alpha.TableUpdatedEvent
	73,  // 58: agent.agent.v1alpha.TableEvent.table_deleted_event:type_name -> agent.agent.v1alpha.TableDeletedEvent
	74,  // 59: agent.agent.v1alpha.TableEvent.column_definitions_updated_event:type_name -> agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent
	75,  // 60: agent.agent.v1alpha.TableEvent.row_inserted_event:type_name -> agent.agent.v1alpha.RowInsertedEvent
	76,  // 61: agent.agent.v1alpha.TableEvent.row_updated_event:type_name -> agent.agent.v1alpha.RowUpdatedEvent
	77,  // 62: agent.agent.v1alpha.TableEvent.row_deleted_event:type_name -> agent.agent.v1alpha.RowDeletedEvent
	78,  // 63: agent.agent.v1alpha.TableEvent.rows_moved_event:type_name -> agent.agent.v1alpha.RowsMovedEvent
	79,  // 64: agent.agent.v1alpha.TableEvent.cell_updated_event:type_name -> agent.agent.v1alpha.CellUpdatedEvent
	8,   // 65: agent.agent.v1alpha.TableUpdatedEvent.table:type_name -> agent.agent.v1alpha.Table
	99,  // 66: agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent.column_definitions:type_name -> agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent.ColumnDefinitionsEntry
	38,  // 67: agent.agent.v1alpha.RowInsertedEvent.row:type_name -> agent.agent.v1alpha.Row
	38,  // 68: agent.agent.v1alpha.RowUpdatedEvent.row:type_name -> agent.agent.v1alpha.Row
	31,  // 69: agent.agent.v1alpha.CellUpdatedEvent.cell:type_name -> agent.agent.v1alpha.Cell
	7,   // 70: agent.agent.v1alpha.GenerateMockTableRequest.mode:type_name -> agent.agent.v1alpha.GenerateMockTableRequest.Mode
	8,   // 71: agent.agent.v1alpha.ListChatTablesResponse.tables:type_name -> agent.agent.v1alpha.Table
	92,  // 72: agent.agent.v1alpha.ColumnDefinition.AgentConfig.context:type_name -> agent.agent.v1alpha.ColumnDefinition.AgentConfig.Context
	6,   // 73: agent.agent.v1alpha.ColumnDefinition.Selection.type:type_name -> agent.agent.v1alpha.ColumnDefinition.Selection.SelectionType
	93,  // 74: agent.agent.v1alpha.ColumnDefinition.Selection.options:type_name -> agent.agent.v1alpha.ColumnDefinition.Selection.Option
	22,  // 75: agent.agent.v1alpha.GetColumnDefinitionsResponse.ColumnDefinitionsEntry.value:type_name -> agent.agent.v1alpha.ColumnDefinition
	22,  // 76: agent.agent.v1alpha.UpdateColumnDefinitionsRequest.ColumnDefinitionsEntry.value:type_name -> agent.agent.v1alpha.ColumnDefinition
	22,  // 77: agent.agent.v1alpha.UpdateColumnDefinitionsResponse.ColumnDefinitionsEntry.value:type_name -> agent.agent.v1alpha.ColumnDefinition
	31,  // 78: agent.agent.v1alpha.Row.CellsEntry.value:type_name -> agent.agent.v1alpha.Cell
	22,  // 79: agent.agent.v1alpha.ColumnDefinitionsUpdatedEvent.ColumnDefinitionsEntry.value:type_name -> agent.agent.v1alpha.ColumnDefinition
	80,  // [80:80] is the sub-list for method output_type
	80,  // [80:80] is the sub-list for method input_type
	80,  // [80:80] is the sub-list for extension type_name
	80,  // [80:80] is the sub-list for extension extendee
	0,   // [0:80] is the sub-list for field type_name
}

func init() { file_agent_agent_v1alpha_table_proto_init() }
func file_agent_agent_v1alpha_table_proto_init() {
	if File_agent_agent_v1alpha_table_proto != nil {
		return
	}
	file_agent_agent_v1alpha_common_proto_init()
	file_agent_agent_v1alpha_table_proto_msgTypes[0].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[14].OneofWrappers = []any{
		(*ColumnDefinition_NumberFormat)(nil),
	}
	file_agent_agent_v1alpha_table_proto_msgTypes[23].OneofWrappers = []any{
		(*Cell_StringValue)(nil),
		(*Cell_NumberValue)(nil),
		(*Cell_BooleanValue)(nil),
		(*Cell_FileValue)(nil),
		(*Cell_DocumentValue)(nil),
	}
	file_agent_agent_v1alpha_table_proto_msgTypes[25].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[26].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[27].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[33].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[45].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[63].OneofWrappers = []any{
		(*TableEvent_TableUpdatedEvent)(nil),
		(*TableEvent_TableDeletedEvent)(nil),
		(*TableEvent_ColumnDefinitionsUpdatedEvent)(nil),
		(*TableEvent_RowInsertedEvent)(nil),
		(*TableEvent_RowUpdatedEvent)(nil),
		(*TableEvent_RowDeletedEvent)(nil),
		(*TableEvent_RowsMovedEvent)(nil),
		(*TableEvent_CellUpdatedEvent)(nil),
	}
	file_agent_agent_v1alpha_table_proto_msgTypes[70].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[72].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[82].OneofWrappers = []any{}
	file_agent_agent_v1alpha_table_proto_msgTypes[85].OneofWrappers = []any{
		(*ColumnDefinition_Selection_Option_StringValue)(nil),
		(*ColumnDefinition_Selection_Option_NumberValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_agent_v1alpha_table_proto_rawDesc), len(file_agent_agent_v1alpha_table_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agent_agent_v1alpha_table_proto_goTypes,
		DependencyIndexes: file_agent_agent_v1alpha_table_proto_depIdxs,
		EnumInfos:         file_agent_agent_v1alpha_table_proto_enumTypes,
		MessageInfos:      file_agent_agent_v1alpha_table_proto_msgTypes,
	}.Build()
	File_agent_agent_v1alpha_table_proto = out.File
	file_agent_agent_v1alpha_table_proto_goTypes = nil
	file_agent_agent_v1alpha_table_proto_depIdxs = nil
}
