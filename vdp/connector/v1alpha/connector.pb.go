// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: vdp/connector/v1alpha/connector.proto

package connectorv1alpha

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1alpha "github.com/instill-ai/protogen-go/common/healthcheck/v1alpha"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// State enumerates the connector_resource state
type ConnectorResource_State int32

const (
	// State: UNSPECIFIED
	ConnectorResource_STATE_UNSPECIFIED ConnectorResource_State = 0
	// State: DISCONNECTED
	ConnectorResource_STATE_DISCONNECTED ConnectorResource_State = 1
	// State: CONNECTED
	ConnectorResource_STATE_CONNECTED ConnectorResource_State = 2
	// State: ERROR
	ConnectorResource_STATE_ERROR ConnectorResource_State = 3
)

// Enum value maps for ConnectorResource_State.
var (
	ConnectorResource_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_DISCONNECTED",
		2: "STATE_CONNECTED",
		3: "STATE_ERROR",
	}
	ConnectorResource_State_value = map[string]int32{
		"STATE_UNSPECIFIED":  0,
		"STATE_DISCONNECTED": 1,
		"STATE_CONNECTED":    2,
		"STATE_ERROR":        3,
	}
)

func (x ConnectorResource_State) Enum() *ConnectorResource_State {
	p := new(ConnectorResource_State)
	*p = x
	return p
}

func (x ConnectorResource_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectorResource_State) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_connector_v1alpha_connector_proto_enumTypes[0].Descriptor()
}

func (ConnectorResource_State) Type() protoreflect.EnumType {
	return &file_vdp_connector_v1alpha_connector_proto_enumTypes[0]
}

func (x ConnectorResource_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectorResource_State.Descriptor instead.
func (ConnectorResource_State) EnumDescriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{4, 0}
}

// ConnectorResource visibility including public or private
type ConnectorResource_Visibility int32

const (
	// Visibility: UNSPECIFIED, equivalent to PRIVATE.
	ConnectorResource_VISIBILITY_UNSPECIFIED ConnectorResource_Visibility = 0
	// Visibility: PRIVATE
	ConnectorResource_VISIBILITY_PRIVATE ConnectorResource_Visibility = 1
	// Visibility: PUBLIC
	ConnectorResource_VISIBILITY_PUBLIC ConnectorResource_Visibility = 2
)

// Enum value maps for ConnectorResource_Visibility.
var (
	ConnectorResource_Visibility_name = map[int32]string{
		0: "VISIBILITY_UNSPECIFIED",
		1: "VISIBILITY_PRIVATE",
		2: "VISIBILITY_PUBLIC",
	}
	ConnectorResource_Visibility_value = map[string]int32{
		"VISIBILITY_UNSPECIFIED": 0,
		"VISIBILITY_PRIVATE":     1,
		"VISIBILITY_PUBLIC":      2,
	}
)

func (x ConnectorResource_Visibility) Enum() *ConnectorResource_Visibility {
	p := new(ConnectorResource_Visibility)
	*p = x
	return p
}

func (x ConnectorResource_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectorResource_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_connector_v1alpha_connector_proto_enumTypes[1].Descriptor()
}

func (ConnectorResource_Visibility) Type() protoreflect.EnumType {
	return &file_vdp_connector_v1alpha_connector_proto_enumTypes[1]
}

func (x ConnectorResource_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectorResource_Visibility.Descriptor instead.
func (ConnectorResource_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{4, 1}
}

// LivenessRequest represents a request to check a service liveness status
type LivenessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckRequest message
	HealthCheckRequest *v1alpha.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
}

func (x *LivenessRequest) Reset() {
	*x = LivenessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessRequest) ProtoMessage() {}

func (x *LivenessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessRequest.ProtoReflect.Descriptor instead.
func (*LivenessRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{0}
}

func (x *LivenessRequest) GetHealthCheckRequest() *v1alpha.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// LivenessResponse represents a response for a service liveness status
type LivenessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckResponse message
	HealthCheckResponse *v1alpha.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
}

func (x *LivenessResponse) Reset() {
	*x = LivenessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessResponse) ProtoMessage() {}

func (x *LivenessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessResponse.ProtoReflect.Descriptor instead.
func (*LivenessResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{1}
}

func (x *LivenessResponse) GetHealthCheckResponse() *v1alpha.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// ReadinessRequest represents a request to check a service readiness status
type ReadinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckRequest message
	HealthCheckRequest *v1alpha.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
}

func (x *ReadinessRequest) Reset() {
	*x = ReadinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessRequest) ProtoMessage() {}

func (x *ReadinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessRequest.ProtoReflect.Descriptor instead.
func (*ReadinessRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{2}
}

func (x *ReadinessRequest) GetHealthCheckRequest() *v1alpha.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// ReadinessResponse represents a response for a service readiness status
type ReadinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HealthCheckResponse message
	HealthCheckResponse *v1alpha.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
}

func (x *ReadinessResponse) Reset() {
	*x = ReadinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessResponse) ProtoMessage() {}

func (x *ReadinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessResponse.ProtoReflect.Descriptor instead.
func (*ReadinessResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{3}
}

func (x *ReadinessResponse) GetHealthCheckResponse() *v1alpha.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// ConnectorResource represents a connector_resource data model
type ConnectorResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ConnectorResource UUID
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// ConnectorResource resource ID (the last segment of the resource name)
	// used to construct the resource name. This conforms to RFC-1034, which
	// restricts to letters, numbers, and hyphen, with the first character a
	// letter, the last a letter or a number, and a 63 character maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// ConnectorDefinition resource
	ConnectorDefinitionName string `protobuf:"bytes,4,opt,name=connector_definition_name,json=connectorDefinitionName,proto3" json:"connector_definition_name,omitempty"`
	// ConnectorResource Type
	Type ConnectorType `protobuf:"varint,5,opt,name=type,proto3,enum=vdp.connector.v1alpha.ConnectorType" json:"type,omitempty"`
	// ConnectorResource description
	Description *string `protobuf:"bytes,7,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// ConnectorResource configuration in JSON format
	Configuration *structpb.Struct `protobuf:"bytes,8,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// ConnectorResource state
	State ConnectorResource_State `protobuf:"varint,9,opt,name=state,proto3,enum=vdp.connector.v1alpha.ConnectorResource_State" json:"state,omitempty"`
	// ConnectorResource tombstone
	Tombstone bool `protobuf:"varint,10,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	// ConnectorResource owner
	//
	// Types that are assignable to Owner:
	//
	//	*ConnectorResource_User
	//	*ConnectorResource_Org
	Owner isConnectorResource_Owner `protobuf_oneof:"owner"`
	// ConnectorResource creation time
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// ConnectorResource update time
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// ConnectorResource visibility including public or private
	Visibility ConnectorResource_Visibility `protobuf:"varint,15,opt,name=visibility,proto3,enum=vdp.connector.v1alpha.ConnectorResource_Visibility" json:"visibility,omitempty"`
	// Embed the content of the connector_definition
	ConnectorDefinition *ConnectorDefinition `protobuf:"bytes,16,opt,name=connector_definition,json=connectorDefinition,proto3" json:"connector_definition,omitempty"`
	// ConnectorResource delete time
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
}

func (x *ConnectorResource) Reset() {
	*x = ConnectorResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorResource) ProtoMessage() {}

func (x *ConnectorResource) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorResource.ProtoReflect.Descriptor instead.
func (*ConnectorResource) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectorResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorResource) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ConnectorResource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectorResource) GetConnectorDefinitionName() string {
	if x != nil {
		return x.ConnectorDefinitionName
	}
	return ""
}

func (x *ConnectorResource) GetType() ConnectorType {
	if x != nil {
		return x.Type
	}
	return ConnectorType_CONNECTOR_TYPE_UNSPECIFIED
}

func (x *ConnectorResource) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ConnectorResource) GetConfiguration() *structpb.Struct {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ConnectorResource) GetState() ConnectorResource_State {
	if x != nil {
		return x.State
	}
	return ConnectorResource_STATE_UNSPECIFIED
}

func (x *ConnectorResource) GetTombstone() bool {
	if x != nil {
		return x.Tombstone
	}
	return false
}

func (m *ConnectorResource) GetOwner() isConnectorResource_Owner {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (x *ConnectorResource) GetUser() string {
	if x, ok := x.GetOwner().(*ConnectorResource_User); ok {
		return x.User
	}
	return ""
}

func (x *ConnectorResource) GetOrg() string {
	if x, ok := x.GetOwner().(*ConnectorResource_Org); ok {
		return x.Org
	}
	return ""
}

func (x *ConnectorResource) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ConnectorResource) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ConnectorResource) GetVisibility() ConnectorResource_Visibility {
	if x != nil {
		return x.Visibility
	}
	return ConnectorResource_VISIBILITY_UNSPECIFIED
}

func (x *ConnectorResource) GetConnectorDefinition() *ConnectorDefinition {
	if x != nil {
		return x.ConnectorDefinition
	}
	return nil
}

func (x *ConnectorResource) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

type isConnectorResource_Owner interface {
	isConnectorResource_Owner()
}

type ConnectorResource_User struct {
	// The resource name with UUID of a user, e.g.,
	// "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
	User string `protobuf:"bytes,11,opt,name=user,proto3,oneof"`
}

type ConnectorResource_Org struct {
	// The resource name with UUID of an organization
	Org string `protobuf:"bytes,12,opt,name=org,proto3,oneof"`
}

func (*ConnectorResource_User) isConnectorResource_Owner() {}

func (*ConnectorResource_Org) isConnectorResource_Owner() {}

// ListConnectorResourcesRequest represents a request to list
// ConnectorResource resources
type ListConnectorResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of connector-resources to return. The service may return fewer
	// than this value. If unspecified, at most 10 connector-resources will be returned.
	// The maximum value is 100; values above 100 will be coerced to 100.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// ConnectorResource view (default is VIEW_BASIC)
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
	// Filter expression to list connector-resources
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Return soft_deleted connector resources
	ShowDeleted *bool `protobuf:"varint,5,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
}

func (x *ListConnectorResourcesRequest) Reset() {
	*x = ListConnectorResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectorResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorResourcesRequest) ProtoMessage() {}

func (x *ListConnectorResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListConnectorResourcesRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{5}
}

func (x *ListConnectorResourcesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListConnectorResourcesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListConnectorResourcesRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListConnectorResourcesRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListConnectorResourcesRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

// ListConnectorResourcesResponse represents a response for a list of
// ConnectorResource resources
type ListConnectorResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of ConnectorResource resources
	ConnectorResources []*ConnectorResource `protobuf:"bytes,1,rep,name=connector_resources,json=connectorResources,proto3" json:"connector_resources,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of connector_resource resources
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListConnectorResourcesResponse) Reset() {
	*x = ListConnectorResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectorResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorResourcesResponse) ProtoMessage() {}

func (x *ListConnectorResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListConnectorResourcesResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{6}
}

func (x *ListConnectorResourcesResponse) GetConnectorResources() []*ConnectorResource {
	if x != nil {
		return x.ConnectorResources
	}
	return nil
}

func (x *ListConnectorResourcesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListConnectorResourcesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// LookUpConnectorResourceRequest represents a request to query a
// connector_resource via permalink
type LookUpConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permalink of a connector_resource. For example:
	// "connector-resources/{uid}"
	Permalink string `protobuf:"bytes,1,opt,name=permalink,proto3" json:"permalink,omitempty"`
	// ConnectorResource view (default is VIEW_BASIC)
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *LookUpConnectorResourceRequest) Reset() {
	*x = LookUpConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpConnectorResourceRequest) ProtoMessage() {}

func (x *LookUpConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*LookUpConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{7}
}

func (x *LookUpConnectorResourceRequest) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

func (x *LookUpConnectorResourceRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// LookUpConnectorResourceResponse represents a response for a
// connector_resource
type LookUpConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *LookUpConnectorResourceResponse) Reset() {
	*x = LookUpConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpConnectorResourceResponse) ProtoMessage() {}

func (x *LookUpConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*LookUpConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{8}
}

func (x *LookUpConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// CreateUserConnectorResourceRequest represents a request to create a
// ConnectorResource resource
type CreateUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
	// The parent resource where this connector resource will be created.
	// Format: users/{users}
	Parent string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *CreateUserConnectorResourceRequest) Reset() {
	*x = CreateUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserConnectorResourceRequest) ProtoMessage() {}

func (x *CreateUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{9}
}

func (x *CreateUserConnectorResourceRequest) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

func (x *CreateUserConnectorResourceRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// CreateUserConnectorResourceResponse represents a response for a
// ConnectorResource resource
type CreateUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *CreateUserConnectorResourceResponse) Reset() {
	*x = CreateUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserConnectorResourceResponse) ProtoMessage() {}

func (x *CreateUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{10}
}

func (x *CreateUserConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// ListUserConnectorResourcesRequest represents a request to list
// ConnectorResource resources
type ListUserConnectorResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of connector-resources to return. The service may return fewer
	// than this value. If unspecified, at most 10 connector-resources will be returned.
	// The maximum value is 100; values above 100 will be coerced to 100.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// ConnectorResource view (default is VIEW_BASIC)
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
	// Filter expression to list connector-resources
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// The parent resource where this connector resource will be created.
	// Format: users/{users}
	Parent string `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
	// Return soft_deleted connector resources
	ShowDeleted *bool `protobuf:"varint,6,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
}

func (x *ListUserConnectorResourcesRequest) Reset() {
	*x = ListUserConnectorResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserConnectorResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConnectorResourcesRequest) ProtoMessage() {}

func (x *ListUserConnectorResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConnectorResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListUserConnectorResourcesRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{11}
}

func (x *ListUserConnectorResourcesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListUserConnectorResourcesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListUserConnectorResourcesRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListUserConnectorResourcesRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListUserConnectorResourcesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListUserConnectorResourcesRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

// ListUserConnectorResourcesResponse represents a response for a list of
// ConnectorResource resources
type ListUserConnectorResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of ConnectorResource resources
	ConnectorResources []*ConnectorResource `protobuf:"bytes,1,rep,name=connector_resources,json=connectorResources,proto3" json:"connector_resources,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of connector_resource resources
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListUserConnectorResourcesResponse) Reset() {
	*x = ListUserConnectorResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserConnectorResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConnectorResourcesResponse) ProtoMessage() {}

func (x *ListUserConnectorResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConnectorResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListUserConnectorResourcesResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserConnectorResourcesResponse) GetConnectorResources() []*ConnectorResource {
	if x != nil {
		return x.ConnectorResources
	}
	return nil
}

func (x *ListUserConnectorResourcesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListUserConnectorResourcesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetUserConnectorResourceRequest represents a request to query a
// ConnectorResource resource
type GetUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResourceConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ConnectorResource view (default is VIEW_BASIC)
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetUserConnectorResourceRequest) Reset() {
	*x = GetUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConnectorResourceRequest) ProtoMessage() {}

func (x *GetUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*GetUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserConnectorResourceRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetUserConnectorResourceResponse represents a response for a
// ConnectorResource resource
type GetUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *GetUserConnectorResourceResponse) Reset() {
	*x = GetUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConnectorResourceResponse) ProtoMessage() {}

func (x *GetUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*GetUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// UpdateUserConnectorResourceRequest represents a request to update a
// ConnectorResource resource
type UpdateUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
	// Update mask for a ConnectorResource resource
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateUserConnectorResourceRequest) Reset() {
	*x = UpdateUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserConnectorResourceRequest) ProtoMessage() {}

func (x *UpdateUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserConnectorResourceRequest) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

func (x *UpdateUserConnectorResourceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateUserConnectorResourceResponse represents a response for a
// ConnectorResource resource
type UpdateUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *UpdateUserConnectorResourceResponse) Reset() {
	*x = UpdateUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserConnectorResourceResponse) ProtoMessage() {}

func (x *UpdateUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// DeleteUserConnectorResourceRequest represents a request to delete a
// ConnectorResource resource
type DeleteUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteUserConnectorResourceRequest) Reset() {
	*x = DeleteUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserConnectorResourceRequest) ProtoMessage() {}

func (x *DeleteUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteUserConnectorResourceResponse represents an empty response
type DeleteUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserConnectorResourceResponse) Reset() {
	*x = DeleteUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserConnectorResourceResponse) ProtoMessage() {}

func (x *DeleteUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{18}
}

// ConnectUserConnectorResourceRequest represents a request to connect a
// connector_resource
type ConnectUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ConnectUserConnectorResourceRequest) Reset() {
	*x = ConnectUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectUserConnectorResourceRequest) ProtoMessage() {}

func (x *ConnectUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*ConnectUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{19}
}

func (x *ConnectUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ConnectUserConnectorResourceResponse represents a connected
// connector_resource
type ConnectUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *ConnectUserConnectorResourceResponse) Reset() {
	*x = ConnectUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectUserConnectorResourceResponse) ProtoMessage() {}

func (x *ConnectUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*ConnectUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{20}
}

func (x *ConnectUserConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// DisconnectUserConnectorResourceRequest represents a request to disconnect a
// connector_resource
type DisconnectUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DisconnectUserConnectorResourceRequest) Reset() {
	*x = DisconnectUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectUserConnectorResourceRequest) ProtoMessage() {}

func (x *DisconnectUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*DisconnectUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{21}
}

func (x *DisconnectUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DisconnectUserConnectorResourceResponse represents a disconnected
// connector_resource
type DisconnectUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *DisconnectUserConnectorResourceResponse) Reset() {
	*x = DisconnectUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectUserConnectorResourceResponse) ProtoMessage() {}

func (x *DisconnectUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*DisconnectUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{22}
}

func (x *DisconnectUserConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// RenameUserConnectorResourceRequest represents a request to rename the
// ConnectorResource resource name
type RenameUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ConnectorResource new resource id to replace with the
	// ConnectorResource resource name to be
	// "connector-resources/{new_connector_id}"
	NewConnectorId string `protobuf:"bytes,2,opt,name=new_connector_id,json=newConnectorId,proto3" json:"new_connector_id,omitempty"`
}

func (x *RenameUserConnectorResourceRequest) Reset() {
	*x = RenameUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameUserConnectorResourceRequest) ProtoMessage() {}

func (x *RenameUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*RenameUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{23}
}

func (x *RenameUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenameUserConnectorResourceRequest) GetNewConnectorId() string {
	if x != nil {
		return x.NewConnectorId
	}
	return ""
}

// RenameUserConnectorResourceResponse represents a renamed ConnectorResource
// resource
type RenameUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *RenameUserConnectorResourceResponse) Reset() {
	*x = RenameUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameUserConnectorResourceResponse) ProtoMessage() {}

func (x *RenameUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*RenameUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{24}
}

func (x *RenameUserConnectorResourceResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// ExecuteUserConnectorResourceRequest represents a private request to execution
// connector_resource
type ExecuteUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of a connector_resource. For example:
	// "connector-resources/{name}"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Inputs
	Inputs []*structpb.Struct `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Task
	Task string `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *ExecuteUserConnectorResourceRequest) Reset() {
	*x = ExecuteUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteUserConnectorResourceRequest) ProtoMessage() {}

func (x *ExecuteUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*ExecuteUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{25}
}

func (x *ExecuteUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecuteUserConnectorResourceRequest) GetInputs() []*structpb.Struct {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExecuteUserConnectorResourceRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

// ExecuteUserConnectorResourceResponse represents a response for execution
// output
type ExecuteUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Outputs
	Outputs []*structpb.Struct `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *ExecuteUserConnectorResourceResponse) Reset() {
	*x = ExecuteUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteUserConnectorResourceResponse) ProtoMessage() {}

func (x *ExecuteUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*ExecuteUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{26}
}

func (x *ExecuteUserConnectorResourceResponse) GetOutputs() []*structpb.Struct {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// TestUserConnectorResourceRequest represents a public request to trigger check
// action on a connector_resource
type TestUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TestUserConnectorResourceRequest) Reset() {
	*x = TestUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestUserConnectorResourceRequest) ProtoMessage() {}

func (x *TestUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*TestUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{27}
}

func (x *TestUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// TestUserConnectorResourceResponse represents a response containing a
// connector_resource's current state
type TestUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Retrieved connector_resource state
	State ConnectorResource_State `protobuf:"varint,1,opt,name=state,proto3,enum=vdp.connector.v1alpha.ConnectorResource_State" json:"state,omitempty"`
}

func (x *TestUserConnectorResourceResponse) Reset() {
	*x = TestUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestUserConnectorResourceResponse) ProtoMessage() {}

func (x *TestUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*TestUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{28}
}

func (x *TestUserConnectorResourceResponse) GetState() ConnectorResource_State {
	if x != nil {
		return x.State
	}
	return ConnectorResource_STATE_UNSPECIFIED
}

// WatchUserConnectorResourceRequest represents a public request to query
// a connector_resource's current state
type WatchUserConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource name. It must have the format of
	// "connector-resources/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WatchUserConnectorResourceRequest) Reset() {
	*x = WatchUserConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserConnectorResourceRequest) ProtoMessage() {}

func (x *WatchUserConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*WatchUserConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{29}
}

func (x *WatchUserConnectorResourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// WatchUserConnectorResourceResponse represents a response to fetch a
// connector_resource's current state
type WatchUserConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Retrieved connector_resource state
	State ConnectorResource_State `protobuf:"varint,1,opt,name=state,proto3,enum=vdp.connector.v1alpha.ConnectorResource_State" json:"state,omitempty"`
}

func (x *WatchUserConnectorResourceResponse) Reset() {
	*x = WatchUserConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchUserConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchUserConnectorResourceResponse) ProtoMessage() {}

func (x *WatchUserConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchUserConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*WatchUserConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{30}
}

func (x *WatchUserConnectorResourceResponse) GetState() ConnectorResource_State {
	if x != nil {
		return x.State
	}
	return ConnectorResource_STATE_UNSPECIFIED
}

// ListConnectorResourcesAdminRequest represents a request to list
// ConnectorResource resources from all users by admin
type ListConnectorResourcesAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of connector-resources to return. The service may return fewer
	// than this value. If unspecified, at most 10 connector-resources will be returned.
	// The maximum value is 100; values above 100 will be coerced to 100.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// ConnectorResource view (default is VIEW_BASIC)
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
	// Filter expression to list connector-resources
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Return soft_deleted connector resources
	ShowDeleted *bool `protobuf:"varint,5,opt,name=show_deleted,json=showDeleted,proto3,oneof" json:"show_deleted,omitempty"`
}

func (x *ListConnectorResourcesAdminRequest) Reset() {
	*x = ListConnectorResourcesAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectorResourcesAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorResourcesAdminRequest) ProtoMessage() {}

func (x *ListConnectorResourcesAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorResourcesAdminRequest.ProtoReflect.Descriptor instead.
func (*ListConnectorResourcesAdminRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{31}
}

func (x *ListConnectorResourcesAdminRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListConnectorResourcesAdminRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListConnectorResourcesAdminRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *ListConnectorResourcesAdminRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListConnectorResourcesAdminRequest) GetShowDeleted() bool {
	if x != nil && x.ShowDeleted != nil {
		return *x.ShowDeleted
	}
	return false
}

// ListConnectorResourcesAdminResponse represents a response for a list of
// ConnectorResource resources
type ListConnectorResourcesAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of ConnectorResource resources
	ConnectorResources []*ConnectorResource `protobuf:"bytes,1,rep,name=connector_resources,json=connectorResources,proto3" json:"connector_resources,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of connector_resource resources
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListConnectorResourcesAdminResponse) Reset() {
	*x = ListConnectorResourcesAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectorResourcesAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorResourcesAdminResponse) ProtoMessage() {}

func (x *ListConnectorResourcesAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorResourcesAdminResponse.ProtoReflect.Descriptor instead.
func (*ListConnectorResourcesAdminResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{32}
}

func (x *ListConnectorResourcesAdminResponse) GetConnectorResources() []*ConnectorResource {
	if x != nil {
		return x.ConnectorResources
	}
	return nil
}

func (x *ListConnectorResourcesAdminResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListConnectorResourcesAdminResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// LookUpConnectorResourceAdminRequest represents a request to query a
// connector_resource via permalink by admin
type LookUpConnectorResourceAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permalink of a connector_resource. For example:
	// "connector-resources/{uid}"
	Permalink string `protobuf:"bytes,1,opt,name=permalink,proto3" json:"permalink,omitempty"`
	// ConnectorResource view (default is VIEW_BASIC)
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *LookUpConnectorResourceAdminRequest) Reset() {
	*x = LookUpConnectorResourceAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpConnectorResourceAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpConnectorResourceAdminRequest) ProtoMessage() {}

func (x *LookUpConnectorResourceAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpConnectorResourceAdminRequest.ProtoReflect.Descriptor instead.
func (*LookUpConnectorResourceAdminRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{33}
}

func (x *LookUpConnectorResourceAdminRequest) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

func (x *LookUpConnectorResourceAdminRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// LookUpConnectorResourceAdminResponse represents a response for a
// connector_resource
type LookUpConnectorResourceAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorResource resource
	ConnectorResource *ConnectorResource `protobuf:"bytes,1,opt,name=connector_resource,json=connectorResource,proto3" json:"connector_resource,omitempty"`
}

func (x *LookUpConnectorResourceAdminResponse) Reset() {
	*x = LookUpConnectorResourceAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookUpConnectorResourceAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookUpConnectorResourceAdminResponse) ProtoMessage() {}

func (x *LookUpConnectorResourceAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookUpConnectorResourceAdminResponse.ProtoReflect.Descriptor instead.
func (*LookUpConnectorResourceAdminResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{34}
}

func (x *LookUpConnectorResourceAdminResponse) GetConnectorResource() *ConnectorResource {
	if x != nil {
		return x.ConnectorResource
	}
	return nil
}

// CheckConnectorResourceRequest represents a private request to query
// a connector_resource's current state
type CheckConnectorResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Permalink of a connector_resource. For example:
	// "connector-resources/{uid}"
	Permalink string `protobuf:"bytes,1,opt,name=permalink,proto3" json:"permalink,omitempty"`
}

func (x *CheckConnectorResourceRequest) Reset() {
	*x = CheckConnectorResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectorResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectorResourceRequest) ProtoMessage() {}

func (x *CheckConnectorResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectorResourceRequest.ProtoReflect.Descriptor instead.
func (*CheckConnectorResourceRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{35}
}

func (x *CheckConnectorResourceRequest) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

// CheckConnectorResourceResponse represents a response to fetch a
// connector_resource's current state
type CheckConnectorResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Retrieved connector_resource state
	State ConnectorResource_State `protobuf:"varint,1,opt,name=state,proto3,enum=vdp.connector.v1alpha.ConnectorResource_State" json:"state,omitempty"`
}

func (x *CheckConnectorResourceResponse) Reset() {
	*x = CheckConnectorResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectorResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectorResourceResponse) ProtoMessage() {}

func (x *CheckConnectorResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectorResourceResponse.ProtoReflect.Descriptor instead.
func (*CheckConnectorResourceResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_proto_rawDescGZIP(), []int{36}
}

func (x *CheckConnectorResourceResponse) GetState() ConnectorResource_State {
	if x != nil {
		return x.State
	}
	return ConnectorResource_STATE_UNSPECIFIED
}

var File_vdp_connector_v1alpha_connector_proto protoreflect.FileDescriptor

var file_vdp_connector_v1alpha_connector_proto_rawDesc = []byte{
	0x0a, 0x25, 0x76, 0x64, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x2c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x76, 0x64, 0x70, 0x2f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x6a, 0x0a, 0x14, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x00, 0x52, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x10, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x15, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01,
	0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x6a, 0x0a, 0x14, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x15,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xf6, 0x09, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x68, 0x0a, 0x19,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2c, 0xe0, 0x41, 0x05, 0xfa, 0x41, 0x26, 0x0a, 0x24, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1d, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x17, 0x0a, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03,
	0x6f, 0x72, 0x67, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x76, 0x64,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x62, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0x57, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52,
	0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x49, 0x53, 0x49, 0x42,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x02, 0x3a, 0x51,
	0xea, 0x41, 0x4e, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x7d, 0x42, 0x07, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbb, 0x02, 0x0a, 0x1d, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x1e, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x7a, 0x0a, 0x1f, 0x4c, 0x6f, 0x6f, 0x6b, 0x55,
	0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x12, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24,
	0x12, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65,
	0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x23,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x83, 0x03, 0x0a,
	0x21, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2a, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24, 0x12, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x04,
	0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a, 0x92,
	0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0xe0,
	0x41, 0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x7b, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0xc4, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x7e, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a, 0x92, 0x41,
	0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02, 0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c,
	0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25,
	0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0xe0, 0x41, 0x02, 0xfa,
	0x41, 0x24, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e,
	0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x24,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x68, 0x0a,
	0x26, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x27, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x22, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2a, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x7e, 0x0a, 0x23, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x59, 0x0a, 0x24, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x20, 0x54, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa, 0x02,
	0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x21, 0x54, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x76,
	0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x21, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a, 0x92, 0x41, 0x1d, 0xca, 0x3e, 0x1a, 0xfa,
	0x02, 0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24, 0x0a,
	0x22, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63,
	0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x22, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc0, 0x02, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x23, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x39, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64,
	0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x7f, 0x0a, 0x24, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x42, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x65, 0x72,
	0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x66, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0xeb,
	0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x0e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67,
	0x6f, 0x2f, 0x76, 0x64, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x56, 0x43, 0x58, 0xaa, 0x02,
	0x15, 0x56, 0x64, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x15, 0x56, 0x64, 0x70, 0x5c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02,
	0x21, 0x56, 0x64, 0x70, 0x5c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5c, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x17, 0x56, 0x64, 0x70, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vdp_connector_v1alpha_connector_proto_rawDescOnce sync.Once
	file_vdp_connector_v1alpha_connector_proto_rawDescData = file_vdp_connector_v1alpha_connector_proto_rawDesc
)

func file_vdp_connector_v1alpha_connector_proto_rawDescGZIP() []byte {
	file_vdp_connector_v1alpha_connector_proto_rawDescOnce.Do(func() {
		file_vdp_connector_v1alpha_connector_proto_rawDescData = protoimpl.X.CompressGZIP(file_vdp_connector_v1alpha_connector_proto_rawDescData)
	})
	return file_vdp_connector_v1alpha_connector_proto_rawDescData
}

var file_vdp_connector_v1alpha_connector_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_vdp_connector_v1alpha_connector_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_vdp_connector_v1alpha_connector_proto_goTypes = []interface{}{
	(ConnectorResource_State)(0),                    // 0: vdp.connector.v1alpha.ConnectorResource.State
	(ConnectorResource_Visibility)(0),               // 1: vdp.connector.v1alpha.ConnectorResource.Visibility
	(*LivenessRequest)(nil),                         // 2: vdp.connector.v1alpha.LivenessRequest
	(*LivenessResponse)(nil),                        // 3: vdp.connector.v1alpha.LivenessResponse
	(*ReadinessRequest)(nil),                        // 4: vdp.connector.v1alpha.ReadinessRequest
	(*ReadinessResponse)(nil),                       // 5: vdp.connector.v1alpha.ReadinessResponse
	(*ConnectorResource)(nil),                       // 6: vdp.connector.v1alpha.ConnectorResource
	(*ListConnectorResourcesRequest)(nil),           // 7: vdp.connector.v1alpha.ListConnectorResourcesRequest
	(*ListConnectorResourcesResponse)(nil),          // 8: vdp.connector.v1alpha.ListConnectorResourcesResponse
	(*LookUpConnectorResourceRequest)(nil),          // 9: vdp.connector.v1alpha.LookUpConnectorResourceRequest
	(*LookUpConnectorResourceResponse)(nil),         // 10: vdp.connector.v1alpha.LookUpConnectorResourceResponse
	(*CreateUserConnectorResourceRequest)(nil),      // 11: vdp.connector.v1alpha.CreateUserConnectorResourceRequest
	(*CreateUserConnectorResourceResponse)(nil),     // 12: vdp.connector.v1alpha.CreateUserConnectorResourceResponse
	(*ListUserConnectorResourcesRequest)(nil),       // 13: vdp.connector.v1alpha.ListUserConnectorResourcesRequest
	(*ListUserConnectorResourcesResponse)(nil),      // 14: vdp.connector.v1alpha.ListUserConnectorResourcesResponse
	(*GetUserConnectorResourceRequest)(nil),         // 15: vdp.connector.v1alpha.GetUserConnectorResourceRequest
	(*GetUserConnectorResourceResponse)(nil),        // 16: vdp.connector.v1alpha.GetUserConnectorResourceResponse
	(*UpdateUserConnectorResourceRequest)(nil),      // 17: vdp.connector.v1alpha.UpdateUserConnectorResourceRequest
	(*UpdateUserConnectorResourceResponse)(nil),     // 18: vdp.connector.v1alpha.UpdateUserConnectorResourceResponse
	(*DeleteUserConnectorResourceRequest)(nil),      // 19: vdp.connector.v1alpha.DeleteUserConnectorResourceRequest
	(*DeleteUserConnectorResourceResponse)(nil),     // 20: vdp.connector.v1alpha.DeleteUserConnectorResourceResponse
	(*ConnectUserConnectorResourceRequest)(nil),     // 21: vdp.connector.v1alpha.ConnectUserConnectorResourceRequest
	(*ConnectUserConnectorResourceResponse)(nil),    // 22: vdp.connector.v1alpha.ConnectUserConnectorResourceResponse
	(*DisconnectUserConnectorResourceRequest)(nil),  // 23: vdp.connector.v1alpha.DisconnectUserConnectorResourceRequest
	(*DisconnectUserConnectorResourceResponse)(nil), // 24: vdp.connector.v1alpha.DisconnectUserConnectorResourceResponse
	(*RenameUserConnectorResourceRequest)(nil),      // 25: vdp.connector.v1alpha.RenameUserConnectorResourceRequest
	(*RenameUserConnectorResourceResponse)(nil),     // 26: vdp.connector.v1alpha.RenameUserConnectorResourceResponse
	(*ExecuteUserConnectorResourceRequest)(nil),     // 27: vdp.connector.v1alpha.ExecuteUserConnectorResourceRequest
	(*ExecuteUserConnectorResourceResponse)(nil),    // 28: vdp.connector.v1alpha.ExecuteUserConnectorResourceResponse
	(*TestUserConnectorResourceRequest)(nil),        // 29: vdp.connector.v1alpha.TestUserConnectorResourceRequest
	(*TestUserConnectorResourceResponse)(nil),       // 30: vdp.connector.v1alpha.TestUserConnectorResourceResponse
	(*WatchUserConnectorResourceRequest)(nil),       // 31: vdp.connector.v1alpha.WatchUserConnectorResourceRequest
	(*WatchUserConnectorResourceResponse)(nil),      // 32: vdp.connector.v1alpha.WatchUserConnectorResourceResponse
	(*ListConnectorResourcesAdminRequest)(nil),      // 33: vdp.connector.v1alpha.ListConnectorResourcesAdminRequest
	(*ListConnectorResourcesAdminResponse)(nil),     // 34: vdp.connector.v1alpha.ListConnectorResourcesAdminResponse
	(*LookUpConnectorResourceAdminRequest)(nil),     // 35: vdp.connector.v1alpha.LookUpConnectorResourceAdminRequest
	(*LookUpConnectorResourceAdminResponse)(nil),    // 36: vdp.connector.v1alpha.LookUpConnectorResourceAdminResponse
	(*CheckConnectorResourceRequest)(nil),           // 37: vdp.connector.v1alpha.CheckConnectorResourceRequest
	(*CheckConnectorResourceResponse)(nil),          // 38: vdp.connector.v1alpha.CheckConnectorResourceResponse
	(*v1alpha.HealthCheckRequest)(nil),              // 39: common.healthcheck.v1alpha.HealthCheckRequest
	(*v1alpha.HealthCheckResponse)(nil),             // 40: common.healthcheck.v1alpha.HealthCheckResponse
	(ConnectorType)(0),                              // 41: vdp.connector.v1alpha.ConnectorType
	(*structpb.Struct)(nil),                         // 42: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),                   // 43: google.protobuf.Timestamp
	(*ConnectorDefinition)(nil),                     // 44: vdp.connector.v1alpha.ConnectorDefinition
	(View)(0),                                       // 45: vdp.connector.v1alpha.View
	(*fieldmaskpb.FieldMask)(nil),                   // 46: google.protobuf.FieldMask
}
var file_vdp_connector_v1alpha_connector_proto_depIdxs = []int32{
	39, // 0: vdp.connector.v1alpha.LivenessRequest.health_check_request:type_name -> common.healthcheck.v1alpha.HealthCheckRequest
	40, // 1: vdp.connector.v1alpha.LivenessResponse.health_check_response:type_name -> common.healthcheck.v1alpha.HealthCheckResponse
	39, // 2: vdp.connector.v1alpha.ReadinessRequest.health_check_request:type_name -> common.healthcheck.v1alpha.HealthCheckRequest
	40, // 3: vdp.connector.v1alpha.ReadinessResponse.health_check_response:type_name -> common.healthcheck.v1alpha.HealthCheckResponse
	41, // 4: vdp.connector.v1alpha.ConnectorResource.type:type_name -> vdp.connector.v1alpha.ConnectorType
	42, // 5: vdp.connector.v1alpha.ConnectorResource.configuration:type_name -> google.protobuf.Struct
	0,  // 6: vdp.connector.v1alpha.ConnectorResource.state:type_name -> vdp.connector.v1alpha.ConnectorResource.State
	43, // 7: vdp.connector.v1alpha.ConnectorResource.create_time:type_name -> google.protobuf.Timestamp
	43, // 8: vdp.connector.v1alpha.ConnectorResource.update_time:type_name -> google.protobuf.Timestamp
	1,  // 9: vdp.connector.v1alpha.ConnectorResource.visibility:type_name -> vdp.connector.v1alpha.ConnectorResource.Visibility
	44, // 10: vdp.connector.v1alpha.ConnectorResource.connector_definition:type_name -> vdp.connector.v1alpha.ConnectorDefinition
	43, // 11: vdp.connector.v1alpha.ConnectorResource.delete_time:type_name -> google.protobuf.Timestamp
	45, // 12: vdp.connector.v1alpha.ListConnectorResourcesRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 13: vdp.connector.v1alpha.ListConnectorResourcesResponse.connector_resources:type_name -> vdp.connector.v1alpha.ConnectorResource
	45, // 14: vdp.connector.v1alpha.LookUpConnectorResourceRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 15: vdp.connector.v1alpha.LookUpConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	6,  // 16: vdp.connector.v1alpha.CreateUserConnectorResourceRequest.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	6,  // 17: vdp.connector.v1alpha.CreateUserConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	45, // 18: vdp.connector.v1alpha.ListUserConnectorResourcesRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 19: vdp.connector.v1alpha.ListUserConnectorResourcesResponse.connector_resources:type_name -> vdp.connector.v1alpha.ConnectorResource
	45, // 20: vdp.connector.v1alpha.GetUserConnectorResourceRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 21: vdp.connector.v1alpha.GetUserConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	6,  // 22: vdp.connector.v1alpha.UpdateUserConnectorResourceRequest.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	46, // 23: vdp.connector.v1alpha.UpdateUserConnectorResourceRequest.update_mask:type_name -> google.protobuf.FieldMask
	6,  // 24: vdp.connector.v1alpha.UpdateUserConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	6,  // 25: vdp.connector.v1alpha.ConnectUserConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	6,  // 26: vdp.connector.v1alpha.DisconnectUserConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	6,  // 27: vdp.connector.v1alpha.RenameUserConnectorResourceResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	42, // 28: vdp.connector.v1alpha.ExecuteUserConnectorResourceRequest.inputs:type_name -> google.protobuf.Struct
	42, // 29: vdp.connector.v1alpha.ExecuteUserConnectorResourceResponse.outputs:type_name -> google.protobuf.Struct
	0,  // 30: vdp.connector.v1alpha.TestUserConnectorResourceResponse.state:type_name -> vdp.connector.v1alpha.ConnectorResource.State
	0,  // 31: vdp.connector.v1alpha.WatchUserConnectorResourceResponse.state:type_name -> vdp.connector.v1alpha.ConnectorResource.State
	45, // 32: vdp.connector.v1alpha.ListConnectorResourcesAdminRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 33: vdp.connector.v1alpha.ListConnectorResourcesAdminResponse.connector_resources:type_name -> vdp.connector.v1alpha.ConnectorResource
	45, // 34: vdp.connector.v1alpha.LookUpConnectorResourceAdminRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 35: vdp.connector.v1alpha.LookUpConnectorResourceAdminResponse.connector_resource:type_name -> vdp.connector.v1alpha.ConnectorResource
	0,  // 36: vdp.connector.v1alpha.CheckConnectorResourceResponse.state:type_name -> vdp.connector.v1alpha.ConnectorResource.State
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_vdp_connector_v1alpha_connector_proto_init() }
func file_vdp_connector_v1alpha_connector_proto_init() {
	if File_vdp_connector_v1alpha_connector_proto != nil {
		return
	}
	file_vdp_connector_v1alpha_connector_definition_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vdp_connector_v1alpha_connector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectorResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectorResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserConnectorResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserConnectorResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchUserConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectorResourcesAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectorResourcesAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpConnectorResourceAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookUpConnectorResourceAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectorResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectorResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ConnectorResource_User)(nil),
		(*ConnectorResource_Org)(nil),
	}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_proto_msgTypes[33].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vdp_connector_v1alpha_connector_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vdp_connector_v1alpha_connector_proto_goTypes,
		DependencyIndexes: file_vdp_connector_v1alpha_connector_proto_depIdxs,
		EnumInfos:         file_vdp_connector_v1alpha_connector_proto_enumTypes,
		MessageInfos:      file_vdp_connector_v1alpha_connector_proto_msgTypes,
	}.Build()
	File_vdp_connector_v1alpha_connector_proto = out.File
	file_vdp_connector_v1alpha_connector_proto_rawDesc = nil
	file_vdp_connector_v1alpha_connector_proto_goTypes = nil
	file_vdp_connector_v1alpha_connector_proto_depIdxs = nil
}
