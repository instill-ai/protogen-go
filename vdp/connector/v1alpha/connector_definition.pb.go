// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: vdp/connector/v1alpha/connector_definition.proto

package connectorv1alpha

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	date "google.golang.org/genproto/googleapis/type/date"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// View enumerates the definition views
type View int32

const (
	// View: UNSPECIFIED
	View_VIEW_UNSPECIFIED View = 0
	// View: BASIC
	View_VIEW_BASIC View = 1
	// View: FULL
	View_VIEW_FULL View = 2
)

// Enum value maps for View.
var (
	View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "VIEW_BASIC",
		2: "VIEW_FULL",
	}
	View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"VIEW_BASIC":       1,
		"VIEW_FULL":        2,
	}
)

func (x View) Enum() *View {
	p := new(View)
	*p = x
	return p
}

func (x View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (View) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_connector_v1alpha_connector_definition_proto_enumTypes[0].Descriptor()
}

func (View) Type() protoreflect.EnumType {
	return &file_vdp_connector_v1alpha_connector_definition_proto_enumTypes[0]
}

func (x View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use View.Descriptor instead.
func (View) EnumDescriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{0}
}

// ConnectorType enumerates connector types
type ConnectorType int32

const (
	// ConnectorType: UNSPECIFIED
	ConnectorType_CONNECTOR_TYPE_UNSPECIFIED ConnectorType = 0
	// ConnectorType: SOURCE
	ConnectorType_CONNECTOR_TYPE_SOURCE ConnectorType = 1
	// ConnectorType: DESTINATION
	ConnectorType_CONNECTOR_TYPE_DESTINATION ConnectorType = 2
)

// Enum value maps for ConnectorType.
var (
	ConnectorType_name = map[int32]string{
		0: "CONNECTOR_TYPE_UNSPECIFIED",
		1: "CONNECTOR_TYPE_SOURCE",
		2: "CONNECTOR_TYPE_DESTINATION",
	}
	ConnectorType_value = map[string]int32{
		"CONNECTOR_TYPE_UNSPECIFIED": 0,
		"CONNECTOR_TYPE_SOURCE":      1,
		"CONNECTOR_TYPE_DESTINATION": 2,
	}
)

func (x ConnectorType) Enum() *ConnectorType {
	p := new(ConnectorType)
	*p = x
	return p
}

func (x ConnectorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectorType) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_connector_v1alpha_connector_definition_proto_enumTypes[1].Descriptor()
}

func (ConnectorType) Type() protoreflect.EnumType {
	return &file_vdp_connector_v1alpha_connector_definition_proto_enumTypes[1]
}

func (x ConnectorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectorType.Descriptor instead.
func (ConnectorType) EnumDescriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{1}
}

// ReleaseStage enumerates the release stages
type ReleaseStage int32

const (
	// ReleaseStage: UNSPECIFIED
	ReleaseStage_RELEASE_STAGE_UNSPECIFIED ReleaseStage = 0
	// ReleaseStage: ALPHA
	ReleaseStage_RELEASE_STAGE_ALPHA ReleaseStage = 1
	// ReleaseStage: BETA
	ReleaseStage_RELEASE_STAGE_BETA ReleaseStage = 2
	// ReleaseStage: GENERALLY_AVAILABLE
	ReleaseStage_RELEASE_STAGE_GENERALLY_AVAILABLE ReleaseStage = 3
	// ReleaseStage: CUSTOM
	ReleaseStage_RELEASE_STAGE_CUSTOM ReleaseStage = 4
)

// Enum value maps for ReleaseStage.
var (
	ReleaseStage_name = map[int32]string{
		0: "RELEASE_STAGE_UNSPECIFIED",
		1: "RELEASE_STAGE_ALPHA",
		2: "RELEASE_STAGE_BETA",
		3: "RELEASE_STAGE_GENERALLY_AVAILABLE",
		4: "RELEASE_STAGE_CUSTOM",
	}
	ReleaseStage_value = map[string]int32{
		"RELEASE_STAGE_UNSPECIFIED":         0,
		"RELEASE_STAGE_ALPHA":               1,
		"RELEASE_STAGE_BETA":                2,
		"RELEASE_STAGE_GENERALLY_AVAILABLE": 3,
		"RELEASE_STAGE_CUSTOM":              4,
	}
)

func (x ReleaseStage) Enum() *ReleaseStage {
	p := new(ReleaseStage)
	*p = x
	return p
}

func (x ReleaseStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReleaseStage) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_connector_v1alpha_connector_definition_proto_enumTypes[2].Descriptor()
}

func (ReleaseStage) Type() protoreflect.EnumType {
	return &file_vdp_connector_v1alpha_connector_definition_proto_enumTypes[2]
}

func (x ReleaseStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReleaseStage.Descriptor instead.
func (ReleaseStage) EnumDescriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{2}
}

//////////////////////////////////////////////////////////////////////////
// DockerImageSpec represents a data model for docker image name and the
// connector specification associated with it
type DockerImageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DockerImageSpec docker image
	DockerImage string `protobuf:"bytes,1,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	// DockerImageSpec spec data
	Spec *Spec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *DockerImageSpec) Reset() {
	*x = DockerImageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImageSpec) ProtoMessage() {}

func (x *DockerImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImageSpec.ProtoReflect.Descriptor instead.
func (*DockerImageSpec) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{0}
}

func (x *DockerImageSpec) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *DockerImageSpec) GetSpec() *Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// ConnectorDefinition represents the connector definition data model
type ConnectorDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectorDefinition title
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// ConnectorDefinition Docker repository
	DockerRepository string `protobuf:"bytes,2,opt,name=docker_repository,json=dockerRepository,proto3" json:"docker_repository,omitempty"`
	// ConnectorDefinition Docker image tag
	DockerImageTag string `protobuf:"bytes,3,opt,name=docker_image_tag,json=dockerImageTag,proto3" json:"docker_image_tag,omitempty"`
	// ConnectorDefinition documentation URL
	DocumentationUrl string `protobuf:"bytes,4,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	// ConnectorDefinition icon
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// ConnectorDefinition spec
	Spec *Spec `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	// ConnectorDefinition tombstone, i.e., if not set or false, the
	// configuration is active, or otherwise, if true, this configuration is
	// permanently off
	Tombstone bool `protobuf:"varint,7,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	// ConnectorDefinition public flag, i.e., true if this connector
	// definition is available to all workspaces
	Public bool `protobuf:"varint,8,opt,name=public,proto3" json:"public,omitempty"`
	// ConnectorDefinition custom flag, i.e., whether this is a custom
	// connector definition
	Custom bool `protobuf:"varint,9,opt,name=custom,proto3" json:"custom,omitempty"`
	// ConnectorDefinition release stage
	ReleaseStage ReleaseStage `protobuf:"varint,10,opt,name=release_stage,json=releaseStage,proto3,enum=vdp.connector.v1alpha.ReleaseStage" json:"release_stage,omitempty"`
	// ConnectorDefinition release date, i.e., the date when this connector
	// was first released, in yyyy-mm-dd format.
	ReleaseDate *date.Date `protobuf:"bytes,11,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	// ConnectorDefinition resource requirements
	ResourceRequirements *structpb.Struct `protobuf:"bytes,12,opt,name=resource_requirements,json=resourceRequirements,proto3" json:"resource_requirements,omitempty"`
	// ConnectorDefinition creation time
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// ConnectorDefinition update time
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *ConnectorDefinition) Reset() {
	*x = ConnectorDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorDefinition) ProtoMessage() {}

func (x *ConnectorDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorDefinition.ProtoReflect.Descriptor instead.
func (*ConnectorDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectorDefinition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConnectorDefinition) GetDockerRepository() string {
	if x != nil {
		return x.DockerRepository
	}
	return ""
}

func (x *ConnectorDefinition) GetDockerImageTag() string {
	if x != nil {
		return x.DockerImageTag
	}
	return ""
}

func (x *ConnectorDefinition) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *ConnectorDefinition) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ConnectorDefinition) GetSpec() *Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ConnectorDefinition) GetTombstone() bool {
	if x != nil {
		return x.Tombstone
	}
	return false
}

func (x *ConnectorDefinition) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *ConnectorDefinition) GetCustom() bool {
	if x != nil {
		return x.Custom
	}
	return false
}

func (x *ConnectorDefinition) GetReleaseStage() ReleaseStage {
	if x != nil {
		return x.ReleaseStage
	}
	return ReleaseStage_RELEASE_STAGE_UNSPECIFIED
}

func (x *ConnectorDefinition) GetReleaseDate() *date.Date {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *ConnectorDefinition) GetResourceRequirements() *structpb.Struct {
	if x != nil {
		return x.ResourceRequirements
	}
	return nil
}

func (x *ConnectorDefinition) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ConnectorDefinition) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// SourceConnectorDefinition represents the source connector definition resource
type SourceConnectorDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SourceConnectorDefinition resource name. It must have the format of
	// "connector-definitions/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// SourceConnectorDefinition UUID
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// SourceConnectorDefinition resource ID (the last segment of the resource
	// name) used to construct the resource name. This conforms to RFC-1034, which
	// restricts to letters, numbers, and hyphen, with the first character a
	// letter, the last a letter or a number, and a 63 character maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// SourceConnectorDefinition connector definition
	ConnectorDefinition *ConnectorDefinition `protobuf:"bytes,4,opt,name=connector_definition,json=connectorDefinition,proto3" json:"connector_definition,omitempty"`
}

func (x *SourceConnectorDefinition) Reset() {
	*x = SourceConnectorDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceConnectorDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceConnectorDefinition) ProtoMessage() {}

func (x *SourceConnectorDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceConnectorDefinition.ProtoReflect.Descriptor instead.
func (*SourceConnectorDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{2}
}

func (x *SourceConnectorDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceConnectorDefinition) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SourceConnectorDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SourceConnectorDefinition) GetConnectorDefinition() *ConnectorDefinition {
	if x != nil {
		return x.ConnectorDefinition
	}
	return nil
}

// DestinationConnectorDefinition represents the destination connector
// definition resource
type DestinationConnectorDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DestinationConnectorDefinition resource name. It must have the format of
	// "connector-definitions/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// DestinationConnectorDefinition UUID
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// DestinationConnectorDefinition resource ID (the last segment of the
	// resource name) used to construct the resource name. This conforms to
	// RFC-1034, which restricts to letters, numbers, and hyphen, with the first
	// character a letter, the last a letter or a number, and a 63 character
	// maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// DestinationConnectorDefinition connector definition
	ConnectorDefinition *ConnectorDefinition `protobuf:"bytes,4,opt,name=connector_definition,json=connectorDefinition,proto3" json:"connector_definition,omitempty"`
}

func (x *DestinationConnectorDefinition) Reset() {
	*x = DestinationConnectorDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestinationConnectorDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationConnectorDefinition) ProtoMessage() {}

func (x *DestinationConnectorDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationConnectorDefinition.ProtoReflect.Descriptor instead.
func (*DestinationConnectorDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{3}
}

func (x *DestinationConnectorDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DestinationConnectorDefinition) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DestinationConnectorDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DestinationConnectorDefinition) GetConnectorDefinition() *ConnectorDefinition {
	if x != nil {
		return x.ConnectorDefinition
	}
	return nil
}

//  SourceConnectorDefinition
//
// ListSourceConnectorDefinitionsRequest represents a request to list
// SourceConnectorDefinitions
type ListSourceConnectorDefinitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of SourceConnectorDefinitions to return. The service may
	// return fewer than this value. If unspecified, at most 10
	// SourceConnectorDefinitions will be returned. The maximum value is 100;
	// values above 100 will be coerced to 100.
	PageSize *int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Definition view (default is DEFINITION_VIEW_BASIC)
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *ListSourceConnectorDefinitionsRequest) Reset() {
	*x = ListSourceConnectorDefinitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourceConnectorDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourceConnectorDefinitionsRequest) ProtoMessage() {}

func (x *ListSourceConnectorDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourceConnectorDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*ListSourceConnectorDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{4}
}

func (x *ListSourceConnectorDefinitionsRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListSourceConnectorDefinitionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListSourceConnectorDefinitionsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// ListSourceConnectorDefinitionsResponse represents a response for a list of
// SourceConnectorDefinitions
type ListSourceConnectorDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of SourceConnectorDefinition resources
	SourceConnectorDefinitions []*SourceConnectorDefinition `protobuf:"bytes,1,rep,name=source_connector_definitions,json=sourceConnectorDefinitions,proto3" json:"source_connector_definitions,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of SourceConnectorDefinition resources
	TotalSize int64 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListSourceConnectorDefinitionsResponse) Reset() {
	*x = ListSourceConnectorDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourceConnectorDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourceConnectorDefinitionsResponse) ProtoMessage() {}

func (x *ListSourceConnectorDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourceConnectorDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*ListSourceConnectorDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{5}
}

func (x *ListSourceConnectorDefinitionsResponse) GetSourceConnectorDefinitions() []*SourceConnectorDefinition {
	if x != nil {
		return x.SourceConnectorDefinitions
	}
	return nil
}

func (x *ListSourceConnectorDefinitionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListSourceConnectorDefinitionsResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetSourceConnectorDefinitionRequest represents a request to query a
// SourceConnectorDefinition resource
type GetSourceConnectorDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SourceConnectorDefinition resource name. It must have the format of
	// "source-connector-definitions/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// SourceConnectorDefinition resource view (default is DEFINITION_VIEW_BASIC)
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetSourceConnectorDefinitionRequest) Reset() {
	*x = GetSourceConnectorDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourceConnectorDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourceConnectorDefinitionRequest) ProtoMessage() {}

func (x *GetSourceConnectorDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourceConnectorDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetSourceConnectorDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{6}
}

func (x *GetSourceConnectorDefinitionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSourceConnectorDefinitionRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetSourceConnectorDefinitionResponse represents a SourceConnectorDefinition
// response
type GetSourceConnectorDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A SourceConnectorDefinition resource
	SourceConnectorDefinition *SourceConnectorDefinition `protobuf:"bytes,1,opt,name=source_connector_definition,json=sourceConnectorDefinition,proto3" json:"source_connector_definition,omitempty"`
}

func (x *GetSourceConnectorDefinitionResponse) Reset() {
	*x = GetSourceConnectorDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourceConnectorDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourceConnectorDefinitionResponse) ProtoMessage() {}

func (x *GetSourceConnectorDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourceConnectorDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetSourceConnectorDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{7}
}

func (x *GetSourceConnectorDefinitionResponse) GetSourceConnectorDefinition() *SourceConnectorDefinition {
	if x != nil {
		return x.SourceConnectorDefinition
	}
	return nil
}

///////////////////////////////////////////////////////////////////////
//  DestinationConnectorDefinition
//
// ListDestinationConnectorDefinitionsRequest represents a request to list
// DestinationConnectorDefinitions
type ListDestinationConnectorDefinitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of DestinationConnectorDefinitions to return. The
	// service may return fewer than this value. If unspecified, at most 10
	// DestinationConnectorDefinitions will be returned. The maximum value is 100;
	// values above 100 will be coerced to 100.
	PageSize *int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Definition view (default is DEFINITION_VIEW_BASIC)
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *ListDestinationConnectorDefinitionsRequest) Reset() {
	*x = ListDestinationConnectorDefinitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDestinationConnectorDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDestinationConnectorDefinitionsRequest) ProtoMessage() {}

func (x *ListDestinationConnectorDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDestinationConnectorDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*ListDestinationConnectorDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{8}
}

func (x *ListDestinationConnectorDefinitionsRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListDestinationConnectorDefinitionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListDestinationConnectorDefinitionsRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// ListDestinationConnectorDefinitionsResponse represents a response for a list
// of DestinationConnectorDefinitions
type ListDestinationConnectorDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of DestinationConnectorDefinition resources
	DestinationConnectorDefinitions []*DestinationConnectorDefinition `protobuf:"bytes,1,rep,name=destination_connector_definitions,json=destinationConnectorDefinitions,proto3" json:"destination_connector_definitions,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of DestinationConnectorDefinition resources
	TotalSize int64 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListDestinationConnectorDefinitionsResponse) Reset() {
	*x = ListDestinationConnectorDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDestinationConnectorDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDestinationConnectorDefinitionsResponse) ProtoMessage() {}

func (x *ListDestinationConnectorDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDestinationConnectorDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*ListDestinationConnectorDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{9}
}

func (x *ListDestinationConnectorDefinitionsResponse) GetDestinationConnectorDefinitions() []*DestinationConnectorDefinition {
	if x != nil {
		return x.DestinationConnectorDefinitions
	}
	return nil
}

func (x *ListDestinationConnectorDefinitionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDestinationConnectorDefinitionsResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetDestinationConnectorDefinitionRequest represents a request to query a
// DestinationConnectorDefinition resource
type GetDestinationConnectorDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DestinationConnectorDefinition resource name. It must have the format of
	// "source-connector-definitions/*"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// DestinationConnectorDefinition resource view (default is
	// DEFINITION_VIEW_BASIC)
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=vdp.connector.v1alpha.View,oneof" json:"view,omitempty"`
}

func (x *GetDestinationConnectorDefinitionRequest) Reset() {
	*x = GetDestinationConnectorDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDestinationConnectorDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDestinationConnectorDefinitionRequest) ProtoMessage() {}

func (x *GetDestinationConnectorDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDestinationConnectorDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetDestinationConnectorDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{10}
}

func (x *GetDestinationConnectorDefinitionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDestinationConnectorDefinitionRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetDestinationConnectorDefinitionResponse represents a
// DestinationConnectorDefinition response
type GetDestinationConnectorDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A DestinationConnectorDefinition resource
	DestinationConnectorDefinition *DestinationConnectorDefinition `protobuf:"bytes,1,opt,name=destination_connector_definition,json=destinationConnectorDefinition,proto3" json:"destination_connector_definition,omitempty"`
}

func (x *GetDestinationConnectorDefinitionResponse) Reset() {
	*x = GetDestinationConnectorDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDestinationConnectorDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDestinationConnectorDefinitionResponse) ProtoMessage() {}

func (x *GetDestinationConnectorDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDestinationConnectorDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetDestinationConnectorDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP(), []int{11}
}

func (x *GetDestinationConnectorDefinitionResponse) GetDestinationConnectorDefinition() *DestinationConnectorDefinition {
	if x != nil {
		return x.DestinationConnectorDefinition
	}
	return nil
}

var File_vdp_connector_v1alpha_connector_definition_proto protoreflect.FileDescriptor

var file_vdp_connector_v1alpha_connector_definition_proto_rawDesc = []byte{
	0x0a, 0x30, 0x76, 0x64, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x76, 0x64,
	0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f,
	0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0xd0, 0x05, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x30, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x67, 0x12, 0x30, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76,
	0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x15, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x40,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x19, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x62, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x6b, 0xea, 0x41, 0x68, 0x0a, 0x2a,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68,
	0x2f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x22, 0xc5, 0x02, 0x0a, 0x1e, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x62,
	0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76,
	0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x7a, 0xea, 0x41, 0x77, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x22, 0xd8,
	0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0xe3, 0x01, 0x0a, 0x26, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xda, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5b, 0x92, 0x41, 0x26, 0xca, 0x3e, 0x23, 0xfa, 0x02, 0x20,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6e, 0x61, 0x6d, 0x65,
	0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2c, 0x0a, 0x2a, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x98, 0x01, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x1b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x01, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0xf8, 0x01, 0x0a, 0x2b, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x21, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1f, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x79, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x65, 0x92,
	0x41, 0x2b, 0xca, 0x3e, 0x28, 0xfa, 0x02, 0x25, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x31, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0xac,
	0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x20,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1e, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x3b, 0x0a,
	0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x56,
	0x49, 0x45, 0x57, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x56,
	0x49, 0x45, 0x57, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x6a, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x9f, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x4c, 0x45, 0x41,
	0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45,
	0x5f, 0x42, 0x45, 0x54, 0x41, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x4c, 0x45, 0x41,
	0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c,
	0x4c, 0x59, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x18,
	0x0a, 0x14, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x04, 0x42, 0xf5, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x64, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x18, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x64, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x56,
	0x43, 0x58, 0xaa, 0x02, 0x15, 0x56, 0x64, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x15, 0x56, 0x64, 0x70,
	0x5c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0xe2, 0x02, 0x21, 0x56, 0x64, 0x70, 0x5c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x56, 0x64, 0x70, 0x3a, 0x3a, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vdp_connector_v1alpha_connector_definition_proto_rawDescOnce sync.Once
	file_vdp_connector_v1alpha_connector_definition_proto_rawDescData = file_vdp_connector_v1alpha_connector_definition_proto_rawDesc
)

func file_vdp_connector_v1alpha_connector_definition_proto_rawDescGZIP() []byte {
	file_vdp_connector_v1alpha_connector_definition_proto_rawDescOnce.Do(func() {
		file_vdp_connector_v1alpha_connector_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_vdp_connector_v1alpha_connector_definition_proto_rawDescData)
	})
	return file_vdp_connector_v1alpha_connector_definition_proto_rawDescData
}

var file_vdp_connector_v1alpha_connector_definition_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_vdp_connector_v1alpha_connector_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_vdp_connector_v1alpha_connector_definition_proto_goTypes = []interface{}{
	(View)(0),                                           // 0: vdp.connector.v1alpha.View
	(ConnectorType)(0),                                  // 1: vdp.connector.v1alpha.ConnectorType
	(ReleaseStage)(0),                                   // 2: vdp.connector.v1alpha.ReleaseStage
	(*DockerImageSpec)(nil),                             // 3: vdp.connector.v1alpha.DockerImageSpec
	(*ConnectorDefinition)(nil),                         // 4: vdp.connector.v1alpha.ConnectorDefinition
	(*SourceConnectorDefinition)(nil),                   // 5: vdp.connector.v1alpha.SourceConnectorDefinition
	(*DestinationConnectorDefinition)(nil),              // 6: vdp.connector.v1alpha.DestinationConnectorDefinition
	(*ListSourceConnectorDefinitionsRequest)(nil),       // 7: vdp.connector.v1alpha.ListSourceConnectorDefinitionsRequest
	(*ListSourceConnectorDefinitionsResponse)(nil),      // 8: vdp.connector.v1alpha.ListSourceConnectorDefinitionsResponse
	(*GetSourceConnectorDefinitionRequest)(nil),         // 9: vdp.connector.v1alpha.GetSourceConnectorDefinitionRequest
	(*GetSourceConnectorDefinitionResponse)(nil),        // 10: vdp.connector.v1alpha.GetSourceConnectorDefinitionResponse
	(*ListDestinationConnectorDefinitionsRequest)(nil),  // 11: vdp.connector.v1alpha.ListDestinationConnectorDefinitionsRequest
	(*ListDestinationConnectorDefinitionsResponse)(nil), // 12: vdp.connector.v1alpha.ListDestinationConnectorDefinitionsResponse
	(*GetDestinationConnectorDefinitionRequest)(nil),    // 13: vdp.connector.v1alpha.GetDestinationConnectorDefinitionRequest
	(*GetDestinationConnectorDefinitionResponse)(nil),   // 14: vdp.connector.v1alpha.GetDestinationConnectorDefinitionResponse
	(*Spec)(nil),                  // 15: vdp.connector.v1alpha.Spec
	(*date.Date)(nil),             // 16: google.type.Date
	(*structpb.Struct)(nil),       // 17: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 18: google.protobuf.Timestamp
}
var file_vdp_connector_v1alpha_connector_definition_proto_depIdxs = []int32{
	15, // 0: vdp.connector.v1alpha.DockerImageSpec.spec:type_name -> vdp.connector.v1alpha.Spec
	15, // 1: vdp.connector.v1alpha.ConnectorDefinition.spec:type_name -> vdp.connector.v1alpha.Spec
	2,  // 2: vdp.connector.v1alpha.ConnectorDefinition.release_stage:type_name -> vdp.connector.v1alpha.ReleaseStage
	16, // 3: vdp.connector.v1alpha.ConnectorDefinition.release_date:type_name -> google.type.Date
	17, // 4: vdp.connector.v1alpha.ConnectorDefinition.resource_requirements:type_name -> google.protobuf.Struct
	18, // 5: vdp.connector.v1alpha.ConnectorDefinition.create_time:type_name -> google.protobuf.Timestamp
	18, // 6: vdp.connector.v1alpha.ConnectorDefinition.update_time:type_name -> google.protobuf.Timestamp
	4,  // 7: vdp.connector.v1alpha.SourceConnectorDefinition.connector_definition:type_name -> vdp.connector.v1alpha.ConnectorDefinition
	4,  // 8: vdp.connector.v1alpha.DestinationConnectorDefinition.connector_definition:type_name -> vdp.connector.v1alpha.ConnectorDefinition
	0,  // 9: vdp.connector.v1alpha.ListSourceConnectorDefinitionsRequest.view:type_name -> vdp.connector.v1alpha.View
	5,  // 10: vdp.connector.v1alpha.ListSourceConnectorDefinitionsResponse.source_connector_definitions:type_name -> vdp.connector.v1alpha.SourceConnectorDefinition
	0,  // 11: vdp.connector.v1alpha.GetSourceConnectorDefinitionRequest.view:type_name -> vdp.connector.v1alpha.View
	5,  // 12: vdp.connector.v1alpha.GetSourceConnectorDefinitionResponse.source_connector_definition:type_name -> vdp.connector.v1alpha.SourceConnectorDefinition
	0,  // 13: vdp.connector.v1alpha.ListDestinationConnectorDefinitionsRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 14: vdp.connector.v1alpha.ListDestinationConnectorDefinitionsResponse.destination_connector_definitions:type_name -> vdp.connector.v1alpha.DestinationConnectorDefinition
	0,  // 15: vdp.connector.v1alpha.GetDestinationConnectorDefinitionRequest.view:type_name -> vdp.connector.v1alpha.View
	6,  // 16: vdp.connector.v1alpha.GetDestinationConnectorDefinitionResponse.destination_connector_definition:type_name -> vdp.connector.v1alpha.DestinationConnectorDefinition
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_vdp_connector_v1alpha_connector_definition_proto_init() }
func file_vdp_connector_v1alpha_connector_definition_proto_init() {
	if File_vdp_connector_v1alpha_connector_definition_proto != nil {
		return
	}
	file_vdp_connector_v1alpha_spec_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceConnectorDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestinationConnectorDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourceConnectorDefinitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourceConnectorDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourceConnectorDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourceConnectorDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDestinationConnectorDefinitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDestinationConnectorDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDestinationConnectorDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDestinationConnectorDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_vdp_connector_v1alpha_connector_definition_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vdp_connector_v1alpha_connector_definition_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vdp_connector_v1alpha_connector_definition_proto_goTypes,
		DependencyIndexes: file_vdp_connector_v1alpha_connector_definition_proto_depIdxs,
		EnumInfos:         file_vdp_connector_v1alpha_connector_definition_proto_enumTypes,
		MessageInfos:      file_vdp_connector_v1alpha_connector_definition_proto_msgTypes,
	}.Build()
	File_vdp_connector_v1alpha_connector_definition_proto = out.File
	file_vdp_connector_v1alpha_connector_definition_proto_rawDesc = nil
	file_vdp_connector_v1alpha_connector_definition_proto_goTypes = nil
	file_vdp_connector_v1alpha_connector_definition_proto_depIdxs = nil
}
