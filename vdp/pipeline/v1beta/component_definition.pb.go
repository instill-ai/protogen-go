// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: vdp/pipeline/v1beta/component_definition.proto

package pipelinev1beta

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// View defines how a component definition is presented.
type ComponentDefinition_View int32

const (
	// Unspecified, equivalent to BASIC.
	ComponentDefinition_VIEW_UNSPECIFIED ComponentDefinition_View = 0
	// Default view, only includes basic information (removes the `spec`
	// field).
	ComponentDefinition_VIEW_BASIC ComponentDefinition_View = 1
	// Full representation.
	ComponentDefinition_VIEW_FULL ComponentDefinition_View = 2
)

// Enum value maps for ComponentDefinition_View.
var (
	ComponentDefinition_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "VIEW_BASIC",
		2: "VIEW_FULL",
	}
	ComponentDefinition_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"VIEW_BASIC":       1,
		"VIEW_FULL":        2,
	}
)

func (x ComponentDefinition_View) Enum() *ComponentDefinition_View {
	p := new(ComponentDefinition_View)
	*p = x
	return p
}

func (x ComponentDefinition_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentDefinition_View) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[0].Descriptor()
}

func (ComponentDefinition_View) Type() protoreflect.EnumType {
	return &file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[0]
}

func (x ComponentDefinition_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentDefinition_View.Descriptor instead.
func (ComponentDefinition_View) EnumDescriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0, 0}
}

// ReleaseStage defines the release stage of a component. This is used to
// group components with the same pre-relase groups (e.g. `0.1.0-beta`,
// `0.1.0-beta.1` -> `RELEASE_STAGE_BETA`) and to include other "in progress"
// (i.e. coming soon, open for contributions) stages that may not be relevant
// within semantic versioning.
// See the documentation of each value for potential constraints between
// `version` and `release_stage` fields.`
type ComponentDefinition_ReleaseStage int32

const (
	// Unspecified.
	ComponentDefinition_RELEASE_STAGE_UNSPECIFIED ComponentDefinition_ReleaseStage = 0
	// This component is unimplemented and community contributions are welcome
	// for this component.
	//
	// It is recommended that the major and minor versions for definitions at
	// this release stage is kept at 0, e.g., `0.0.1`, `0.0.4`, etc.
	ComponentDefinition_RELEASE_STAGE_OPEN_FOR_CONTRIBUTION ComponentDefinition_ReleaseStage = 1
	// The implementation of this component is planned and will be tackled by
	// the Instill AI team.
	//
	// It is recommended that the major and minor versions for definitions at
	// this release stage is kept at 0, e.g., `0.0.1`, `0.0.4`, etc.
	ComponentDefinition_RELEASE_STAGE_COMING_SOON ComponentDefinition_ReleaseStage = 2
	// Initial implementation intended to gather feedback and issues from early
	// adopters. Alpha releases are discouraged for production use cases.
	//
	// The `version` field in the definition must have `alpha` as its first
	// pre-release identifier, e.g., `0.1.0-alpha`, `0.1.3-alpha.1`.
	ComponentDefinition_RELEASE_STAGE_ALPHA ComponentDefinition_ReleaseStage = 3
	// The component has reached stability and no backwards incompatible
	// changes are expected. Before reaching general availability, it should be
	// validated by a broader group of users. Some fixes might be added during
	// this process.
	//
	// The `version` field in the definition must have `beta` as its first
	// pre-release identifier, e.g., `0.1.0-beta`, `0.1.3-beta.1`.
	ComponentDefinition_RELEASE_STAGE_BETA ComponentDefinition_ReleaseStage = 4
	// Generally available - ready for use in production and fully supported by
	// Instill AI.
	ComponentDefinition_RELEASE_STAGE_GA ComponentDefinition_ReleaseStage = 5
)

// Enum value maps for ComponentDefinition_ReleaseStage.
var (
	ComponentDefinition_ReleaseStage_name = map[int32]string{
		0: "RELEASE_STAGE_UNSPECIFIED",
		1: "RELEASE_STAGE_OPEN_FOR_CONTRIBUTION",
		2: "RELEASE_STAGE_COMING_SOON",
		3: "RELEASE_STAGE_ALPHA",
		4: "RELEASE_STAGE_BETA",
		5: "RELEASE_STAGE_GA",
	}
	ComponentDefinition_ReleaseStage_value = map[string]int32{
		"RELEASE_STAGE_UNSPECIFIED":           0,
		"RELEASE_STAGE_OPEN_FOR_CONTRIBUTION": 1,
		"RELEASE_STAGE_COMING_SOON":           2,
		"RELEASE_STAGE_ALPHA":                 3,
		"RELEASE_STAGE_BETA":                  4,
		"RELEASE_STAGE_GA":                    5,
	}
)

func (x ComponentDefinition_ReleaseStage) Enum() *ComponentDefinition_ReleaseStage {
	p := new(ComponentDefinition_ReleaseStage)
	*p = x
	return p
}

func (x ComponentDefinition_ReleaseStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentDefinition_ReleaseStage) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[1].Descriptor()
}

func (ComponentDefinition_ReleaseStage) Type() protoreflect.EnumType {
	return &file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[1]
}

func (x ComponentDefinition_ReleaseStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentDefinition_ReleaseStage.Descriptor instead.
func (ComponentDefinition_ReleaseStage) EnumDescriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0, 1}
}

// ComponentDefinition describes a certain type of Component.
type ComponentDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the component definition, defined by its ID.
	// - Format: `component-definitions/{id}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Component definition UUID.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Component definition resource ID (used in `name` as the last segment). This
	// conforms to RFC-1034, which restricts to letters, numbers, and hyphen,
	// with the first character a letter, the last a letter or a number, and a 63
	// character maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Component definition title.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Component definition documentation URL.
	DocumentationUrl string `protobuf:"bytes,5,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	// Component definition icon. This is a path that's relative to the root of
	// the component implementation (see `source_url`) and that allows
	// frontend applications to pull and locate the icons.
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// Component definition specification.
	Spec *ComponentDefinition_Spec `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
	// Component definition type.
	Type ComponentType `protobuf:"varint,8,opt,name=type,proto3,enum=vdp.pipeline.v1beta.ComponentType" json:"type,omitempty"`
	// Component definition tombstone. If true, this configuration is permanently
	// off. Otherwise, the configuration is active.
	Tombstone bool `protobuf:"varint,9,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	// The public flag determines whether this connector definition is available
	// to all workspaces.
	Public bool `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`
	// Component definition custom flag, i.e., whether this is a custom
	// component definition.
	Custom bool `protobuf:"varint,11,opt,name=custom,proto3" json:"custom,omitempty"`
	// Component definition vendor name.
	Vendor string `protobuf:"bytes,12,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Vendor-specific attributes.
	VendorAttributes *structpb.Struct `protobuf:"bytes,13,opt,name=vendor_attributes,json=vendorAttributes,proto3" json:"vendor_attributes,omitempty"`
	// Source code URL. This points to the source code where the component is
	// implemented.
	SourceUrl string `protobuf:"bytes,14,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	// Component definition version. This is a string that fulfills the SemVer
	// specification (e.g. `1.0.0-beta`).
	Version string `protobuf:"bytes,15,opt,name=version,proto3" json:"version,omitempty"`
	// List of tasks that can be executed by the component.
	Tasks []*ComponentTask `protobuf:"bytes,16,rep,name=tasks,proto3" json:"tasks,omitempty"`
	// Short description of the component.
	Description string `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"`
	// Release stage.
	ReleaseStage ComponentDefinition_ReleaseStage `protobuf:"varint,18,opt,name=release_stage,json=releaseStage,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_ReleaseStage" json:"release_stage,omitempty"`
	// List of events that can be produced by the component.
	Events []*ComponentEvent `protobuf:"bytes,19,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ComponentDefinition) Reset() {
	*x = ComponentDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDefinition) ProtoMessage() {}

func (x *ComponentDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDefinition.ProtoReflect.Descriptor instead.
func (*ComponentDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentDefinition) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ComponentDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentDefinition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComponentDefinition) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *ComponentDefinition) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ComponentDefinition) GetSpec() *ComponentDefinition_Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ComponentDefinition) GetType() ComponentType {
	if x != nil {
		return x.Type
	}
	return ComponentType_COMPONENT_TYPE_UNSPECIFIED
}

func (x *ComponentDefinition) GetTombstone() bool {
	if x != nil {
		return x.Tombstone
	}
	return false
}

func (x *ComponentDefinition) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *ComponentDefinition) GetCustom() bool {
	if x != nil {
		return x.Custom
	}
	return false
}

func (x *ComponentDefinition) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *ComponentDefinition) GetVendorAttributes() *structpb.Struct {
	if x != nil {
		return x.VendorAttributes
	}
	return nil
}

func (x *ComponentDefinition) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *ComponentDefinition) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ComponentDefinition) GetTasks() []*ComponentTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ComponentDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComponentDefinition) GetReleaseStage() ComponentDefinition_ReleaseStage {
	if x != nil {
		return x.ReleaseStage
	}
	return ComponentDefinition_RELEASE_STAGE_UNSPECIFIED
}

func (x *ComponentDefinition) GetEvents() []*ComponentEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// DataSpecification describes the JSON schema of component input and output.
// Note: This message will be renamed to TaskSpecifications in the future.
type DataSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JSON schema describing the component input data.
	Input *structpb.Struct `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// JSON schema describing the component output data.
	Output *structpb.Struct `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *DataSpecification) Reset() {
	*x = DataSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSpecification) ProtoMessage() {}

func (x *DataSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSpecification.ProtoReflect.Descriptor instead.
func (*DataSpecification) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{1}
}

func (x *DataSpecification) GetInput() *structpb.Struct {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *DataSpecification) GetOutput() *structpb.Struct {
	if x != nil {
		return x.Output
	}
	return nil
}

// EventSpecification describes the JSON schema of component event setup and examples.
type EventSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JSON schema describing the component event setup data.
	SetupSchema *structpb.Struct `protobuf:"bytes,1,opt,name=setup_schema,json=setupSchema,proto3" json:"setup_schema,omitempty"`
	// JSON schema describing the component event message data.
	MessageSchema *structpb.Struct `protobuf:"bytes,2,opt,name=message_schema,json=messageSchema,proto3" json:"message_schema,omitempty"`
	// JSON schema describing the component event examples.
	MessageExamples []*structpb.Struct `protobuf:"bytes,3,rep,name=message_examples,json=messageExamples,proto3" json:"message_examples,omitempty"`
}

func (x *EventSpecification) Reset() {
	*x = EventSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSpecification) ProtoMessage() {}

func (x *EventSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSpecification.ProtoReflect.Descriptor instead.
func (*EventSpecification) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{2}
}

func (x *EventSpecification) GetSetupSchema() *structpb.Struct {
	if x != nil {
		return x.SetupSchema
	}
	return nil
}

func (x *EventSpecification) GetMessageSchema() *structpb.Struct {
	if x != nil {
		return x.MessageSchema
	}
	return nil
}

func (x *EventSpecification) GetMessageExamples() []*structpb.Struct {
	if x != nil {
		return x.MessageExamples
	}
	return nil
}

// ListComponentDefinitionsRequest represents a request to list component
// definitions.
type ListComponentDefinitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of component definitions to return. If this parameter
	// is unspecified, at most 10 definitions will be returned. The cap value for
	// this parameter is 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// View allows clients to specify the desired resource view in the response.
	View *ComponentDefinition_View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_View,oneof" json:"view,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `component_type="COMPONENT_TYPE_AI"`.
	// - Example: `tasks:"TASK_TEXT_GENERATION"`.
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,5,opt,name=page,proto3,oneof" json:"page,omitempty"`
}

func (x *ListComponentDefinitionsRequest) Reset() {
	*x = ListComponentDefinitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentDefinitionsRequest) ProtoMessage() {}

func (x *ListComponentDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{3}
}

func (x *ListComponentDefinitionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListComponentDefinitionsRequest) GetView() ComponentDefinition_View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ComponentDefinition_VIEW_UNSPECIFIED
}

func (x *ListComponentDefinitionsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListComponentDefinitionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

// ListComponentDefinitionsResponse contains a list of component definitions.
type ListComponentDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of component definition resources.
	ComponentDefinitions []*ComponentDefinition `protobuf:"bytes,1,rep,name=component_definitions,json=componentDefinitions,proto3" json:"component_definitions,omitempty"`
	// Total number of component definitions.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListComponentDefinitionsResponse) Reset() {
	*x = ListComponentDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentDefinitionsResponse) ProtoMessage() {}

func (x *ListComponentDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{4}
}

func (x *ListComponentDefinitionsResponse) GetComponentDefinitions() []*ComponentDefinition {
	if x != nil {
		return x.ComponentDefinitions
	}
	return nil
}

func (x *ListComponentDefinitionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListComponentDefinitionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListComponentDefinitionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// Spec represents a specification data model.
type ComponentDefinition_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Component specification.
	ComponentSpecification *structpb.Struct `protobuf:"bytes,3,opt,name=component_specification,json=componentSpecification,proto3" json:"component_specification,omitempty"`
	// Data specifications.
	// The key represents the task, and the value is the corresponding data_specification.
	// Note: This field will be renamed to task_specifications in the future.
	DataSpecifications map[string]*DataSpecification `protobuf:"bytes,5,rep,name=data_specifications,json=dataSpecifications,proto3" json:"data_specifications,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Event specifications.
	// The key represents the event, and the value is the corresponding event_specification.
	EventSpecifications map[string]*EventSpecification `protobuf:"bytes,6,rep,name=event_specifications,json=eventSpecifications,proto3" json:"event_specifications,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ComponentDefinition_Spec) Reset() {
	*x = ComponentDefinition_Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDefinition_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDefinition_Spec) ProtoMessage() {}

func (x *ComponentDefinition_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDefinition_Spec.ProtoReflect.Descriptor instead.
func (*ComponentDefinition_Spec) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ComponentDefinition_Spec) GetComponentSpecification() *structpb.Struct {
	if x != nil {
		return x.ComponentSpecification
	}
	return nil
}

func (x *ComponentDefinition_Spec) GetDataSpecifications() map[string]*DataSpecification {
	if x != nil {
		return x.DataSpecifications
	}
	return nil
}

func (x *ComponentDefinition_Spec) GetEventSpecifications() map[string]*EventSpecification {
	if x != nil {
		return x.EventSpecifications
	}
	return nil
}

var File_vdp_pipeline_v1beta_component_definition_proto protoreflect.FileDescriptor

var file_vdp_pipeline_v1beta_component_definition_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x0d, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30,
	0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1b,
	0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x11, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x10, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0d,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0xba, 0x04, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x55, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x7b, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x76,
	0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x64, 0x61, 0x74, 0x61, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x7e, 0x0a, 0x14,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x6d, 0x0a, 0x17,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6f, 0x0a, 0x18, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x04,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x49,
	0x45, 0x57, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49,
	0x45, 0x57, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x02, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x45, 0x4c,
	0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f,
	0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4f, 0x4f, 0x4e, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x47, 0x45, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x45, 0x54, 0x41,
	0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x47, 0x41, 0x10, 0x05, 0x22, 0x7d, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x43, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x47, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x86, 0x02,
	0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xd7, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x42, 0xe7, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x18, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x64, 0x70, 0x2f,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x3b,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0xa2, 0x02,
	0x03, 0x56, 0x50, 0x58, 0xaa, 0x02, 0x13, 0x56, 0x64, 0x70, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xca, 0x02, 0x13, 0x56, 0x64, 0x70,
	0x5c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0xe2, 0x02, 0x1f, 0x56, 0x64, 0x70, 0x5c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5c,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x15, 0x56, 0x64, 0x70, 0x3a, 0x3a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_vdp_pipeline_v1beta_component_definition_proto_rawDescOnce sync.Once
	file_vdp_pipeline_v1beta_component_definition_proto_rawDescData = file_vdp_pipeline_v1beta_component_definition_proto_rawDesc
)

func file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP() []byte {
	file_vdp_pipeline_v1beta_component_definition_proto_rawDescOnce.Do(func() {
		file_vdp_pipeline_v1beta_component_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_vdp_pipeline_v1beta_component_definition_proto_rawDescData)
	})
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescData
}

var file_vdp_pipeline_v1beta_component_definition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_vdp_pipeline_v1beta_component_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_vdp_pipeline_v1beta_component_definition_proto_goTypes = []interface{}{
	(ComponentDefinition_View)(0),            // 0: vdp.pipeline.v1beta.ComponentDefinition.View
	(ComponentDefinition_ReleaseStage)(0),    // 1: vdp.pipeline.v1beta.ComponentDefinition.ReleaseStage
	(*ComponentDefinition)(nil),              // 2: vdp.pipeline.v1beta.ComponentDefinition
	(*DataSpecification)(nil),                // 3: vdp.pipeline.v1beta.DataSpecification
	(*EventSpecification)(nil),               // 4: vdp.pipeline.v1beta.EventSpecification
	(*ListComponentDefinitionsRequest)(nil),  // 5: vdp.pipeline.v1beta.ListComponentDefinitionsRequest
	(*ListComponentDefinitionsResponse)(nil), // 6: vdp.pipeline.v1beta.ListComponentDefinitionsResponse
	(*ComponentDefinition_Spec)(nil),         // 7: vdp.pipeline.v1beta.ComponentDefinition.Spec
	nil,                                      // 8: vdp.pipeline.v1beta.ComponentDefinition.Spec.DataSpecificationsEntry
	nil,                                      // 9: vdp.pipeline.v1beta.ComponentDefinition.Spec.EventSpecificationsEntry
	(ComponentType)(0),                       // 10: vdp.pipeline.v1beta.ComponentType
	(*structpb.Struct)(nil),                  // 11: google.protobuf.Struct
	(*ComponentTask)(nil),                    // 12: vdp.pipeline.v1beta.ComponentTask
	(*ComponentEvent)(nil),                   // 13: vdp.pipeline.v1beta.ComponentEvent
}
var file_vdp_pipeline_v1beta_component_definition_proto_depIdxs = []int32{
	7,  // 0: vdp.pipeline.v1beta.ComponentDefinition.spec:type_name -> vdp.pipeline.v1beta.ComponentDefinition.Spec
	10, // 1: vdp.pipeline.v1beta.ComponentDefinition.type:type_name -> vdp.pipeline.v1beta.ComponentType
	11, // 2: vdp.pipeline.v1beta.ComponentDefinition.vendor_attributes:type_name -> google.protobuf.Struct
	12, // 3: vdp.pipeline.v1beta.ComponentDefinition.tasks:type_name -> vdp.pipeline.v1beta.ComponentTask
	1,  // 4: vdp.pipeline.v1beta.ComponentDefinition.release_stage:type_name -> vdp.pipeline.v1beta.ComponentDefinition.ReleaseStage
	13, // 5: vdp.pipeline.v1beta.ComponentDefinition.events:type_name -> vdp.pipeline.v1beta.ComponentEvent
	11, // 6: vdp.pipeline.v1beta.DataSpecification.input:type_name -> google.protobuf.Struct
	11, // 7: vdp.pipeline.v1beta.DataSpecification.output:type_name -> google.protobuf.Struct
	11, // 8: vdp.pipeline.v1beta.EventSpecification.setup_schema:type_name -> google.protobuf.Struct
	11, // 9: vdp.pipeline.v1beta.EventSpecification.message_schema:type_name -> google.protobuf.Struct
	11, // 10: vdp.pipeline.v1beta.EventSpecification.message_examples:type_name -> google.protobuf.Struct
	0,  // 11: vdp.pipeline.v1beta.ListComponentDefinitionsRequest.view:type_name -> vdp.pipeline.v1beta.ComponentDefinition.View
	2,  // 12: vdp.pipeline.v1beta.ListComponentDefinitionsResponse.component_definitions:type_name -> vdp.pipeline.v1beta.ComponentDefinition
	11, // 13: vdp.pipeline.v1beta.ComponentDefinition.Spec.component_specification:type_name -> google.protobuf.Struct
	8,  // 14: vdp.pipeline.v1beta.ComponentDefinition.Spec.data_specifications:type_name -> vdp.pipeline.v1beta.ComponentDefinition.Spec.DataSpecificationsEntry
	9,  // 15: vdp.pipeline.v1beta.ComponentDefinition.Spec.event_specifications:type_name -> vdp.pipeline.v1beta.ComponentDefinition.Spec.EventSpecificationsEntry
	3,  // 16: vdp.pipeline.v1beta.ComponentDefinition.Spec.DataSpecificationsEntry.value:type_name -> vdp.pipeline.v1beta.DataSpecification
	4,  // 17: vdp.pipeline.v1beta.ComponentDefinition.Spec.EventSpecificationsEntry.value:type_name -> vdp.pipeline.v1beta.EventSpecification
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_vdp_pipeline_v1beta_component_definition_proto_init() }
func file_vdp_pipeline_v1beta_component_definition_proto_init() {
	if File_vdp_pipeline_v1beta_component_definition_proto != nil {
		return
	}
	file_vdp_pipeline_v1beta_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentDefinitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDefinition_Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vdp_pipeline_v1beta_component_definition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vdp_pipeline_v1beta_component_definition_proto_goTypes,
		DependencyIndexes: file_vdp_pipeline_v1beta_component_definition_proto_depIdxs,
		EnumInfos:         file_vdp_pipeline_v1beta_component_definition_proto_enumTypes,
		MessageInfos:      file_vdp_pipeline_v1beta_component_definition_proto_msgTypes,
	}.Build()
	File_vdp_pipeline_v1beta_component_definition_proto = out.File
	file_vdp_pipeline_v1beta_component_definition_proto_rawDesc = nil
	file_vdp_pipeline_v1beta_component_definition_proto_goTypes = nil
	file_vdp_pipeline_v1beta_component_definition_proto_depIdxs = nil
}
