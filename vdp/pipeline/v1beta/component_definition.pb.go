// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: vdp/pipeline/v1beta/component_definition.proto

package pipelinev1beta

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConnectorType defines the connector type based on its task features.
type ConnectorType int32

const (
	// Unspecified.
	ConnectorType_CONNECTOR_TYPE_UNSPECIFIED ConnectorType = 0
	// AI connector.
	ConnectorType_CONNECTOR_TYPE_AI ConnectorType = 3
	// Data connector.
	ConnectorType_CONNECTOR_TYPE_DATA ConnectorType = 5
	// Operator connector.
	ConnectorType_CONNECTOR_TYPE_OPERATOR ConnectorType = 6
	// Application connector.
	ConnectorType_CONNECTOR_TYPE_APPLICATION ConnectorType = 7
)

// Enum value maps for ConnectorType.
var (
	ConnectorType_name = map[int32]string{
		0: "CONNECTOR_TYPE_UNSPECIFIED",
		3: "CONNECTOR_TYPE_AI",
		5: "CONNECTOR_TYPE_DATA",
		6: "CONNECTOR_TYPE_OPERATOR",
		7: "CONNECTOR_TYPE_APPLICATION",
	}
	ConnectorType_value = map[string]int32{
		"CONNECTOR_TYPE_UNSPECIFIED": 0,
		"CONNECTOR_TYPE_AI":          3,
		"CONNECTOR_TYPE_DATA":        5,
		"CONNECTOR_TYPE_OPERATOR":    6,
		"CONNECTOR_TYPE_APPLICATION": 7,
	}
)

func (x ConnectorType) Enum() *ConnectorType {
	p := new(ConnectorType)
	*p = x
	return p
}

func (x ConnectorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectorType) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[0].Descriptor()
}

func (ConnectorType) Type() protoreflect.EnumType {
	return &file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[0]
}

func (x ConnectorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectorType.Descriptor instead.
func (ConnectorType) EnumDescriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0}
}

// View defines how a component definition is presented.
type ComponentDefinition_View int32

const (
	// Unspecified, equivalent to BASIC.
	ComponentDefinition_VIEW_UNSPECIFIED ComponentDefinition_View = 0
	// Default view, only includes basic information (removes the `spec`
	// field).
	ComponentDefinition_VIEW_BASIC ComponentDefinition_View = 1
	// Full representation.
	ComponentDefinition_VIEW_FULL ComponentDefinition_View = 2
)

// Enum value maps for ComponentDefinition_View.
var (
	ComponentDefinition_View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "VIEW_BASIC",
		2: "VIEW_FULL",
	}
	ComponentDefinition_View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"VIEW_BASIC":       1,
		"VIEW_FULL":        2,
	}
)

func (x ComponentDefinition_View) Enum() *ComponentDefinition_View {
	p := new(ComponentDefinition_View)
	*p = x
	return p
}

func (x ComponentDefinition_View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentDefinition_View) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[1].Descriptor()
}

func (ComponentDefinition_View) Type() protoreflect.EnumType {
	return &file_vdp_pipeline_v1beta_component_definition_proto_enumTypes[1]
}

func (x ComponentDefinition_View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentDefinition_View.Descriptor instead.
func (ComponentDefinition_View) EnumDescriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0, 0}
}

// ComponentDefinition describes a certain type of Component.
type ComponentDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines the type of task the component will perform.
	Type ComponentType `protobuf:"varint,1,opt,name=type,proto3,enum=vdp.pipeline.v1beta.ComponentType" json:"type,omitempty"`
	// The component definition details.
	//
	// Types that are assignable to Definition:
	//
	//	*ComponentDefinition_OperatorDefinition
	//	*ComponentDefinition_ConnectorDefinition
	Definition isComponentDefinition_Definition `protobuf_oneof:"definition"`
}

func (x *ComponentDefinition) Reset() {
	*x = ComponentDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDefinition) ProtoMessage() {}

func (x *ComponentDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDefinition.ProtoReflect.Descriptor instead.
func (*ComponentDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentDefinition) GetType() ComponentType {
	if x != nil {
		return x.Type
	}
	return ComponentType_COMPONENT_TYPE_UNSPECIFIED
}

func (m *ComponentDefinition) GetDefinition() isComponentDefinition_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (x *ComponentDefinition) GetOperatorDefinition() *OperatorDefinition {
	if x, ok := x.GetDefinition().(*ComponentDefinition_OperatorDefinition); ok {
		return x.OperatorDefinition
	}
	return nil
}

func (x *ComponentDefinition) GetConnectorDefinition() *ConnectorDefinition {
	if x, ok := x.GetDefinition().(*ComponentDefinition_ConnectorDefinition); ok {
		return x.ConnectorDefinition
	}
	return nil
}

type isComponentDefinition_Definition interface {
	isComponentDefinition_Definition()
}

type ComponentDefinition_OperatorDefinition struct {
	// operator definition detail
	OperatorDefinition *OperatorDefinition `protobuf:"bytes,2,opt,name=operator_definition,json=operatorDefinition,proto3,oneof"`
}

type ComponentDefinition_ConnectorDefinition struct {
	// connector definition detail
	ConnectorDefinition *ConnectorDefinition `protobuf:"bytes,3,opt,name=connector_definition,json=connectorDefinition,proto3,oneof"`
}

func (*ComponentDefinition_OperatorDefinition) isComponentDefinition_Definition() {}

func (*ComponentDefinition_ConnectorDefinition) isComponentDefinition_Definition() {}

// ConnectorSpec represents a specification data model.
type ConnectorSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource specification.
	ResourceSpecification *structpb.Struct `protobuf:"bytes,2,opt,name=resource_specification,json=resourceSpecification,proto3" json:"resource_specification,omitempty"`
	// Component specification.
	ComponentSpecification *structpb.Struct `protobuf:"bytes,3,opt,name=component_specification,json=componentSpecification,proto3" json:"component_specification,omitempty"`
	// OpenAPI specification.
	OpenapiSpecifications *structpb.Struct `protobuf:"bytes,4,opt,name=openapi_specifications,json=openapiSpecifications,proto3" json:"openapi_specifications,omitempty"`
}

func (x *ConnectorSpec) Reset() {
	*x = ConnectorSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorSpec) ProtoMessage() {}

func (x *ConnectorSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorSpec.ProtoReflect.Descriptor instead.
func (*ConnectorSpec) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectorSpec) GetResourceSpecification() *structpb.Struct {
	if x != nil {
		return x.ResourceSpecification
	}
	return nil
}

func (x *ConnectorSpec) GetComponentSpecification() *structpb.Struct {
	if x != nil {
		return x.ComponentSpecification
	}
	return nil
}

func (x *ConnectorSpec) GetOpenapiSpecifications() *structpb.Struct {
	if x != nil {
		return x.OpenapiSpecifications
	}
	return nil
}

// A Connector is a type of pipeline component that queries, processes or sends
// the ingested unstructured data to a service or app. Users need to configure
// their connectors (e.g. by providing an API token to a remote service). A
// ConnectorDefinition describes a certain type of Connector.
//
// For more information, see
// [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
// in the official documentation.
type ConnectorDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the connector definition, defined by its ID.
	// - Format: `connector-definitions/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Connector definition UUID.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Connector definition resource ID (used in `name` as the last segment). This
	// conforms to RFC-1034, which restricts to letters, numbers, and hyphen,
	// with the first character a letter, the last a letter or a number, and a 63
	// character maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Connector definition title.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Connector definition documentation URL.
	DocumentationUrl string `protobuf:"bytes,5,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	// Connector definition icon. This is a path that's relative to the root of
	// the connector implementation (see `source_url`) and that allows clients
	// frontend applications to pull and locate the icons.
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// Connector definition specification.
	Spec *ConnectorSpec `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
	// Connector definition type.
	Type ConnectorType `protobuf:"varint,8,opt,name=type,proto3,enum=vdp.pipeline.v1beta.ConnectorType" json:"type,omitempty"`
	// Connector definition tombstone. If true, this configuration is permanently
	// off. Otherwise, the configuration is active.
	Tombstone bool `protobuf:"varint,9,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	// The public flag determines whether this connector definition is available
	// to all workspaces.
	Public bool `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`
	// Connector definition custom flag, i.e., whether this is a custom
	// connector definition.
	Custom bool `protobuf:"varint,11,opt,name=custom,proto3" json:"custom,omitempty"`
	// Connector definition vendor name.
	Vendor string `protobuf:"bytes,13,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Vendor-specific attributes.
	VendorAttributes *structpb.Struct `protobuf:"bytes,14,opt,name=vendor_attributes,json=vendorAttributes,proto3" json:"vendor_attributes,omitempty"`
	// Source code URL. This points to the source code where the connector is
	// implemented.
	SourceUrl string `protobuf:"bytes,15,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	// Connector definition version. This is a string that fulfills the SemVer
	// specification (e.g. `1.0.0-beta`).
	Version string `protobuf:"bytes,16,opt,name=version,proto3" json:"version,omitempty"`
	// List of tasks that can be executed by the connector.
	Tasks []*ComponentTask `protobuf:"bytes,17,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ConnectorDefinition) Reset() {
	*x = ConnectorDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorDefinition) ProtoMessage() {}

func (x *ConnectorDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorDefinition.ProtoReflect.Descriptor instead.
func (*ConnectorDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectorDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorDefinition) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ConnectorDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectorDefinition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConnectorDefinition) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *ConnectorDefinition) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ConnectorDefinition) GetSpec() *ConnectorSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ConnectorDefinition) GetType() ConnectorType {
	if x != nil {
		return x.Type
	}
	return ConnectorType_CONNECTOR_TYPE_UNSPECIFIED
}

func (x *ConnectorDefinition) GetTombstone() bool {
	if x != nil {
		return x.Tombstone
	}
	return false
}

func (x *ConnectorDefinition) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *ConnectorDefinition) GetCustom() bool {
	if x != nil {
		return x.Custom
	}
	return false
}

func (x *ConnectorDefinition) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *ConnectorDefinition) GetVendorAttributes() *structpb.Struct {
	if x != nil {
		return x.VendorAttributes
	}
	return nil
}

func (x *ConnectorDefinition) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *ConnectorDefinition) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConnectorDefinition) GetTasks() []*ComponentTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// OperatorSpec represents a specification data model.
type OperatorSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Component specification.
	ComponentSpecification *structpb.Struct `protobuf:"bytes,1,opt,name=component_specification,json=componentSpecification,proto3" json:"component_specification,omitempty"`
	// OpenAPI specification.
	OpenapiSpecifications *structpb.Struct `protobuf:"bytes,2,opt,name=openapi_specifications,json=openapiSpecifications,proto3" json:"openapi_specifications,omitempty"`
}

func (x *OperatorSpec) Reset() {
	*x = OperatorSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorSpec) ProtoMessage() {}

func (x *OperatorSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorSpec.ProtoReflect.Descriptor instead.
func (*OperatorSpec) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{3}
}

func (x *OperatorSpec) GetComponentSpecification() *structpb.Struct {
	if x != nil {
		return x.ComponentSpecification
	}
	return nil
}

func (x *OperatorSpec) GetOpenapiSpecifications() *structpb.Struct {
	if x != nil {
		return x.OpenapiSpecifications
	}
	return nil
}

// An Operator is a type of pipeline component that performs data injection and
// manipulation. OperatorDefinition describes a certain type of operator.
//
// For more information, see
// [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
// in the official documentation.
type OperatorDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the operator definition.
	// - Format: `operator-definitions/*`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Operator definition UUID.
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// Operator definition resource ID (used in `name` as the last segment).
	// This conforms to RFC-1034, which restricts to letters, numbers, and
	// hyphen, with the first character a letter, the last a letter or a number,
	// and a 63 character maximum.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Operator definition title.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Operator definition documentation URL.
	DocumentationUrl string `protobuf:"bytes,5,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	// Operator definition icon. This is a path that's relative to the root of
	// the operator implementation (see `source_url`) and that allows clients
	// frontend applications to pull and locate the icons.
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// Operator definition specification.
	Spec *OperatorSpec `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
	// Operator definition tombstone. If true, this configuration is permanently
	// off. Otherwise, the configuration is active.
	Tombstone bool `protobuf:"varint,8,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	// The public flag determines whether this operator definition is available
	// to all workspaces.
	Public bool `protobuf:"varint,9,opt,name=public,proto3" json:"public,omitempty"`
	// The custom flag determines whether this is a custom operator definition.
	Custom bool `protobuf:"varint,10,opt,name=custom,proto3" json:"custom,omitempty"`
	// Source code URL. This points to the source code where the operator is
	// implemented.
	SourceUrl string `protobuf:"bytes,15,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	// Operator definition version. This is a string that fulfills the SemVer
	// specification (e.g. `1.0.0-beta`).
	Version string `protobuf:"bytes,16,opt,name=version,proto3" json:"version,omitempty"`
	// List of tasks that can be executed by the operator.
	Tasks []*ComponentTask `protobuf:"bytes,17,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *OperatorDefinition) Reset() {
	*x = OperatorDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorDefinition) ProtoMessage() {}

func (x *OperatorDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorDefinition.ProtoReflect.Descriptor instead.
func (*OperatorDefinition) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{4}
}

func (x *OperatorDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperatorDefinition) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OperatorDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OperatorDefinition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperatorDefinition) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *OperatorDefinition) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OperatorDefinition) GetSpec() *OperatorSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *OperatorDefinition) GetTombstone() bool {
	if x != nil {
		return x.Tombstone
	}
	return false
}

func (x *OperatorDefinition) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *OperatorDefinition) GetCustom() bool {
	if x != nil {
		return x.Custom
	}
	return false
}

func (x *OperatorDefinition) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *OperatorDefinition) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OperatorDefinition) GetTasks() []*ComponentTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// ListComponentDefinitionsRequest represents a request to list component
// definitions.
type ListComponentDefinitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of component definitions to return. If this parameter
	// is unspecified, at most 10 definitions will be returned. The cap value for
	// this parameter is 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// View allows clients to specify the desired resource view in the response.
	View *ComponentDefinition_View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_View,oneof" json:"view,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `component_type="COMPONENT_TYPE_CONNECTOR_AI"`.
	// - Example: `tasks:"TASK_TEXT_GENERATION"`.
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,5,opt,name=page,proto3,oneof" json:"page,omitempty"`
}

func (x *ListComponentDefinitionsRequest) Reset() {
	*x = ListComponentDefinitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentDefinitionsRequest) ProtoMessage() {}

func (x *ListComponentDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{5}
}

func (x *ListComponentDefinitionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListComponentDefinitionsRequest) GetView() ComponentDefinition_View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ComponentDefinition_VIEW_UNSPECIFIED
}

func (x *ListComponentDefinitionsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListComponentDefinitionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

// ListComponentDefinitionsResponse contains a list of component definitions.
type ListComponentDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of component definition resources.
	ComponentDefinitions []*ComponentDefinition `protobuf:"bytes,1,rep,name=component_definitions,json=componentDefinitions,proto3" json:"component_definitions,omitempty"`
	// Total number of connector definitions.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListComponentDefinitionsResponse) Reset() {
	*x = ListComponentDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentDefinitionsResponse) ProtoMessage() {}

func (x *ListComponentDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{6}
}

func (x *ListComponentDefinitionsResponse) GetComponentDefinitions() []*ComponentDefinition {
	if x != nil {
		return x.ComponentDefinitions
	}
	return nil
}

func (x *ListComponentDefinitionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListComponentDefinitionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListComponentDefinitionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// ListConnectorDefinitionsRequest represents a request to list connector
// definitions.
type ListConnectorDefinitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of connector definitions to return. If this parameter
	// is unspecified, at most 10 definitions will be returned. The cap value for
	// this parameter is 100 (i.e. any value above that will be coerced to 100).
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token.
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// View allows clients to specify the desired resource view in the response.
	View *ComponentDefinition_View `protobuf:"varint,5,opt,name=view,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_View,oneof" json:"view,omitempty"`
}

func (x *ListConnectorDefinitionsRequest) Reset() {
	*x = ListConnectorDefinitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectorDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorDefinitionsRequest) ProtoMessage() {}

func (x *ListConnectorDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*ListConnectorDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{7}
}

func (x *ListConnectorDefinitionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListConnectorDefinitionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListConnectorDefinitionsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListConnectorDefinitionsRequest) GetView() ComponentDefinition_View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ComponentDefinition_VIEW_UNSPECIFIED
}

// ListConnectorDefinitionsResponse contains a list of connector definitions.
type ListConnectorDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of connector definition resources.
	ConnectorDefinitions []*ConnectorDefinition `protobuf:"bytes,1,rep,name=connector_definitions,json=connectorDefinitions,proto3" json:"connector_definitions,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of connector definitions.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListConnectorDefinitionsResponse) Reset() {
	*x = ListConnectorDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectorDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorDefinitionsResponse) ProtoMessage() {}

func (x *ListConnectorDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*ListConnectorDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{8}
}

func (x *ListConnectorDefinitionsResponse) GetConnectorDefinitions() []*ConnectorDefinition {
	if x != nil {
		return x.ConnectorDefinitions
	}
	return nil
}

func (x *ListConnectorDefinitionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListConnectorDefinitionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetConnectorDefinitionRequest represents a request to fetch the details of a
// connector definition.
type GetConnectorDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the connector definition, which allows its access by ID.
	// - Format: `connector-definitions/{id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// View allows clients to specify the desired resource view in the response.
	View *ComponentDefinition_View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_View,oneof" json:"view,omitempty"`
}

func (x *GetConnectorDefinitionRequest) Reset() {
	*x = GetConnectorDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectorDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorDefinitionRequest) ProtoMessage() {}

func (x *GetConnectorDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetConnectorDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{9}
}

func (x *GetConnectorDefinitionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetConnectorDefinitionRequest) GetView() ComponentDefinition_View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ComponentDefinition_VIEW_UNSPECIFIED
}

// GetConnectorDefinitionResponse contains the requested connector definition.
type GetConnectorDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The connector definition resource.
	ConnectorDefinition *ConnectorDefinition `protobuf:"bytes,1,opt,name=connector_definition,json=connectorDefinition,proto3" json:"connector_definition,omitempty"`
}

func (x *GetConnectorDefinitionResponse) Reset() {
	*x = GetConnectorDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectorDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectorDefinitionResponse) ProtoMessage() {}

func (x *GetConnectorDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectorDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetConnectorDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{10}
}

func (x *GetConnectorDefinitionResponse) GetConnectorDefinition() *ConnectorDefinition {
	if x != nil {
		return x.ConnectorDefinition
	}
	return nil
}

// ListOperatorDefinitionsRequest represents a request to list operator
// definitions.
type ListOperatorDefinitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of OperatorDefinitions to return. The
	// service may return fewer than this value. If unspecified, at most 10
	// OperatorDefinitions will be returned. The maximum value is 100;
	// values above 100 will be coerced to 100.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token.
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// View allows clients to specify the desired resource view in the response.
	View *ComponentDefinition_View `protobuf:"varint,5,opt,name=view,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_View,oneof" json:"view,omitempty"`
}

func (x *ListOperatorDefinitionsRequest) Reset() {
	*x = ListOperatorDefinitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperatorDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorDefinitionsRequest) ProtoMessage() {}

func (x *ListOperatorDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*ListOperatorDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{11}
}

func (x *ListOperatorDefinitionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListOperatorDefinitionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListOperatorDefinitionsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListOperatorDefinitionsRequest) GetView() ComponentDefinition_View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ComponentDefinition_VIEW_UNSPECIFIED
}

// ListOperatorDefinitionsResponse contains a list of operator definitions.
type ListOperatorDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of operator definition resources.
	OperatorDefinitions []*OperatorDefinition `protobuf:"bytes,1,rep,name=operator_definitions,json=operatorDefinitions,proto3" json:"operator_definitions,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of operator definitions.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListOperatorDefinitionsResponse) Reset() {
	*x = ListOperatorDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperatorDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorDefinitionsResponse) ProtoMessage() {}

func (x *ListOperatorDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*ListOperatorDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{12}
}

func (x *ListOperatorDefinitionsResponse) GetOperatorDefinitions() []*OperatorDefinition {
	if x != nil {
		return x.OperatorDefinitions
	}
	return nil
}

func (x *ListOperatorDefinitionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListOperatorDefinitionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetOperatorDefinitionRequest represents a request to fetch the details of a
// operator definition.
type GetOperatorDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the operator definition, which allows its access by ID.
	// - Format: `operator-definitions/{id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// View allows clients to specify the desired resource view in the response.
	View *ComponentDefinition_View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.pipeline.v1beta.ComponentDefinition_View,oneof" json:"view,omitempty"`
}

func (x *GetOperatorDefinitionRequest) Reset() {
	*x = GetOperatorDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperatorDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorDefinitionRequest) ProtoMessage() {}

func (x *GetOperatorDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{13}
}

func (x *GetOperatorDefinitionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOperatorDefinitionRequest) GetView() ComponentDefinition_View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return ComponentDefinition_VIEW_UNSPECIFIED
}

// GetOperatorDefinitionResponse contains the requested operator definition.
type GetOperatorDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The operator definition resource.
	OperatorDefinition *OperatorDefinition `protobuf:"bytes,1,opt,name=operator_definition,json=operatorDefinition,proto3" json:"operator_definition,omitempty"`
}

func (x *GetOperatorDefinitionResponse) Reset() {
	*x = GetOperatorDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperatorDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorDefinitionResponse) ProtoMessage() {}

func (x *GetOperatorDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP(), []int{14}
}

func (x *GetOperatorDefinitionResponse) GetOperatorDefinition() *OperatorDefinition {
	if x != nil {
		return x.OperatorDefinition
	}
	return nil
}

var File_vdp_pipeline_v1beta_component_definition_proto protoreflect.FileDescriptor

var file_vdp_pipeline_v1beta_component_definition_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5f, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x49, 0x45,
	0x57, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x49, 0x45,
	0x57, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x02, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x53, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x16, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x15, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xeb, 0x05, 0x0a, 0x13, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x30, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09,
	0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x49, 0x0a, 0x11, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x3a, 0x62, 0xea,
	0x41, 0x5f, 0x0a, 0x24, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e,
	0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x1b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64,
	0x7d, 0x4a, 0x04, 0x08, 0x0c, 0x10, 0x0d, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x55, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x53, 0x0a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x15, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc1, 0x04, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x11, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x6d, 0x62,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12,
	0x22, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x3a, 0x5f, 0xea, 0x41, 0x5c, 0x0a, 0x23, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x1a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x69,
	0x64, 0x7d, 0x4a, 0x04, 0x08, 0x0b, 0x10, 0x0c, 0x22, 0x86, 0x02, 0x0a, 0x1f, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x22, 0xd7, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x97, 0x02, 0x0a, 0x1f,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x4a,
	0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xc8, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xdf, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x62, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x4e, 0x92, 0x41, 0x1f, 0xca, 0x3e, 0x1c, 0xfa, 0x02, 0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x26, 0x0a, 0x24, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x04, 0x08, 0x02,
	0x10, 0x03, 0x22, 0x7d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x96, 0x02, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xc4, 0x01, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x76,
	0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xdc, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x60, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x4c, 0x92, 0x41, 0x1e, 0xca, 0x3e, 0x1b, 0xfa, 0x02, 0x18, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x25, 0x0a, 0x23, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x22, 0x79, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xae, 0x01, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x49, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x05, 0x12, 0x1b, 0x0a,
	0x17, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x22, 0x04, 0x08, 0x01, 0x10, 0x01,
	0x22, 0x04, 0x08, 0x02, 0x10, 0x02, 0x22, 0x04, 0x08, 0x04, 0x10, 0x04, 0x42, 0xe7, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0xa2, 0x02, 0x03, 0x56, 0x50, 0x58,
	0xaa, 0x02, 0x13, 0x56, 0x64, 0x70, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xca, 0x02, 0x13, 0x56, 0x64, 0x70, 0x5c, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xe2, 0x02, 0x1f, 0x56,
	0x64, 0x70, 0x5c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x15, 0x56, 0x64, 0x70, 0x3a, 0x3a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vdp_pipeline_v1beta_component_definition_proto_rawDescOnce sync.Once
	file_vdp_pipeline_v1beta_component_definition_proto_rawDescData = file_vdp_pipeline_v1beta_component_definition_proto_rawDesc
)

func file_vdp_pipeline_v1beta_component_definition_proto_rawDescGZIP() []byte {
	file_vdp_pipeline_v1beta_component_definition_proto_rawDescOnce.Do(func() {
		file_vdp_pipeline_v1beta_component_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_vdp_pipeline_v1beta_component_definition_proto_rawDescData)
	})
	return file_vdp_pipeline_v1beta_component_definition_proto_rawDescData
}

var file_vdp_pipeline_v1beta_component_definition_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_vdp_pipeline_v1beta_component_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_vdp_pipeline_v1beta_component_definition_proto_goTypes = []interface{}{
	(ConnectorType)(0),                       // 0: vdp.pipeline.v1beta.ConnectorType
	(ComponentDefinition_View)(0),            // 1: vdp.pipeline.v1beta.ComponentDefinition.View
	(*ComponentDefinition)(nil),              // 2: vdp.pipeline.v1beta.ComponentDefinition
	(*ConnectorSpec)(nil),                    // 3: vdp.pipeline.v1beta.ConnectorSpec
	(*ConnectorDefinition)(nil),              // 4: vdp.pipeline.v1beta.ConnectorDefinition
	(*OperatorSpec)(nil),                     // 5: vdp.pipeline.v1beta.OperatorSpec
	(*OperatorDefinition)(nil),               // 6: vdp.pipeline.v1beta.OperatorDefinition
	(*ListComponentDefinitionsRequest)(nil),  // 7: vdp.pipeline.v1beta.ListComponentDefinitionsRequest
	(*ListComponentDefinitionsResponse)(nil), // 8: vdp.pipeline.v1beta.ListComponentDefinitionsResponse
	(*ListConnectorDefinitionsRequest)(nil),  // 9: vdp.pipeline.v1beta.ListConnectorDefinitionsRequest
	(*ListConnectorDefinitionsResponse)(nil), // 10: vdp.pipeline.v1beta.ListConnectorDefinitionsResponse
	(*GetConnectorDefinitionRequest)(nil),    // 11: vdp.pipeline.v1beta.GetConnectorDefinitionRequest
	(*GetConnectorDefinitionResponse)(nil),   // 12: vdp.pipeline.v1beta.GetConnectorDefinitionResponse
	(*ListOperatorDefinitionsRequest)(nil),   // 13: vdp.pipeline.v1beta.ListOperatorDefinitionsRequest
	(*ListOperatorDefinitionsResponse)(nil),  // 14: vdp.pipeline.v1beta.ListOperatorDefinitionsResponse
	(*GetOperatorDefinitionRequest)(nil),     // 15: vdp.pipeline.v1beta.GetOperatorDefinitionRequest
	(*GetOperatorDefinitionResponse)(nil),    // 16: vdp.pipeline.v1beta.GetOperatorDefinitionResponse
	(ComponentType)(0),                       // 17: vdp.pipeline.v1beta.ComponentType
	(*structpb.Struct)(nil),                  // 18: google.protobuf.Struct
	(*ComponentTask)(nil),                    // 19: vdp.pipeline.v1beta.ComponentTask
}
var file_vdp_pipeline_v1beta_component_definition_proto_depIdxs = []int32{
	17, // 0: vdp.pipeline.v1beta.ComponentDefinition.type:type_name -> vdp.pipeline.v1beta.ComponentType
	6,  // 1: vdp.pipeline.v1beta.ComponentDefinition.operator_definition:type_name -> vdp.pipeline.v1beta.OperatorDefinition
	4,  // 2: vdp.pipeline.v1beta.ComponentDefinition.connector_definition:type_name -> vdp.pipeline.v1beta.ConnectorDefinition
	18, // 3: vdp.pipeline.v1beta.ConnectorSpec.resource_specification:type_name -> google.protobuf.Struct
	18, // 4: vdp.pipeline.v1beta.ConnectorSpec.component_specification:type_name -> google.protobuf.Struct
	18, // 5: vdp.pipeline.v1beta.ConnectorSpec.openapi_specifications:type_name -> google.protobuf.Struct
	3,  // 6: vdp.pipeline.v1beta.ConnectorDefinition.spec:type_name -> vdp.pipeline.v1beta.ConnectorSpec
	0,  // 7: vdp.pipeline.v1beta.ConnectorDefinition.type:type_name -> vdp.pipeline.v1beta.ConnectorType
	18, // 8: vdp.pipeline.v1beta.ConnectorDefinition.vendor_attributes:type_name -> google.protobuf.Struct
	19, // 9: vdp.pipeline.v1beta.ConnectorDefinition.tasks:type_name -> vdp.pipeline.v1beta.ComponentTask
	18, // 10: vdp.pipeline.v1beta.OperatorSpec.component_specification:type_name -> google.protobuf.Struct
	18, // 11: vdp.pipeline.v1beta.OperatorSpec.openapi_specifications:type_name -> google.protobuf.Struct
	5,  // 12: vdp.pipeline.v1beta.OperatorDefinition.spec:type_name -> vdp.pipeline.v1beta.OperatorSpec
	19, // 13: vdp.pipeline.v1beta.OperatorDefinition.tasks:type_name -> vdp.pipeline.v1beta.ComponentTask
	1,  // 14: vdp.pipeline.v1beta.ListComponentDefinitionsRequest.view:type_name -> vdp.pipeline.v1beta.ComponentDefinition.View
	2,  // 15: vdp.pipeline.v1beta.ListComponentDefinitionsResponse.component_definitions:type_name -> vdp.pipeline.v1beta.ComponentDefinition
	1,  // 16: vdp.pipeline.v1beta.ListConnectorDefinitionsRequest.view:type_name -> vdp.pipeline.v1beta.ComponentDefinition.View
	4,  // 17: vdp.pipeline.v1beta.ListConnectorDefinitionsResponse.connector_definitions:type_name -> vdp.pipeline.v1beta.ConnectorDefinition
	1,  // 18: vdp.pipeline.v1beta.GetConnectorDefinitionRequest.view:type_name -> vdp.pipeline.v1beta.ComponentDefinition.View
	4,  // 19: vdp.pipeline.v1beta.GetConnectorDefinitionResponse.connector_definition:type_name -> vdp.pipeline.v1beta.ConnectorDefinition
	1,  // 20: vdp.pipeline.v1beta.ListOperatorDefinitionsRequest.view:type_name -> vdp.pipeline.v1beta.ComponentDefinition.View
	6,  // 21: vdp.pipeline.v1beta.ListOperatorDefinitionsResponse.operator_definitions:type_name -> vdp.pipeline.v1beta.OperatorDefinition
	1,  // 22: vdp.pipeline.v1beta.GetOperatorDefinitionRequest.view:type_name -> vdp.pipeline.v1beta.ComponentDefinition.View
	6,  // 23: vdp.pipeline.v1beta.GetOperatorDefinitionResponse.operator_definition:type_name -> vdp.pipeline.v1beta.OperatorDefinition
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_vdp_pipeline_v1beta_component_definition_proto_init() }
func file_vdp_pipeline_v1beta_component_definition_proto_init() {
	if File_vdp_pipeline_v1beta_component_definition_proto != nil {
		return
	}
	file_vdp_pipeline_v1beta_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentDefinitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectorDefinitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectorDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectorDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectorDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperatorDefinitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperatorDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperatorDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperatorDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ComponentDefinition_OperatorDefinition)(nil),
		(*ComponentDefinition_ConnectorDefinition)(nil),
	}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_component_definition_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vdp_pipeline_v1beta_component_definition_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vdp_pipeline_v1beta_component_definition_proto_goTypes,
		DependencyIndexes: file_vdp_pipeline_v1beta_component_definition_proto_depIdxs,
		EnumInfos:         file_vdp_pipeline_v1beta_component_definition_proto_enumTypes,
		MessageInfos:      file_vdp_pipeline_v1beta_component_definition_proto_msgTypes,
	}.Build()
	File_vdp_pipeline_v1beta_component_definition_proto = out.File
	file_vdp_pipeline_v1beta_component_definition_proto_rawDesc = nil
	file_vdp_pipeline_v1beta_component_definition_proto_goTypes = nil
	file_vdp_pipeline_v1beta_component_definition_proto_depIdxs = nil
}
