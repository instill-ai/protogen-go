// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: vdp/pipeline/v1beta/integration.proto

package pipelinev1beta

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Method defines how the connection is set up.
type Connection_Method int32

const (
	// Unspecified.
	Connection_METHOD_UNSPECIFIED Connection_Method = 0
	// Key-value collection. The user is responsible of fetching the connection
	// details from the 3rd party service.
	Connection_METHOD_DICTIONARY Connection_Method = 1
	// Access token created via OAuth 2.0 authorization.
	Connection_METHOD_OAUTH Connection_Method = 2
)

// Enum value maps for Connection_Method.
var (
	Connection_Method_name = map[int32]string{
		0: "METHOD_UNSPECIFIED",
		1: "METHOD_DICTIONARY",
		2: "METHOD_OAUTH",
	}
	Connection_Method_value = map[string]int32{
		"METHOD_UNSPECIFIED": 0,
		"METHOD_DICTIONARY":  1,
		"METHOD_OAUTH":       2,
	}
)

func (x Connection_Method) Enum() *Connection_Method {
	p := new(Connection_Method)
	*p = x
	return p
}

func (x Connection_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Connection_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_vdp_pipeline_v1beta_integration_proto_enumTypes[0].Descriptor()
}

func (Connection_Method) Type() protoreflect.EnumType {
	return &file_vdp_pipeline_v1beta_integration_proto_enumTypes[0]
}

func (x Connection_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Connection_Method.Descriptor instead.
func (Connection_Method) EnumDescriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{0, 0}
}

// Connection contains the parameters to communicate with a 3rd party app. A
// component may reference a connection in their setup. One connection may be
// used by several components and pipelines.
type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID-formatted unique identifier.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// ID.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the namespace owning the connection.
	NamespaceId string `protobuf:"bytes,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Integration ID. It determines for which type of components can reference
	// this connection.
	IntegrationId string `protobuf:"bytes,4,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	// Integration title. This helps the console display the results grouped by
	// integration ID without needing an extra call to fetch title by integration
	// ID.
	IntegrationTitle string `protobuf:"bytes,5,opt,name=integration_title,json=integrationTitle,proto3" json:"integration_title,omitempty"`
	// Connection method. It references the setup schema provided by the
	// integration.
	Method Connection_Method `protobuf:"varint,6,opt,name=method,proto3,enum=vdp.pipeline.v1beta.Connection_Method" json:"method,omitempty"`
	// Connection details. This field is required on creation, optional on view.
	// When viewing the connection details, the setup values will be redacted.
	Setup *structpb.Struct `protobuf:"bytes,7,opt,name=setup,proto3" json:"setup,omitempty"`
	// A list of scopes that identify the resources that the connection will be
	// able to access on the user's behalf. This is typically passed on creation
	// when the setup has been generated through an OAuth flow with a limited set
	// of scopes.
	Scopes []string `protobuf:"bytes,11,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// When the connection method is METHOD_OAUTH, the access token might come
	// with some extra information that might vary across vendors. This
	// information is passed as connection metadata.
	OAuthAccessDetails *structpb.Struct `protobuf:"bytes,12,opt,name=o_auth_access_details,json=oAuthAccessDetails,proto3,oneof" json:"o_auth_access_details,omitempty"`
	// View defines how the connection is presented. The following fields are
	// only shown in the FULL view:
	// - setup
	// - scopes
	// - oAuthAccessDetails
	View View `protobuf:"varint,8,opt,name=view,proto3,enum=vdp.pipeline.v1beta.View" json:"view,omitempty"`
	// Creation timestamp.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Last update timestamp.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *Connection) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *Connection) GetIntegrationTitle() string {
	if x != nil {
		return x.IntegrationTitle
	}
	return ""
}

func (x *Connection) GetMethod() Connection_Method {
	if x != nil {
		return x.Method
	}
	return Connection_METHOD_UNSPECIFIED
}

func (x *Connection) GetSetup() *structpb.Struct {
	if x != nil {
		return x.Setup
	}
	return nil
}

func (x *Connection) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *Connection) GetOAuthAccessDetails() *structpb.Struct {
	if x != nil {
		return x.OAuthAccessDetails
	}
	return nil
}

func (x *Connection) GetView() View {
	if x != nil {
		return x.View
	}
	return View_VIEW_UNSPECIFIED
}

func (x *Connection) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Connection) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// ListNamespaceConnectionsRequest represents a request to list the connections
// created by a namespace.
type ListNamespaceConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The maximum number of items to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token. By default, the first page will be returned.
	PageToken *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// The following filters are supported:
	// - `integrationId`
	// - `qConnection` (fuzzy search on connection ID, integration title or vendor)
	// Examples:
	// - List connections where app name, vendor or connection ID match `googl`:
	// `q="googl"`.
	// - List connections where the component type is `openai` (e.g. to setup a
	// connector within a pipeline): `integration_id="openai"`.
	Filter *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListNamespaceConnectionsRequest) Reset() {
	*x = ListNamespaceConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceConnectionsRequest) ProtoMessage() {}

func (x *ListNamespaceConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{1}
}

func (x *ListNamespaceConnectionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListNamespaceConnectionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListNamespaceConnectionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListNamespaceConnectionsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

// ListNamespaceConnectionsResponse contains a paginated list of connections.
type ListNamespaceConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of connections matching the request parameters.
	Connections []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of items.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListNamespaceConnectionsResponse) Reset() {
	*x = ListNamespaceConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceConnectionsResponse) ProtoMessage() {}

func (x *ListNamespaceConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{2}
}

func (x *ListNamespaceConnectionsResponse) GetConnections() []*Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *ListNamespaceConnectionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListNamespaceConnectionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetNamespaceConnectionRequest represents a request to view the details of a
// connection.
type GetNamespaceConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Connection ID.
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// View allows clients to specify the desired view in the response.
	View *View `protobuf:"varint,3,opt,name=view,proto3,enum=vdp.pipeline.v1beta.View,oneof" json:"view,omitempty"`
}

func (x *GetNamespaceConnectionRequest) Reset() {
	*x = GetNamespaceConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceConnectionRequest) ProtoMessage() {}

func (x *GetNamespaceConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceConnectionRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{3}
}

func (x *GetNamespaceConnectionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetNamespaceConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *GetNamespaceConnectionRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetNamespaceConnectionResponse contains the requested connection.
type GetNamespaceConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested connection.
	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *GetNamespaceConnectionResponse) Reset() {
	*x = GetNamespaceConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceConnectionResponse) ProtoMessage() {}

func (x *GetNamespaceConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceConnectionResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceConnectionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{4}
}

func (x *GetNamespaceConnectionResponse) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// CreateNamespaceConnectionRequest represents a request to create a
// connection.
type CreateNamespaceConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Properties of the connection to be created.
	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *CreateNamespaceConnectionRequest) Reset() {
	*x = CreateNamespaceConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceConnectionRequest) ProtoMessage() {}

func (x *CreateNamespaceConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceConnectionRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{5}
}

func (x *CreateNamespaceConnectionRequest) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// CreateNamespaceConnectionResponse contains the created connection.
type CreateNamespaceConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created connection.
	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *CreateNamespaceConnectionResponse) Reset() {
	*x = CreateNamespaceConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceConnectionResponse) ProtoMessage() {}

func (x *CreateNamespaceConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceConnectionResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceConnectionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNamespaceConnectionResponse) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// UpdateNamespaceConnectionRequest represents a request to update a
// connection.
type UpdateNamespaceConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the connection to be updated, as present in the database.
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Connection object with the new properties to be updated. Immutable and
	// output-only fields will be ignored. The Setup property must be updated
	// in block (no partial update is supported).
	Connection *Connection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	// The update mask specifies the subset of fields that should be modified.
	//
	// For more information about this field, see
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateNamespaceConnectionRequest) Reset() {
	*x = UpdateNamespaceConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNamespaceConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceConnectionRequest) ProtoMessage() {}

func (x *UpdateNamespaceConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceConnectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNamespaceConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *UpdateNamespaceConnectionRequest) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *UpdateNamespaceConnectionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateNamespaceConnectionResponse contains the updated connection.
type UpdateNamespaceConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created connection.
	Connection *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *UpdateNamespaceConnectionResponse) Reset() {
	*x = UpdateNamespaceConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNamespaceConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceConnectionResponse) ProtoMessage() {}

func (x *UpdateNamespaceConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceConnectionResponse.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceConnectionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNamespaceConnectionResponse) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// DeleteNamespaceConnectionRequest represents a request to delete a
// connection.
type DeleteNamespaceConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Connection ID.
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *DeleteNamespaceConnectionRequest) Reset() {
	*x = DeleteNamespaceConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceConnectionRequest) ProtoMessage() {}

func (x *DeleteNamespaceConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceConnectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteNamespaceConnectionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteNamespaceConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// DeleteNamespaceConnectionResponse is an empty response.
type DeleteNamespaceConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNamespaceConnectionResponse) Reset() {
	*x = DeleteNamespaceConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceConnectionResponse) ProtoMessage() {}

func (x *DeleteNamespaceConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceConnectionResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceConnectionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{10}
}

// TestNamespaceConnectionRequest represents a request to test a connection.
type TestNamespaceConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Connection ID.
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *TestNamespaceConnectionRequest) Reset() {
	*x = TestNamespaceConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestNamespaceConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestNamespaceConnectionRequest) ProtoMessage() {}

func (x *TestNamespaceConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestNamespaceConnectionRequest.ProtoReflect.Descriptor instead.
func (*TestNamespaceConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{11}
}

func (x *TestNamespaceConnectionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TestNamespaceConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// TestNamespaceConnectionResponse is an empty response.
type TestNamespaceConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestNamespaceConnectionResponse) Reset() {
	*x = TestNamespaceConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestNamespaceConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestNamespaceConnectionResponse) ProtoMessage() {}

func (x *TestNamespaceConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestNamespaceConnectionResponse.ProtoReflect.Descriptor instead.
func (*TestNamespaceConnectionResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{12}
}

// Integration contains the parameters to create a connection between
// components and 3rd party apps.
type Integration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID-formatted unique identifier. It references a component definition.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Identifier of the integration, which references a component definition.
	// Components with that definition ID will be able to use the connections
	// produced by this integration.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Title, reflects the app name.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Short description of the integrated app.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Integrated app vendor name.
	Vendor string `protobuf:"bytes,5,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Integration icon. This is a path that's relative to the root of
	// the component implementation and that allows frontend applications to pull
	// and locate the icons.
	// See the `icon` field in the `ComponentDefinition` entity for more
	// information.
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// Reference to the vendor's documentation to expand the integration details.
	HelpLink *Integration_Link `protobuf:"bytes,7,opt,name=help_link,json=helpLink,proto3,oneof" json:"help_link,omitempty"`
	// The connection setup field definitions. Each integration will require
	// different data to connect to the 3rd party app.
	SetupSchema *structpb.Struct `protobuf:"bytes,10,opt,name=setup_schema,json=setupSchema,proto3" json:"setup_schema,omitempty"`
	// Configuration parameters required for the OAuth setup flow. This field
	// will be present only if the integration supports OAuth 2.0.
	OAuthConfig *Integration_OAuthConfig `protobuf:"bytes,11,opt,name=o_auth_config,json=oAuthConfig,proto3,oneof" json:"o_auth_config,omitempty"`
	// View defines how the integration is presented. The following fields are
	// only shown in the FULL view:
	// - schemas
	// - setupSchema
	// - oAuthConfig
	View View `protobuf:"varint,9,opt,name=view,proto3,enum=vdp.pipeline.v1beta.View" json:"view,omitempty"`
	// Schemas defines the supported schemas for the connection setup.
	// We haven't found a case for a schema that changes on the connection method
	// (components don't care about how the connection was built), so the schema
	// will be provided in the setupSchema field and the OAuth support and
	// configuration will be provided in oAuthConfig.
	//
	// Deprecated: Marked as deprecated in vdp/pipeline/v1beta/integration.proto.
	Schemas []*Integration_SetupSchema `protobuf:"bytes,8,rep,name=schemas,proto3" json:"schemas,omitempty"`
}

func (x *Integration) Reset() {
	*x = Integration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration) ProtoMessage() {}

func (x *Integration) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration.ProtoReflect.Descriptor instead.
func (*Integration) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{13}
}

func (x *Integration) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Integration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Integration) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Integration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Integration) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *Integration) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Integration) GetHelpLink() *Integration_Link {
	if x != nil {
		return x.HelpLink
	}
	return nil
}

func (x *Integration) GetSetupSchema() *structpb.Struct {
	if x != nil {
		return x.SetupSchema
	}
	return nil
}

func (x *Integration) GetOAuthConfig() *Integration_OAuthConfig {
	if x != nil {
		return x.OAuthConfig
	}
	return nil
}

func (x *Integration) GetView() View {
	if x != nil {
		return x.View
	}
	return View_VIEW_UNSPECIFIED
}

// Deprecated: Marked as deprecated in vdp/pipeline/v1beta/integration.proto.
func (x *Integration) GetSchemas() []*Integration_SetupSchema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

// ListPipelineIDsByConnectionIDRequest represents a request to list the
// pipelines that reference a connection.
type ListPipelineIDsByConnectionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace ID.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Connection ID.
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// The maximum number of items to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token. By default, the first page will be returned.
	PageToken *string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// The following filters are supported:
	// - `q` (fuzzy search on pipeline ID)
	Filter *string `protobuf:"bytes,5,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListPipelineIDsByConnectionIDRequest) Reset() {
	*x = ListPipelineIDsByConnectionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPipelineIDsByConnectionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineIDsByConnectionIDRequest) ProtoMessage() {}

func (x *ListPipelineIDsByConnectionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineIDsByConnectionIDRequest.ProtoReflect.Descriptor instead.
func (*ListPipelineIDsByConnectionIDRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{14}
}

func (x *ListPipelineIDsByConnectionIDRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListPipelineIDsByConnectionIDRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ListPipelineIDsByConnectionIDRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListPipelineIDsByConnectionIDRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListPipelineIDsByConnectionIDRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

// ListPipelineIDsByConnectionIDResponse contains a paginated list of integrations.
type ListPipelineIDsByConnectionIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of pipeline IDs matching the request parameters.
	PipelineIds []string `protobuf:"bytes,1,rep,name=pipeline_ids,json=pipelineIds,proto3" json:"pipeline_ids,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of items.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListPipelineIDsByConnectionIDResponse) Reset() {
	*x = ListPipelineIDsByConnectionIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPipelineIDsByConnectionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineIDsByConnectionIDResponse) ProtoMessage() {}

func (x *ListPipelineIDsByConnectionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineIDsByConnectionIDResponse.ProtoReflect.Descriptor instead.
func (*ListPipelineIDsByConnectionIDResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{15}
}

func (x *ListPipelineIDsByConnectionIDResponse) GetPipelineIds() []string {
	if x != nil {
		return x.PipelineIds
	}
	return nil
}

func (x *ListPipelineIDsByConnectionIDResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListPipelineIDsByConnectionIDResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// ListIntegrationsRequest represents a request to list the available
// integrations.
type ListIntegrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of items to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token. By default, the first page will be returned.
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// The following filters are supported:
	// - `qIntegration` (fuzzy search on title or vendor)
	// Examples:
	// - List integrations where app name or vendor match `googl`: `q="googl"`.
	Filter *string `protobuf:"bytes,3,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListIntegrationsRequest) Reset() {
	*x = ListIntegrationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationsRequest) ProtoMessage() {}

func (x *ListIntegrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationsRequest.ProtoReflect.Descriptor instead.
func (*ListIntegrationsRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{16}
}

func (x *ListIntegrationsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListIntegrationsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListIntegrationsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

// ListIntegrationsResponse contains a paginated list of integrations.
type ListIntegrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of integrations matching the request parameters.
	Integrations []*Integration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
	// Next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of items.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListIntegrationsResponse) Reset() {
	*x = ListIntegrationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationsResponse) ProtoMessage() {}

func (x *ListIntegrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationsResponse.ProtoReflect.Descriptor instead.
func (*ListIntegrationsResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{17}
}

func (x *ListIntegrationsResponse) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *ListIntegrationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListIntegrationsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// GetIntegrationRequest represents a request to view the details of an
// integration.
type GetIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Integration ID.
	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	// View allows clients to specify the desired view in the response.
	View *View `protobuf:"varint,2,opt,name=view,proto3,enum=vdp.pipeline.v1beta.View,oneof" json:"view,omitempty"`
}

func (x *GetIntegrationRequest) Reset() {
	*x = GetIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationRequest) ProtoMessage() {}

func (x *GetIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{18}
}

func (x *GetIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *GetIntegrationRequest) GetView() View {
	if x != nil && x.View != nil {
		return *x.View
	}
	return View_VIEW_UNSPECIFIED
}

// GetIntegrationResponse contains the requested integration.
type GetIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested integration.
	Integration *Integration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
}

func (x *GetIntegrationResponse) Reset() {
	*x = GetIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationResponse) ProtoMessage() {}

func (x *GetIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{19}
}

func (x *GetIntegrationResponse) GetIntegration() *Integration {
	if x != nil {
		return x.Integration
	}
	return nil
}

// Link contains the information to display an reference to an external URL.
type Integration_Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Text contains the message to display.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// URL contains the reference the link will redirect to.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Integration_Link) Reset() {
	*x = Integration_Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration_Link) ProtoMessage() {}

func (x *Integration_Link) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration_Link.ProtoReflect.Descriptor instead.
func (*Integration_Link) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Integration_Link) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Integration_Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// OAuthConfig contains the configuration parameters for fetching an access
// token via an OAuth 2.0 flow.
type Integration_OAuthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The URL of the OAuth server to initiate the authentication and
	// authorization process.
	AuthUrl string `protobuf:"bytes,1,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	// The URL of the OAuth server to exchange the authorization code for an
	// access token.
	AccessUrl string `protobuf:"bytes,2,opt,name=access_url,json=accessUrl,proto3" json:"access_url,omitempty"`
	// A list of scopes that identify the resources that the connection will be
	// able to access on the user's behalf.
	Scopes []string `protobuf:"bytes,11,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *Integration_OAuthConfig) Reset() {
	*x = Integration_OAuthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration_OAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration_OAuthConfig) ProtoMessage() {}

func (x *Integration_OAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration_OAuthConfig.ProtoReflect.Descriptor instead.
func (*Integration_OAuthConfig) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{13, 1}
}

func (x *Integration_OAuthConfig) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *Integration_OAuthConfig) GetAccessUrl() string {
	if x != nil {
		return x.AccessUrl
	}
	return ""
}

func (x *Integration_OAuthConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

// SetupSchema defines the schema for a connection setup.
// This message is deprecated.
type Integration_SetupSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The connection method, which will define the fields in the schema.
	//
	// Deprecated: Marked as deprecated in vdp/pipeline/v1beta/integration.proto.
	Method Connection_Method `protobuf:"varint,1,opt,name=method,proto3,enum=vdp.pipeline.v1beta.Connection_Method" json:"method,omitempty"`
	// The connection setup field definitions. Each integration will require
	// different data to connect to the 3rd party app.
	//
	// Deprecated: Marked as deprecated in vdp/pipeline/v1beta/integration.proto.
	Schema *structpb.Struct `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *Integration_SetupSchema) Reset() {
	*x = Integration_SetupSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration_SetupSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration_SetupSchema) ProtoMessage() {}

func (x *Integration_SetupSchema) ProtoReflect() protoreflect.Message {
	mi := &file_vdp_pipeline_v1beta_integration_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration_SetupSchema.ProtoReflect.Descriptor instead.
func (*Integration_SetupSchema) Descriptor() ([]byte, []int) {
	return file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP(), []int{13, 2}
}

// Deprecated: Marked as deprecated in vdp/pipeline/v1beta/integration.proto.
func (x *Integration_SetupSchema) GetMethod() Connection_Method {
	if x != nil {
		return x.Method
	}
	return Connection_METHOD_UNSPECIFIED
}

// Deprecated: Marked as deprecated in vdp/pipeline/v1beta/integration.proto.
func (x *Integration_SetupSchema) GetSchema() *structpb.Struct {
	if x != nil {
		return x.Schema
	}
	return nil
}

var File_vdp_pipeline_v1beta_integration_proto protoreflect.FileDescriptor

var file_vdp_pipeline_v1beta_integration_proto_rawDesc = []byte{
	0x0a, 0x25, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x76, 0x64, 0x70, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcd, 0x05, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe0, 0x41, 0x02, 0xe0, 0x41, 0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe0, 0x41, 0x02, 0xe0, 0x41, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x05,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x54, 0x0a,
	0x15, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x41,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4f,
	0x41, 0x55, 0x54, 0x48, 0x10, 0x02, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6f, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xe3, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xbb, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x22, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x66, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x21,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x64, 0x70,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x69,
	0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x20, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x23, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x1e, 0x54, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x54, 0x65, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x06, 0x0a, 0x0b,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x4c, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00,
	0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a,
	0x0c, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x5a,
	0x0a, 0x0d, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x41, 0x75, 0x74,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x4d,
	0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x05, 0xe0,
	0x41, 0x03, 0x18, 0x01, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x1a, 0x36, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x6e, 0x0a, 0x0b, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x75, 0x70, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x05, 0xe0,
	0x41, 0x03, 0x18, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x05, 0xe0, 0x41, 0x03, 0x18, 0x01, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x92, 0x02, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x25, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb3, 0x01, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xdf, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x64, 0x70, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x42, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x64, 0x70, 0x2f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0xa2, 0x02, 0x03, 0x56,
	0x50, 0x58, 0xaa, 0x02, 0x13, 0x56, 0x64, 0x70, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xca, 0x02, 0x13, 0x56, 0x64, 0x70, 0x5c, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xe2, 0x02,
	0x1f, 0x56, 0x64, 0x70, 0x5c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x15, 0x56, 0x64, 0x70, 0x3a, 0x3a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vdp_pipeline_v1beta_integration_proto_rawDescOnce sync.Once
	file_vdp_pipeline_v1beta_integration_proto_rawDescData = file_vdp_pipeline_v1beta_integration_proto_rawDesc
)

func file_vdp_pipeline_v1beta_integration_proto_rawDescGZIP() []byte {
	file_vdp_pipeline_v1beta_integration_proto_rawDescOnce.Do(func() {
		file_vdp_pipeline_v1beta_integration_proto_rawDescData = protoimpl.X.CompressGZIP(file_vdp_pipeline_v1beta_integration_proto_rawDescData)
	})
	return file_vdp_pipeline_v1beta_integration_proto_rawDescData
}

var file_vdp_pipeline_v1beta_integration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vdp_pipeline_v1beta_integration_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_vdp_pipeline_v1beta_integration_proto_goTypes = []interface{}{
	(Connection_Method)(0),                        // 0: vdp.pipeline.v1beta.Connection.Method
	(*Connection)(nil),                            // 1: vdp.pipeline.v1beta.Connection
	(*ListNamespaceConnectionsRequest)(nil),       // 2: vdp.pipeline.v1beta.ListNamespaceConnectionsRequest
	(*ListNamespaceConnectionsResponse)(nil),      // 3: vdp.pipeline.v1beta.ListNamespaceConnectionsResponse
	(*GetNamespaceConnectionRequest)(nil),         // 4: vdp.pipeline.v1beta.GetNamespaceConnectionRequest
	(*GetNamespaceConnectionResponse)(nil),        // 5: vdp.pipeline.v1beta.GetNamespaceConnectionResponse
	(*CreateNamespaceConnectionRequest)(nil),      // 6: vdp.pipeline.v1beta.CreateNamespaceConnectionRequest
	(*CreateNamespaceConnectionResponse)(nil),     // 7: vdp.pipeline.v1beta.CreateNamespaceConnectionResponse
	(*UpdateNamespaceConnectionRequest)(nil),      // 8: vdp.pipeline.v1beta.UpdateNamespaceConnectionRequest
	(*UpdateNamespaceConnectionResponse)(nil),     // 9: vdp.pipeline.v1beta.UpdateNamespaceConnectionResponse
	(*DeleteNamespaceConnectionRequest)(nil),      // 10: vdp.pipeline.v1beta.DeleteNamespaceConnectionRequest
	(*DeleteNamespaceConnectionResponse)(nil),     // 11: vdp.pipeline.v1beta.DeleteNamespaceConnectionResponse
	(*TestNamespaceConnectionRequest)(nil),        // 12: vdp.pipeline.v1beta.TestNamespaceConnectionRequest
	(*TestNamespaceConnectionResponse)(nil),       // 13: vdp.pipeline.v1beta.TestNamespaceConnectionResponse
	(*Integration)(nil),                           // 14: vdp.pipeline.v1beta.Integration
	(*ListPipelineIDsByConnectionIDRequest)(nil),  // 15: vdp.pipeline.v1beta.ListPipelineIDsByConnectionIDRequest
	(*ListPipelineIDsByConnectionIDResponse)(nil), // 16: vdp.pipeline.v1beta.ListPipelineIDsByConnectionIDResponse
	(*ListIntegrationsRequest)(nil),               // 17: vdp.pipeline.v1beta.ListIntegrationsRequest
	(*ListIntegrationsResponse)(nil),              // 18: vdp.pipeline.v1beta.ListIntegrationsResponse
	(*GetIntegrationRequest)(nil),                 // 19: vdp.pipeline.v1beta.GetIntegrationRequest
	(*GetIntegrationResponse)(nil),                // 20: vdp.pipeline.v1beta.GetIntegrationResponse
	(*Integration_Link)(nil),                      // 21: vdp.pipeline.v1beta.Integration.Link
	(*Integration_OAuthConfig)(nil),               // 22: vdp.pipeline.v1beta.Integration.OAuthConfig
	(*Integration_SetupSchema)(nil),               // 23: vdp.pipeline.v1beta.Integration.SetupSchema
	(*structpb.Struct)(nil),                       // 24: google.protobuf.Struct
	(View)(0),                                     // 25: vdp.pipeline.v1beta.View
	(*timestamppb.Timestamp)(nil),                 // 26: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),                 // 27: google.protobuf.FieldMask
}
var file_vdp_pipeline_v1beta_integration_proto_depIdxs = []int32{
	0,  // 0: vdp.pipeline.v1beta.Connection.method:type_name -> vdp.pipeline.v1beta.Connection.Method
	24, // 1: vdp.pipeline.v1beta.Connection.setup:type_name -> google.protobuf.Struct
	24, // 2: vdp.pipeline.v1beta.Connection.o_auth_access_details:type_name -> google.protobuf.Struct
	25, // 3: vdp.pipeline.v1beta.Connection.view:type_name -> vdp.pipeline.v1beta.View
	26, // 4: vdp.pipeline.v1beta.Connection.create_time:type_name -> google.protobuf.Timestamp
	26, // 5: vdp.pipeline.v1beta.Connection.update_time:type_name -> google.protobuf.Timestamp
	1,  // 6: vdp.pipeline.v1beta.ListNamespaceConnectionsResponse.connections:type_name -> vdp.pipeline.v1beta.Connection
	25, // 7: vdp.pipeline.v1beta.GetNamespaceConnectionRequest.view:type_name -> vdp.pipeline.v1beta.View
	1,  // 8: vdp.pipeline.v1beta.GetNamespaceConnectionResponse.connection:type_name -> vdp.pipeline.v1beta.Connection
	1,  // 9: vdp.pipeline.v1beta.CreateNamespaceConnectionRequest.connection:type_name -> vdp.pipeline.v1beta.Connection
	1,  // 10: vdp.pipeline.v1beta.CreateNamespaceConnectionResponse.connection:type_name -> vdp.pipeline.v1beta.Connection
	1,  // 11: vdp.pipeline.v1beta.UpdateNamespaceConnectionRequest.connection:type_name -> vdp.pipeline.v1beta.Connection
	27, // 12: vdp.pipeline.v1beta.UpdateNamespaceConnectionRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 13: vdp.pipeline.v1beta.UpdateNamespaceConnectionResponse.connection:type_name -> vdp.pipeline.v1beta.Connection
	21, // 14: vdp.pipeline.v1beta.Integration.help_link:type_name -> vdp.pipeline.v1beta.Integration.Link
	24, // 15: vdp.pipeline.v1beta.Integration.setup_schema:type_name -> google.protobuf.Struct
	22, // 16: vdp.pipeline.v1beta.Integration.o_auth_config:type_name -> vdp.pipeline.v1beta.Integration.OAuthConfig
	25, // 17: vdp.pipeline.v1beta.Integration.view:type_name -> vdp.pipeline.v1beta.View
	23, // 18: vdp.pipeline.v1beta.Integration.schemas:type_name -> vdp.pipeline.v1beta.Integration.SetupSchema
	14, // 19: vdp.pipeline.v1beta.ListIntegrationsResponse.integrations:type_name -> vdp.pipeline.v1beta.Integration
	25, // 20: vdp.pipeline.v1beta.GetIntegrationRequest.view:type_name -> vdp.pipeline.v1beta.View
	14, // 21: vdp.pipeline.v1beta.GetIntegrationResponse.integration:type_name -> vdp.pipeline.v1beta.Integration
	0,  // 22: vdp.pipeline.v1beta.Integration.SetupSchema.method:type_name -> vdp.pipeline.v1beta.Connection.Method
	24, // 23: vdp.pipeline.v1beta.Integration.SetupSchema.schema:type_name -> google.protobuf.Struct
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_vdp_pipeline_v1beta_integration_proto_init() }
func file_vdp_pipeline_v1beta_integration_proto_init() {
	if File_vdp_pipeline_v1beta_integration_proto != nil {
		return
	}
	file_vdp_pipeline_v1beta_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNamespaceConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNamespaceConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestNamespaceConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestNamespaceConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPipelineIDsByConnectionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPipelineIDsByConnectionIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration_Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration_OAuthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vdp_pipeline_v1beta_integration_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration_SetupSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_vdp_pipeline_v1beta_integration_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vdp_pipeline_v1beta_integration_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vdp_pipeline_v1beta_integration_proto_goTypes,
		DependencyIndexes: file_vdp_pipeline_v1beta_integration_proto_depIdxs,
		EnumInfos:         file_vdp_pipeline_v1beta_integration_proto_enumTypes,
		MessageInfos:      file_vdp_pipeline_v1beta_integration_proto_msgTypes,
	}.Build()
	File_vdp_pipeline_v1beta_integration_proto = out.File
	file_vdp_pipeline_v1beta_integration_proto_rawDesc = nil
	file_vdp_pipeline_v1beta_integration_proto_goTypes = nil
	file_vdp_pipeline_v1beta_integration_proto_depIdxs = nil
}
