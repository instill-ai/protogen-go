// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: base/mgmt/v1alpha/metric.proto

package mgmtv1alpha

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Mode enumerates the pipeline modes
type Mode int32

const (
	// Mode: UNSPECIFIED
	Mode_MODE_UNSPECIFIED Mode = 0
	// Mode: SYNC
	Mode_MODE_SYNC Mode = 1
	// Mode: ASYNC
	Mode_MODE_ASYNC Mode = 2
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_SYNC",
		2: "MODE_ASYNC",
	}
	Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"MODE_SYNC":        1,
		"MODE_ASYNC":       2,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_base_mgmt_v1alpha_metric_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_base_mgmt_v1alpha_metric_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_base_mgmt_v1alpha_metric_proto_rawDescGZIP(), []int{0}
}

// PipelineTriggerRecord represents a record for pipeline trigger
type PipelineTriggerRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp for the pipeline trigger time
	TriggerTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=trigger_time,json=triggerTime,proto3" json:"trigger_time,omitempty"`
	// Unique uuid for each pipeline trigger
	PipelineTriggerId string `protobuf:"bytes,2,opt,name=pipeline_trigger_id,json=pipelineTriggerId,proto3" json:"pipeline_trigger_id,omitempty"`
	// ID for the triggered pipeline
	PipelineId string `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// UID for the triggered pipeline
	PipelineUid string `protobuf:"bytes,4,opt,name=pipeline_uid,json=pipelineUid,proto3" json:"pipeline_uid,omitempty"`
	// Pipeline mode
	PipelineMode Mode `protobuf:"varint,5,opt,name=pipeline_mode,json=pipelineMode,proto3,enum=base.mgmt.v1alpha.Mode" json:"pipeline_mode,omitempty"`
	// Total compute time duration for this pipeline trigger
	ComputeTimeDuration float32 `protobuf:"fixed32,6,opt,name=compute_time_duration,json=computeTimeDuration,proto3" json:"compute_time_duration,omitempty"`
	// Final status for pipeline trigger
	Status string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PipelineTriggerRecord) Reset() {
	*x = PipelineTriggerRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_mgmt_v1alpha_metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineTriggerRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineTriggerRecord) ProtoMessage() {}

func (x *PipelineTriggerRecord) ProtoReflect() protoreflect.Message {
	mi := &file_base_mgmt_v1alpha_metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineTriggerRecord.ProtoReflect.Descriptor instead.
func (*PipelineTriggerRecord) Descriptor() ([]byte, []int) {
	return file_base_mgmt_v1alpha_metric_proto_rawDescGZIP(), []int{0}
}

func (x *PipelineTriggerRecord) GetTriggerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TriggerTime
	}
	return nil
}

func (x *PipelineTriggerRecord) GetPipelineTriggerId() string {
	if x != nil {
		return x.PipelineTriggerId
	}
	return ""
}

func (x *PipelineTriggerRecord) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *PipelineTriggerRecord) GetPipelineUid() string {
	if x != nil {
		return x.PipelineUid
	}
	return ""
}

func (x *PipelineTriggerRecord) GetPipelineMode() Mode {
	if x != nil {
		return x.PipelineMode
	}
	return Mode_MODE_UNSPECIFIED
}

func (x *PipelineTriggerRecord) GetComputeTimeDuration() float32 {
	if x != nil {
		return x.ComputeTimeDuration
	}
	return 0
}

func (x *PipelineTriggerRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// ListPipelineTriggerRecordsRequest represents a request to list
// pipeline trigger record
type ListPipelineTriggerRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of pipeline trigger record to return. The service may return
	// fewer than this value. If unspecified, at most 100 record will be returned. The
	// maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize *int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page token
	PageToken *string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
	// Filter expression to list record
	Filter *string `protobuf:"bytes,3,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *ListPipelineTriggerRecordsRequest) Reset() {
	*x = ListPipelineTriggerRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_mgmt_v1alpha_metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPipelineTriggerRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineTriggerRecordsRequest) ProtoMessage() {}

func (x *ListPipelineTriggerRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_mgmt_v1alpha_metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineTriggerRecordsRequest.ProtoReflect.Descriptor instead.
func (*ListPipelineTriggerRecordsRequest) Descriptor() ([]byte, []int) {
	return file_base_mgmt_v1alpha_metric_proto_rawDescGZIP(), []int{1}
}

func (x *ListPipelineTriggerRecordsRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListPipelineTriggerRecordsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListPipelineTriggerRecordsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

// ListPipelineTriggerRecordsResponse represents a response for a list
// of pipeline trigger record
type ListPipelineTriggerRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of pipeline trigger records
	PipelineTriggerRecords []*PipelineTriggerRecord `protobuf:"bytes,1,rep,name=pipeline_trigger_records,json=pipelineTriggerRecords,proto3" json:"pipeline_trigger_records,omitempty"`
	// Next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total count of pipeline trigger records
	TotalSize int64 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListPipelineTriggerRecordsResponse) Reset() {
	*x = ListPipelineTriggerRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_mgmt_v1alpha_metric_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPipelineTriggerRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelineTriggerRecordsResponse) ProtoMessage() {}

func (x *ListPipelineTriggerRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_base_mgmt_v1alpha_metric_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelineTriggerRecordsResponse.ProtoReflect.Descriptor instead.
func (*ListPipelineTriggerRecordsResponse) Descriptor() ([]byte, []int) {
	return file_base_mgmt_v1alpha_metric_proto_rawDescGZIP(), []int{2}
}

func (x *ListPipelineTriggerRecordsResponse) GetPipelineTriggerRecords() []*PipelineTriggerRecord {
	if x != nil {
		return x.PipelineTriggerRecords
	}
	return nil
}

func (x *ListPipelineTriggerRecordsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListPipelineTriggerRecordsResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

var File_base_mgmt_v1alpha_metric_proto protoreflect.FileDescriptor

var file_base_mgmt_v1alpha_metric_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x02, 0x0a, 0x15, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x3d, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x37, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xcf, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x18, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x16, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x2a, 0x3b, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53,
	0x59, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x53,
	0x59, 0x4e, 0x43, 0x10, 0x02, 0x42, 0xcb, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42,
	0x0b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2d, 0x67,
	0x6f, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6d, 0x67, 0x6d, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x3b, 0x6d, 0x67, 0x6d, 0x74, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2,
	0x02, 0x03, 0x42, 0x4d, 0x58, 0xaa, 0x02, 0x11, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x67, 0x6d,
	0x74, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x11, 0x42, 0x61, 0x73, 0x65,
	0x5c, 0x4d, 0x67, 0x6d, 0x74, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x1d,
	0x42, 0x61, 0x73, 0x65, 0x5c, 0x4d, 0x67, 0x6d, 0x74, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13,
	0x42, 0x61, 0x73, 0x65, 0x3a, 0x3a, 0x4d, 0x67, 0x6d, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_mgmt_v1alpha_metric_proto_rawDescOnce sync.Once
	file_base_mgmt_v1alpha_metric_proto_rawDescData = file_base_mgmt_v1alpha_metric_proto_rawDesc
)

func file_base_mgmt_v1alpha_metric_proto_rawDescGZIP() []byte {
	file_base_mgmt_v1alpha_metric_proto_rawDescOnce.Do(func() {
		file_base_mgmt_v1alpha_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_mgmt_v1alpha_metric_proto_rawDescData)
	})
	return file_base_mgmt_v1alpha_metric_proto_rawDescData
}

var file_base_mgmt_v1alpha_metric_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_base_mgmt_v1alpha_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_base_mgmt_v1alpha_metric_proto_goTypes = []interface{}{
	(Mode)(0),                     // 0: base.mgmt.v1alpha.Mode
	(*PipelineTriggerRecord)(nil), // 1: base.mgmt.v1alpha.PipelineTriggerRecord
	(*ListPipelineTriggerRecordsRequest)(nil),  // 2: base.mgmt.v1alpha.ListPipelineTriggerRecordsRequest
	(*ListPipelineTriggerRecordsResponse)(nil), // 3: base.mgmt.v1alpha.ListPipelineTriggerRecordsResponse
	(*timestamppb.Timestamp)(nil),              // 4: google.protobuf.Timestamp
}
var file_base_mgmt_v1alpha_metric_proto_depIdxs = []int32{
	4, // 0: base.mgmt.v1alpha.PipelineTriggerRecord.trigger_time:type_name -> google.protobuf.Timestamp
	0, // 1: base.mgmt.v1alpha.PipelineTriggerRecord.pipeline_mode:type_name -> base.mgmt.v1alpha.Mode
	1, // 2: base.mgmt.v1alpha.ListPipelineTriggerRecordsResponse.pipeline_trigger_records:type_name -> base.mgmt.v1alpha.PipelineTriggerRecord
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_base_mgmt_v1alpha_metric_proto_init() }
func file_base_mgmt_v1alpha_metric_proto_init() {
	if File_base_mgmt_v1alpha_metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_mgmt_v1alpha_metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineTriggerRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_mgmt_v1alpha_metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPipelineTriggerRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_mgmt_v1alpha_metric_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPipelineTriggerRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_base_mgmt_v1alpha_metric_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_mgmt_v1alpha_metric_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_mgmt_v1alpha_metric_proto_goTypes,
		DependencyIndexes: file_base_mgmt_v1alpha_metric_proto_depIdxs,
		EnumInfos:         file_base_mgmt_v1alpha_metric_proto_enumTypes,
		MessageInfos:      file_base_mgmt_v1alpha_metric_proto_msgTypes,
	}.Build()
	File_base_mgmt_v1alpha_metric_proto = out.File
	file_base_mgmt_v1alpha_metric_proto_rawDesc = nil
	file_base_mgmt_v1alpha_metric_proto_goTypes = nil
	file_base_mgmt_v1alpha_metric_proto_depIdxs = nil
}
