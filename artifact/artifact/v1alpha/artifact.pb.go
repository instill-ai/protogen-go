// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: artifact/artifact/v1alpha/artifact.proto

package artifactv1alpha

import (
	v1beta "github.com/instill-ai/protogen-go/common/healthcheck/v1beta"
	v1alpha "github.com/instill-ai/protogen-go/common/run/v1alpha"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CatalogRunAction describes the actions a user has over a catalog.
type CatalogRunAction int32

const (
	// Unspecified.
	CatalogRunAction_CATALOG_RUN_ACTION_UNSPECIFIED CatalogRunAction = 0
	// Create catalog.
	CatalogRunAction_CATALOG_RUN_ACTION_CREATE CatalogRunAction = 1
	// Update catalog.
	CatalogRunAction_CATALOG_RUN_ACTION_UPDATE CatalogRunAction = 2
	// Delete catalog.
	CatalogRunAction_CATALOG_RUN_ACTION_DELETE CatalogRunAction = 3
	// Upload catalog file.
	CatalogRunAction_CATALOG_RUN_ACTION_CREATE_FILE CatalogRunAction = 4
	// Process catalog file.
	CatalogRunAction_CATALOG_RUN_ACTION_PROCESS_FILE CatalogRunAction = 5
	// Delete catalog file.
	CatalogRunAction_CATALOG_RUN_ACTION_DELETE_FILE CatalogRunAction = 6
)

// Enum value maps for CatalogRunAction.
var (
	CatalogRunAction_name = map[int32]string{
		0: "CATALOG_RUN_ACTION_UNSPECIFIED",
		1: "CATALOG_RUN_ACTION_CREATE",
		2: "CATALOG_RUN_ACTION_UPDATE",
		3: "CATALOG_RUN_ACTION_DELETE",
		4: "CATALOG_RUN_ACTION_CREATE_FILE",
		5: "CATALOG_RUN_ACTION_PROCESS_FILE",
		6: "CATALOG_RUN_ACTION_DELETE_FILE",
	}
	CatalogRunAction_value = map[string]int32{
		"CATALOG_RUN_ACTION_UNSPECIFIED":  0,
		"CATALOG_RUN_ACTION_CREATE":       1,
		"CATALOG_RUN_ACTION_UPDATE":       2,
		"CATALOG_RUN_ACTION_DELETE":       3,
		"CATALOG_RUN_ACTION_CREATE_FILE":  4,
		"CATALOG_RUN_ACTION_PROCESS_FILE": 5,
		"CATALOG_RUN_ACTION_DELETE_FILE":  6,
	}
)

func (x CatalogRunAction) Enum() *CatalogRunAction {
	p := new(CatalogRunAction)
	*p = x
	return p
}

func (x CatalogRunAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CatalogRunAction) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_artifact_v1alpha_artifact_proto_enumTypes[0].Descriptor()
}

func (CatalogRunAction) Type() protoreflect.EnumType {
	return &file_artifact_artifact_v1alpha_artifact_proto_enumTypes[0]
}

func (x CatalogRunAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CatalogRunAction.Descriptor instead.
func (CatalogRunAction) EnumDescriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{0}
}

// LivenessRequest represents a request to check a service liveness status
type LivenessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckRequest message
	HealthCheckRequest *v1beta.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LivenessRequest) Reset() {
	*x = LivenessRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessRequest) ProtoMessage() {}

func (x *LivenessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessRequest.ProtoReflect.Descriptor instead.
func (*LivenessRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{0}
}

func (x *LivenessRequest) GetHealthCheckRequest() *v1beta.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// LivenessResponse represents a response for a service liveness status
type LivenessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckResponse message
	HealthCheckResponse *v1beta.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LivenessResponse) Reset() {
	*x = LivenessResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessResponse) ProtoMessage() {}

func (x *LivenessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessResponse.ProtoReflect.Descriptor instead.
func (*LivenessResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{1}
}

func (x *LivenessResponse) GetHealthCheckResponse() *v1beta.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// ReadinessRequest represents a request to check a service readiness status
type ReadinessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckRequest message
	HealthCheckRequest *v1beta.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReadinessRequest) Reset() {
	*x = ReadinessRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessRequest) ProtoMessage() {}

func (x *ReadinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessRequest.ProtoReflect.Descriptor instead.
func (*ReadinessRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{2}
}

func (x *ReadinessRequest) GetHealthCheckRequest() *v1beta.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// ReadinessResponse represents a response for a service readiness status
type ReadinessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckResponse message
	HealthCheckResponse *v1beta.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReadinessResponse) Reset() {
	*x = ReadinessResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessResponse) ProtoMessage() {}

func (x *ReadinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessResponse.ProtoReflect.Descriptor instead.
func (*ReadinessResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{3}
}

func (x *ReadinessResponse) GetHealthCheckResponse() *v1beta.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// CatalogRun represents a single execution of a catalog action.
type CatalogRun struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for each run.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// catalog uid
	CatalogUid string `protobuf:"bytes,2,opt,name=catalog_uid,json=catalogUid,proto3" json:"catalog_uid,omitempty"`
	// The file uids.
	FileUids []string `protobuf:"bytes,3,rep,name=file_uids,json=fileUids,proto3" json:"file_uids,omitempty"`
	// Action of the catalog run.
	Action CatalogRunAction `protobuf:"varint,4,opt,name=action,proto3,enum=artifact.artifact.v1alpha.CatalogRunAction" json:"action,omitempty"`
	// Current status of the run.
	Status v1alpha.RunStatus `protobuf:"varint,5,opt,name=status,proto3,enum=common.run.v1alpha.RunStatus" json:"status,omitempty"`
	// Origin of the run.
	Source v1alpha.RunSource `protobuf:"varint,6,opt,name=source,proto3,enum=common.run.v1alpha.RunSource" json:"source,omitempty"`
	// Time taken to complete the run in milliseconds.
	TotalDuration *int32 `protobuf:"varint,7,opt,name=total_duration,json=totalDuration,proto3,oneof" json:"total_duration,omitempty"`
	// Runner ID. (User UID)
	RunnerId *string `protobuf:"bytes,8,opt,name=runner_id,json=runnerId,proto3,oneof" json:"runner_id,omitempty"`
	// Namespace ID.
	NamespaceId *string `protobuf:"bytes,9,opt,name=namespace_id,json=namespaceId,proto3,oneof" json:"namespace_id,omitempty"`
	// Run request payload.
	Payload *structpb.Struct `protobuf:"bytes,11,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	// Time when the run started execution.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Time when the run completed.
	CompleteTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=complete_time,json=completeTime,proto3,oneof" json:"complete_time,omitempty"`
	// Error message if the run failed.
	Error *string `protobuf:"bytes,16,opt,name=error,proto3,oneof" json:"error,omitempty"`
	// Credits used of internal accounting metric.
	CreditAmount  *float32 `protobuf:"fixed32,17,opt,name=credit_amount,json=creditAmount,proto3,oneof" json:"credit_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogRun) Reset() {
	*x = CatalogRun{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogRun) ProtoMessage() {}

func (x *CatalogRun) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogRun.ProtoReflect.Descriptor instead.
func (*CatalogRun) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{4}
}

func (x *CatalogRun) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CatalogRun) GetCatalogUid() string {
	if x != nil {
		return x.CatalogUid
	}
	return ""
}

func (x *CatalogRun) GetFileUids() []string {
	if x != nil {
		return x.FileUids
	}
	return nil
}

func (x *CatalogRun) GetAction() CatalogRunAction {
	if x != nil {
		return x.Action
	}
	return CatalogRunAction_CATALOG_RUN_ACTION_UNSPECIFIED
}

func (x *CatalogRun) GetStatus() v1alpha.RunStatus {
	if x != nil {
		return x.Status
	}
	return v1alpha.RunStatus(0)
}

func (x *CatalogRun) GetSource() v1alpha.RunSource {
	if x != nil {
		return x.Source
	}
	return v1alpha.RunSource(0)
}

func (x *CatalogRun) GetTotalDuration() int32 {
	if x != nil && x.TotalDuration != nil {
		return *x.TotalDuration
	}
	return 0
}

func (x *CatalogRun) GetRunnerId() string {
	if x != nil && x.RunnerId != nil {
		return *x.RunnerId
	}
	return ""
}

func (x *CatalogRun) GetNamespaceId() string {
	if x != nil && x.NamespaceId != nil {
		return *x.NamespaceId
	}
	return ""
}

func (x *CatalogRun) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CatalogRun) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CatalogRun) GetCompleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteTime
	}
	return nil
}

func (x *CatalogRun) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *CatalogRun) GetCreditAmount() float32 {
	if x != nil && x.CreditAmount != nil {
		return *x.CreditAmount
	}
	return 0
}

// ListCatalogRunsResponse is the response message for ListCatalogRuns.
type ListCatalogRunsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of runs.
	CatalogRuns []*CatalogRun `protobuf:"bytes,1,rep,name=catalog_runs,json=catalogRuns,proto3" json:"catalog_runs,omitempty"`
	// The total number of runs matching the request.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The current page number.
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// The number of items per page.
	PageSize      int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogRunsResponse) Reset() {
	*x = ListCatalogRunsResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogRunsResponse) ProtoMessage() {}

func (x *ListCatalogRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogRunsResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogRunsResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{5}
}

func (x *ListCatalogRunsResponse) GetCatalogRuns() []*CatalogRun {
	if x != nil {
		return x.CatalogRuns
	}
	return nil
}

func (x *ListCatalogRunsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListCatalogRunsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCatalogRunsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ListCatalogRunsRequest is the request message for ListCatalogRuns.
type ListCatalogRunsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the owner of the catalog.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The ID of the catalog for which the runs will be listed.
	CatalogId string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The page number to retrieve.
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// The maximum number of items per page to return. The default and cap values
	// are 10 and 100, respectively.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,6,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Order by field, with options for ordering by `id`, `create_time` or `update_time`.
	// Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
	OrderBy       *string `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogRunsRequest) Reset() {
	*x = ListCatalogRunsRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogRunsRequest) ProtoMessage() {}

func (x *ListCatalogRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogRunsRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogRunsRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{6}
}

func (x *ListCatalogRunsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListCatalogRunsRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *ListCatalogRunsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCatalogRunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCatalogRunsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListCatalogRunsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

var File_artifact_artifact_v1alpha_artifact_proto protoreflect.FileDescriptor

const file_artifact_artifact_v1alpha_artifact_proto_rawDesc = "" +
	"\n" +
	"(artifact/artifact/v1alpha/artifact.proto\x12\x19artifact.artifact.v1alpha\x1a+common/healthcheck/v1beta/healthcheck.proto\x1a\x1ccommon/run/v1alpha/run.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x95\x01\n" +
	"\x0fLivenessRequest\x12i\n" +
	"\x14health_check_request\x18\x01 \x01(\v2-.common.healthcheck.v1beta.HealthCheckRequestB\x03\xe0A\x01H\x00R\x12healthCheckRequest\x88\x01\x01B\x17\n" +
	"\x15_health_check_request\"v\n" +
	"\x10LivenessResponse\x12b\n" +
	"\x15health_check_response\x18\x01 \x01(\v2..common.healthcheck.v1beta.HealthCheckResponseR\x13healthCheckResponse\"\x96\x01\n" +
	"\x10ReadinessRequest\x12i\n" +
	"\x14health_check_request\x18\x01 \x01(\v2-.common.healthcheck.v1beta.HealthCheckRequestB\x03\xe0A\x01H\x00R\x12healthCheckRequest\x88\x01\x01B\x17\n" +
	"\x15_health_check_request\"w\n" +
	"\x11ReadinessResponse\x12b\n" +
	"\x15health_check_response\x18\x01 \x01(\v2..common.healthcheck.v1beta.HealthCheckResponseR\x13healthCheckResponse\"\xcd\x06\n" +
	"\n" +
	"CatalogRun\x12\x15\n" +
	"\x03uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x03uid\x12$\n" +
	"\vcatalog_uid\x18\x02 \x01(\tB\x03\xe0A\x03R\n" +
	"catalogUid\x12#\n" +
	"\tfile_uids\x18\x03 \x03(\tB\x06\xe0A\x03\xe0A\x01R\bfileUids\x12H\n" +
	"\x06action\x18\x04 \x01(\x0e2+.artifact.artifact.v1alpha.CatalogRunActionB\x03\xe0A\x03R\x06action\x12:\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1d.common.run.v1alpha.RunStatusB\x03\xe0A\x03R\x06status\x12:\n" +
	"\x06source\x18\x06 \x01(\x0e2\x1d.common.run.v1alpha.RunSourceB\x03\xe0A\x03R\x06source\x122\n" +
	"\x0etotal_duration\x18\a \x01(\x05B\x06\xe0A\x03\xe0A\x01H\x00R\rtotalDuration\x88\x01\x01\x12(\n" +
	"\trunner_id\x18\b \x01(\tB\x06\xe0A\x03\xe0A\x01H\x01R\brunnerId\x88\x01\x01\x12.\n" +
	"\fnamespace_id\x18\t \x01(\tB\x06\xe0A\x03\xe0A\x01H\x02R\vnamespaceId\x88\x01\x01\x12>\n" +
	"\apayload\x18\v \x01(\v2\x17.google.protobuf.StructB\x06\xe0A\x03\xe0A\x01H\x03R\apayload\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\tstartTime\x12L\n" +
	"\rcomplete_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampB\x06\xe0A\x03\xe0A\x01H\x04R\fcompleteTime\x88\x01\x01\x12!\n" +
	"\x05error\x18\x10 \x01(\tB\x06\xe0A\x03\xe0A\x01H\x05R\x05error\x88\x01\x01\x120\n" +
	"\rcredit_amount\x18\x11 \x01(\x02B\x06\xe0A\x03\xe0A\x01H\x06R\fcreditAmount\x88\x01\x01B\x11\n" +
	"\x0f_total_durationB\f\n" +
	"\n" +
	"_runner_idB\x0f\n" +
	"\r_namespace_idB\n" +
	"\n" +
	"\b_payloadB\x10\n" +
	"\x0e_complete_timeB\b\n" +
	"\x06_errorB\x10\n" +
	"\x0e_credit_amount\"\xc7\x01\n" +
	"\x17ListCatalogRunsResponse\x12M\n" +
	"\fcatalog_runs\x18\x01 \x03(\v2%.artifact.artifact.v1alpha.CatalogRunB\x03\xe0A\x03R\vcatalogRuns\x12\"\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x05B\x03\xe0A\x03R\ttotalSize\x12\x17\n" +
	"\x04page\x18\x03 \x01(\x05B\x03\xe0A\x03R\x04page\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x03R\bpageSize\"\xfe\x01\n" +
	"\x16ListCatalogRunsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tB\x03\xe0A\x02R\tcatalogId\x12\x17\n" +
	"\x04page\x18\x03 \x01(\x05B\x03\xe0A\x01R\x04page\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12 \n" +
	"\x06filter\x18\x06 \x01(\tB\x03\xe0A\x01H\x00R\x06filter\x88\x01\x01\x12#\n" +
	"\border_by\x18\a \x01(\tB\x03\xe0A\x01H\x01R\aorderBy\x88\x01\x01B\t\n" +
	"\a_filterB\v\n" +
	"\t_order_by*\x80\x02\n" +
	"\x10CatalogRunAction\x12\"\n" +
	"\x1eCATALOG_RUN_ACTION_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19CATALOG_RUN_ACTION_CREATE\x10\x01\x12\x1d\n" +
	"\x19CATALOG_RUN_ACTION_UPDATE\x10\x02\x12\x1d\n" +
	"\x19CATALOG_RUN_ACTION_DELETE\x10\x03\x12\"\n" +
	"\x1eCATALOG_RUN_ACTION_CREATE_FILE\x10\x04\x12#\n" +
	"\x1fCATALOG_RUN_ACTION_PROCESS_FILE\x10\x05\x12\"\n" +
	"\x1eCATALOG_RUN_ACTION_DELETE_FILE\x10\x06B\x81\x02\n" +
	"\x1dcom.artifact.artifact.v1alphaB\rArtifactProtoP\x01ZKgithub.com/instill-ai/protogen-go/artifact/artifact/v1alpha;artifactv1alpha\xa2\x02\x03AAX\xaa\x02\x19Artifact.Artifact.V1alpha\xca\x02\x19Artifact\\Artifact\\V1alpha\xe2\x02%Artifact\\Artifact\\V1alpha\\GPBMetadata\xea\x02\x1bArtifact::Artifact::V1alphab\x06proto3"

var (
	file_artifact_artifact_v1alpha_artifact_proto_rawDescOnce sync.Once
	file_artifact_artifact_v1alpha_artifact_proto_rawDescData []byte
)

func file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP() []byte {
	file_artifact_artifact_v1alpha_artifact_proto_rawDescOnce.Do(func() {
		file_artifact_artifact_v1alpha_artifact_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_artifact_artifact_v1alpha_artifact_proto_rawDesc), len(file_artifact_artifact_v1alpha_artifact_proto_rawDesc)))
	})
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescData
}

var file_artifact_artifact_v1alpha_artifact_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_artifact_artifact_v1alpha_artifact_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_artifact_artifact_v1alpha_artifact_proto_goTypes = []any{
	(CatalogRunAction)(0),              // 0: artifact.artifact.v1alpha.CatalogRunAction
	(*LivenessRequest)(nil),            // 1: artifact.artifact.v1alpha.LivenessRequest
	(*LivenessResponse)(nil),           // 2: artifact.artifact.v1alpha.LivenessResponse
	(*ReadinessRequest)(nil),           // 3: artifact.artifact.v1alpha.ReadinessRequest
	(*ReadinessResponse)(nil),          // 4: artifact.artifact.v1alpha.ReadinessResponse
	(*CatalogRun)(nil),                 // 5: artifact.artifact.v1alpha.CatalogRun
	(*ListCatalogRunsResponse)(nil),    // 6: artifact.artifact.v1alpha.ListCatalogRunsResponse
	(*ListCatalogRunsRequest)(nil),     // 7: artifact.artifact.v1alpha.ListCatalogRunsRequest
	(*v1beta.HealthCheckRequest)(nil),  // 8: common.healthcheck.v1beta.HealthCheckRequest
	(*v1beta.HealthCheckResponse)(nil), // 9: common.healthcheck.v1beta.HealthCheckResponse
	(v1alpha.RunStatus)(0),             // 10: common.run.v1alpha.RunStatus
	(v1alpha.RunSource)(0),             // 11: common.run.v1alpha.RunSource
	(*structpb.Struct)(nil),            // 12: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),      // 13: google.protobuf.Timestamp
}
var file_artifact_artifact_v1alpha_artifact_proto_depIdxs = []int32{
	8,  // 0: artifact.artifact.v1alpha.LivenessRequest.health_check_request:type_name -> common.healthcheck.v1beta.HealthCheckRequest
	9,  // 1: artifact.artifact.v1alpha.LivenessResponse.health_check_response:type_name -> common.healthcheck.v1beta.HealthCheckResponse
	8,  // 2: artifact.artifact.v1alpha.ReadinessRequest.health_check_request:type_name -> common.healthcheck.v1beta.HealthCheckRequest
	9,  // 3: artifact.artifact.v1alpha.ReadinessResponse.health_check_response:type_name -> common.healthcheck.v1beta.HealthCheckResponse
	0,  // 4: artifact.artifact.v1alpha.CatalogRun.action:type_name -> artifact.artifact.v1alpha.CatalogRunAction
	10, // 5: artifact.artifact.v1alpha.CatalogRun.status:type_name -> common.run.v1alpha.RunStatus
	11, // 6: artifact.artifact.v1alpha.CatalogRun.source:type_name -> common.run.v1alpha.RunSource
	12, // 7: artifact.artifact.v1alpha.CatalogRun.payload:type_name -> google.protobuf.Struct
	13, // 8: artifact.artifact.v1alpha.CatalogRun.start_time:type_name -> google.protobuf.Timestamp
	13, // 9: artifact.artifact.v1alpha.CatalogRun.complete_time:type_name -> google.protobuf.Timestamp
	5,  // 10: artifact.artifact.v1alpha.ListCatalogRunsResponse.catalog_runs:type_name -> artifact.artifact.v1alpha.CatalogRun
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_artifact_artifact_v1alpha_artifact_proto_init() }
func file_artifact_artifact_v1alpha_artifact_proto_init() {
	if File_artifact_artifact_v1alpha_artifact_proto != nil {
		return
	}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[0].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[2].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[4].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_artifact_artifact_v1alpha_artifact_proto_rawDesc), len(file_artifact_artifact_v1alpha_artifact_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_artifact_artifact_v1alpha_artifact_proto_goTypes,
		DependencyIndexes: file_artifact_artifact_v1alpha_artifact_proto_depIdxs,
		EnumInfos:         file_artifact_artifact_v1alpha_artifact_proto_enumTypes,
		MessageInfos:      file_artifact_artifact_v1alpha_artifact_proto_msgTypes,
	}.Build()
	File_artifact_artifact_v1alpha_artifact_proto = out.File
	file_artifact_artifact_v1alpha_artifact_proto_goTypes = nil
	file_artifact_artifact_v1alpha_artifact_proto_depIdxs = nil
}
