// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: artifact/artifact/v1alpha/artifact.proto

package artifactv1alpha

import (
	v1beta "github.com/instill-ai/protogen-go/common/healthcheck/v1beta"
	v1alpha "github.com/instill-ai/protogen-go/common/run/v1alpha"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Catalog Type. e.g. "persistent" or "ephemeral"
type CatalogType int32

const (
	// UNSPECIFIED
	CatalogType_CATALOG_TYPE_UNSPECIFIED CatalogType = 0
	// PERSISTENT
	CatalogType_CATALOG_TYPE_PERSISTENT CatalogType = 1
	// EPHEMERAL
	CatalogType_CATALOG_TYPE_EPHEMERAL CatalogType = 2
)

// Enum value maps for CatalogType.
var (
	CatalogType_name = map[int32]string{
		0: "CATALOG_TYPE_UNSPECIFIED",
		1: "CATALOG_TYPE_PERSISTENT",
		2: "CATALOG_TYPE_EPHEMERAL",
	}
	CatalogType_value = map[string]int32{
		"CATALOG_TYPE_UNSPECIFIED": 0,
		"CATALOG_TYPE_PERSISTENT":  1,
		"CATALOG_TYPE_EPHEMERAL":   2,
	}
)

func (x CatalogType) Enum() *CatalogType {
	p := new(CatalogType)
	*p = x
	return p
}

func (x CatalogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CatalogType) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_artifact_v1alpha_artifact_proto_enumTypes[0].Descriptor()
}

func (CatalogType) Type() protoreflect.EnumType {
	return &file_artifact_artifact_v1alpha_artifact_proto_enumTypes[0]
}

func (x CatalogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CatalogType.Descriptor instead.
func (CatalogType) EnumDescriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{0}
}

// file embedding process status
type FileProcessStatus int32

const (
	// UNSPECIFIED
	FileProcessStatus_FILE_PROCESS_STATUS_UNSPECIFIED FileProcessStatus = 0
	// NOTSTARTED
	FileProcessStatus_FILE_PROCESS_STATUS_NOTSTARTED FileProcessStatus = 1
	// file is waiting for embedding process
	FileProcessStatus_FILE_PROCESS_STATUS_WAITING FileProcessStatus = 2
	// file is converting
	FileProcessStatus_FILE_PROCESS_STATUS_CONVERTING FileProcessStatus = 3
	// file is chunking
	FileProcessStatus_FILE_PROCESS_STATUS_CHUNKING FileProcessStatus = 4
	// file is embedding
	FileProcessStatus_FILE_PROCESS_STATUS_EMBEDDING FileProcessStatus = 5
	// completed
	FileProcessStatus_FILE_PROCESS_STATUS_COMPLETED FileProcessStatus = 6
	// failed
	FileProcessStatus_FILE_PROCESS_STATUS_FAILED FileProcessStatus = 7
	// file is summarizing
	FileProcessStatus_FILE_PROCESS_STATUS_SUMMARIZING FileProcessStatus = 8
)

// Enum value maps for FileProcessStatus.
var (
	FileProcessStatus_name = map[int32]string{
		0: "FILE_PROCESS_STATUS_UNSPECIFIED",
		1: "FILE_PROCESS_STATUS_NOTSTARTED",
		2: "FILE_PROCESS_STATUS_WAITING",
		3: "FILE_PROCESS_STATUS_CONVERTING",
		4: "FILE_PROCESS_STATUS_CHUNKING",
		5: "FILE_PROCESS_STATUS_EMBEDDING",
		6: "FILE_PROCESS_STATUS_COMPLETED",
		7: "FILE_PROCESS_STATUS_FAILED",
		8: "FILE_PROCESS_STATUS_SUMMARIZING",
	}
	FileProcessStatus_value = map[string]int32{
		"FILE_PROCESS_STATUS_UNSPECIFIED": 0,
		"FILE_PROCESS_STATUS_NOTSTARTED":  1,
		"FILE_PROCESS_STATUS_WAITING":     2,
		"FILE_PROCESS_STATUS_CONVERTING":  3,
		"FILE_PROCESS_STATUS_CHUNKING":    4,
		"FILE_PROCESS_STATUS_EMBEDDING":   5,
		"FILE_PROCESS_STATUS_COMPLETED":   6,
		"FILE_PROCESS_STATUS_FAILED":      7,
		"FILE_PROCESS_STATUS_SUMMARIZING": 8,
	}
)

func (x FileProcessStatus) Enum() *FileProcessStatus {
	p := new(FileProcessStatus)
	*p = x
	return p
}

func (x FileProcessStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileProcessStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_artifact_v1alpha_artifact_proto_enumTypes[1].Descriptor()
}

func (FileProcessStatus) Type() protoreflect.EnumType {
	return &file_artifact_artifact_v1alpha_artifact_proto_enumTypes[1]
}

func (x FileProcessStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileProcessStatus.Descriptor instead.
func (FileProcessStatus) EnumDescriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{1}
}

// file type
type FileType int32

const (
	// unspecified
	FileType_FILE_TYPE_UNSPECIFIED FileType = 0
	// text
	FileType_FILE_TYPE_TEXT FileType = 1
	// PDF
	FileType_FILE_TYPE_PDF FileType = 2
	// MARKDOWN
	FileType_FILE_TYPE_MARKDOWN FileType = 3
	// PNG(not supported yet)
	FileType_FILE_TYPE_PNG FileType = 4
	// JPEG(not supported yet)
	FileType_FILE_TYPE_JPEG FileType = 5
	// JPG(not supported yet)
	FileType_FILE_TYPE_JPG FileType = 6
	// HTML
	FileType_FILE_TYPE_HTML FileType = 7
	// DOCX
	FileType_FILE_TYPE_DOCX FileType = 8
	// DOC
	FileType_FILE_TYPE_DOC FileType = 9
	// PPT
	FileType_FILE_TYPE_PPT FileType = 10
	// PPTX
	FileType_FILE_TYPE_PPTX FileType = 11
	// XLS
	FileType_FILE_TYPE_XLS FileType = 12
	// XLSX
	FileType_FILE_TYPE_XLSX FileType = 13
	// CSV
	FileType_FILE_TYPE_CSV FileType = 14
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0:  "FILE_TYPE_UNSPECIFIED",
		1:  "FILE_TYPE_TEXT",
		2:  "FILE_TYPE_PDF",
		3:  "FILE_TYPE_MARKDOWN",
		4:  "FILE_TYPE_PNG",
		5:  "FILE_TYPE_JPEG",
		6:  "FILE_TYPE_JPG",
		7:  "FILE_TYPE_HTML",
		8:  "FILE_TYPE_DOCX",
		9:  "FILE_TYPE_DOC",
		10: "FILE_TYPE_PPT",
		11: "FILE_TYPE_PPTX",
		12: "FILE_TYPE_XLS",
		13: "FILE_TYPE_XLSX",
		14: "FILE_TYPE_CSV",
	}
	FileType_value = map[string]int32{
		"FILE_TYPE_UNSPECIFIED": 0,
		"FILE_TYPE_TEXT":        1,
		"FILE_TYPE_PDF":         2,
		"FILE_TYPE_MARKDOWN":    3,
		"FILE_TYPE_PNG":         4,
		"FILE_TYPE_JPEG":        5,
		"FILE_TYPE_JPG":         6,
		"FILE_TYPE_HTML":        7,
		"FILE_TYPE_DOCX":        8,
		"FILE_TYPE_DOC":         9,
		"FILE_TYPE_PPT":         10,
		"FILE_TYPE_PPTX":        11,
		"FILE_TYPE_XLS":         12,
		"FILE_TYPE_XLSX":        13,
		"FILE_TYPE_CSV":         14,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_artifact_v1alpha_artifact_proto_enumTypes[2].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_artifact_artifact_v1alpha_artifact_proto_enumTypes[2]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{2}
}

// CatalogRunAction describes the actions a user has over a catalog.
type CatalogRunAction int32

const (
	// Unspecified.
	CatalogRunAction_CATALOG_RUN_ACTION_UNSPECIFIED CatalogRunAction = 0
	// Create catalog.
	CatalogRunAction_CATALOG_RUN_ACTION_CREATE CatalogRunAction = 1
	// Update catalog.
	CatalogRunAction_CATALOG_RUN_ACTION_UPDATE CatalogRunAction = 2
	// Delete catalog.
	CatalogRunAction_CATALOG_RUN_ACTION_DELETE CatalogRunAction = 3
	// Upload catalog file.
	CatalogRunAction_CATALOG_RUN_ACTION_CREATE_FILE CatalogRunAction = 4
	// Process catalog file.
	CatalogRunAction_CATALOG_RUN_ACTION_PROCESS_FILE CatalogRunAction = 5
	// Delete catalog file.
	CatalogRunAction_CATALOG_RUN_ACTION_DELETE_FILE CatalogRunAction = 6
)

// Enum value maps for CatalogRunAction.
var (
	CatalogRunAction_name = map[int32]string{
		0: "CATALOG_RUN_ACTION_UNSPECIFIED",
		1: "CATALOG_RUN_ACTION_CREATE",
		2: "CATALOG_RUN_ACTION_UPDATE",
		3: "CATALOG_RUN_ACTION_DELETE",
		4: "CATALOG_RUN_ACTION_CREATE_FILE",
		5: "CATALOG_RUN_ACTION_PROCESS_FILE",
		6: "CATALOG_RUN_ACTION_DELETE_FILE",
	}
	CatalogRunAction_value = map[string]int32{
		"CATALOG_RUN_ACTION_UNSPECIFIED":  0,
		"CATALOG_RUN_ACTION_CREATE":       1,
		"CATALOG_RUN_ACTION_UPDATE":       2,
		"CATALOG_RUN_ACTION_DELETE":       3,
		"CATALOG_RUN_ACTION_CREATE_FILE":  4,
		"CATALOG_RUN_ACTION_PROCESS_FILE": 5,
		"CATALOG_RUN_ACTION_DELETE_FILE":  6,
	}
)

func (x CatalogRunAction) Enum() *CatalogRunAction {
	p := new(CatalogRunAction)
	*p = x
	return p
}

func (x CatalogRunAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CatalogRunAction) Descriptor() protoreflect.EnumDescriptor {
	return file_artifact_artifact_v1alpha_artifact_proto_enumTypes[3].Descriptor()
}

func (CatalogRunAction) Type() protoreflect.EnumType {
	return &file_artifact_artifact_v1alpha_artifact_proto_enumTypes[3]
}

func (x CatalogRunAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CatalogRunAction.Descriptor instead.
func (CatalogRunAction) EnumDescriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{3}
}

// LivenessRequest represents a request to check a service liveness status
type LivenessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckRequest message
	HealthCheckRequest *v1beta.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LivenessRequest) Reset() {
	*x = LivenessRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessRequest) ProtoMessage() {}

func (x *LivenessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessRequest.ProtoReflect.Descriptor instead.
func (*LivenessRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{0}
}

func (x *LivenessRequest) GetHealthCheckRequest() *v1beta.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// LivenessResponse represents a response for a service liveness status
type LivenessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckResponse message
	HealthCheckResponse *v1beta.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LivenessResponse) Reset() {
	*x = LivenessResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivenessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessResponse) ProtoMessage() {}

func (x *LivenessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessResponse.ProtoReflect.Descriptor instead.
func (*LivenessResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{1}
}

func (x *LivenessResponse) GetHealthCheckResponse() *v1beta.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// ReadinessRequest represents a request to check a service readiness status
type ReadinessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckRequest message
	HealthCheckRequest *v1beta.HealthCheckRequest `protobuf:"bytes,1,opt,name=health_check_request,json=healthCheckRequest,proto3,oneof" json:"health_check_request,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReadinessRequest) Reset() {
	*x = ReadinessRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessRequest) ProtoMessage() {}

func (x *ReadinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessRequest.ProtoReflect.Descriptor instead.
func (*ReadinessRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{2}
}

func (x *ReadinessRequest) GetHealthCheckRequest() *v1beta.HealthCheckRequest {
	if x != nil {
		return x.HealthCheckRequest
	}
	return nil
}

// ReadinessResponse represents a response for a service readiness status
type ReadinessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// HealthCheckResponse message
	HealthCheckResponse *v1beta.HealthCheckResponse `protobuf:"bytes,1,opt,name=health_check_response,json=healthCheckResponse,proto3" json:"health_check_response,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReadinessResponse) Reset() {
	*x = ReadinessResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessResponse) ProtoMessage() {}

func (x *ReadinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessResponse.ProtoReflect.Descriptor instead.
func (*ReadinessResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{3}
}

func (x *ReadinessResponse) GetHealthCheckResponse() *v1beta.HealthCheckResponse {
	if x != nil {
		return x.HealthCheckResponse
	}
	return nil
}

// RepositoryTag contains information about the version of some content in a
// repository.
type RepositoryTag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tag, defined by its parent repository and ID.
	// - Format: `repositories/{repository.id}/tags/{tag.id}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The tag identifier.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Unique identifier, computed from the manifest the tag refers to.
	Digest string `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	// Tag update time, i.e. timestamp of the last push.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryTag) Reset() {
	*x = RepositoryTag{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryTag) ProtoMessage() {}

func (x *RepositoryTag) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryTag.ProtoReflect.Descriptor instead.
func (*RepositoryTag) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{4}
}

func (x *RepositoryTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepositoryTag) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RepositoryTag) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *RepositoryTag) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// ListRepositoryTagsRequest represents a request to list the tags of a
// repository.
type ListRepositoryTagsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of tags to return. The default and cap values are 10
	// and 100, respectively.
	PageSize *int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Page number.
	Page *int32 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	// The repository holding the different versions of a given content.
	// - Format: `repositories/{repository.id}`.
	// - Example: `repositories/flaming-wombat/llama-2-7b`.
	Parent        string `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoryTagsRequest) Reset() {
	*x = ListRepositoryTagsRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoryTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoryTagsRequest) ProtoMessage() {}

func (x *ListRepositoryTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoryTagsRequest.ProtoReflect.Descriptor instead.
func (*ListRepositoryTagsRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{5}
}

func (x *ListRepositoryTagsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListRepositoryTagsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListRepositoryTagsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

// ListRepositoryTagsResponse contains a list of container image tags.
type ListRepositoryTagsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of repository tags.
	Tags []*RepositoryTag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// Total number of tags.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The requested page offset.
	Page          int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoryTagsResponse) Reset() {
	*x = ListRepositoryTagsResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoryTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoryTagsResponse) ProtoMessage() {}

func (x *ListRepositoryTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoryTagsResponse.ProtoReflect.Descriptor instead.
func (*ListRepositoryTagsResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{6}
}

func (x *ListRepositoryTagsResponse) GetTags() []*RepositoryTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListRepositoryTagsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListRepositoryTagsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRepositoryTagsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// CreateRepositoryTagRequest represents a request to add a tag to a given
// repository.
type CreateRepositoryTagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The tag information.
	Tag           *RepositoryTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepositoryTagRequest) Reset() {
	*x = CreateRepositoryTagRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepositoryTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryTagRequest) ProtoMessage() {}

func (x *CreateRepositoryTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryTagRequest.ProtoReflect.Descriptor instead.
func (*CreateRepositoryTagRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRepositoryTagRequest) GetTag() *RepositoryTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

// CreateRepositoryTagResponse contains the created tag.
type CreateRepositoryTagResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created tag.
	Tag           *RepositoryTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepositoryTagResponse) Reset() {
	*x = CreateRepositoryTagResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepositoryTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryTagResponse) ProtoMessage() {}

func (x *CreateRepositoryTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryTagResponse.ProtoReflect.Descriptor instead.
func (*CreateRepositoryTagResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRepositoryTagResponse) GetTag() *RepositoryTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

// GetRepositoryTagRequest represents a request to add a tag to a given
// repository.
type GetRepositoryTagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tag, defined by its parent repository and ID.
	// - Format: `repositories/{repository.id}/tags/{tag.id}`.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepositoryTagRequest) Reset() {
	*x = GetRepositoryTagRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryTagRequest) ProtoMessage() {}

func (x *GetRepositoryTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryTagRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryTagRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{9}
}

func (x *GetRepositoryTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetRepositoryTagResponse contains the created tag.
type GetRepositoryTagResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created tag.
	Tag           *RepositoryTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepositoryTagResponse) Reset() {
	*x = GetRepositoryTagResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryTagResponse) ProtoMessage() {}

func (x *GetRepositoryTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryTagResponse.ProtoReflect.Descriptor instead.
func (*GetRepositoryTagResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{10}
}

func (x *GetRepositoryTagResponse) GetTag() *RepositoryTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

// DeleteRepositoryTagRequest represents a request to delete a tag to a given
// repository.
type DeleteRepositoryTagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tag, defined by its parent repository and ID.
	// - Format: `repositories/{repository.id}/tags/{tag.id}`.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepositoryTagRequest) Reset() {
	*x = DeleteRepositoryTagRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepositoryTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryTagRequest) ProtoMessage() {}

func (x *DeleteRepositoryTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryTagRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRepositoryTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteRepositoryTagResponse represent an empty response.
type DeleteRepositoryTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepositoryTagResponse) Reset() {
	*x = DeleteRepositoryTagResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepositoryTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryTagResponse) ProtoMessage() {}

func (x *DeleteRepositoryTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryTagResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{12}
}

// ObjectUploadURL
type ObjectURL struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the ObjectURL
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// The namespace UID associated with this ObjectURL
	NamespaceUid string `protobuf:"bytes,2,opt,name=namespace_uid,json=namespaceUid,proto3" json:"namespace_uid,omitempty"`
	// The object UID associated with this ObjectURL
	ObjectUid string `protobuf:"bytes,3,opt,name=object_uid,json=objectUid,proto3" json:"object_uid,omitempty"`
	// The expiration time of the URL
	UrlExpireAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=url_expire_at,json=urlExpireAt,proto3" json:"url_expire_at,omitempty"`
	// The MinIO URL path
	MinioUrlPath string `protobuf:"bytes,5,opt,name=minio_url_path,json=minioUrlPath,proto3" json:"minio_url_path,omitempty"`
	// The encoded URL path
	EncodedUrlPath string `protobuf:"bytes,6,opt,name=encoded_url_path,json=encodedUrlPath,proto3" json:"encoded_url_path,omitempty"`
	// The type of URL (download or upload)
	Type string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	// The creation time of the ObjectURL
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update time of the ObjectURL
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The deletion time of the ObjectURL, if applicable
	DeleteTime    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectURL) Reset() {
	*x = ObjectURL{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectURL) ProtoMessage() {}

func (x *ObjectURL) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectURL.ProtoReflect.Descriptor instead.
func (*ObjectURL) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{13}
}

func (x *ObjectURL) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ObjectURL) GetNamespaceUid() string {
	if x != nil {
		return x.NamespaceUid
	}
	return ""
}

func (x *ObjectURL) GetObjectUid() string {
	if x != nil {
		return x.ObjectUid
	}
	return ""
}

func (x *ObjectURL) GetUrlExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UrlExpireAt
	}
	return nil
}

func (x *ObjectURL) GetMinioUrlPath() string {
	if x != nil {
		return x.MinioUrlPath
	}
	return ""
}

func (x *ObjectURL) GetEncodedUrlPath() string {
	if x != nil {
		return x.EncodedUrlPath
	}
	return ""
}

func (x *ObjectURL) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ObjectURL) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ObjectURL) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ObjectURL) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

// GetObjectRequest
type GetObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// object uid
	Uid           string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{14}
}

func (x *GetObjectRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// GetObjectResponse
type GetObjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// object
	Object        *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetObjectResponse) Reset() {
	*x = GetObjectResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResponse) ProtoMessage() {}

func (x *GetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResponse.ProtoReflect.Descriptor instead.
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{15}
}

func (x *GetObjectResponse) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

// GetObjectURLRequest
type GetObjectURLRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// object url uid
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// encoded url path. artifact first use uid to get object url,
	// if not exist, then use encoded url path to get object url
	EncodedUrlPath *string `protobuf:"bytes,2,opt,name=encoded_url_path,json=encodedUrlPath,proto3,oneof" json:"encoded_url_path,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetObjectURLRequest) Reset() {
	*x = GetObjectURLRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetObjectURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectURLRequest) ProtoMessage() {}

func (x *GetObjectURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectURLRequest.ProtoReflect.Descriptor instead.
func (*GetObjectURLRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{16}
}

func (x *GetObjectURLRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetObjectURLRequest) GetEncodedUrlPath() string {
	if x != nil && x.EncodedUrlPath != nil {
		return *x.EncodedUrlPath
	}
	return ""
}

// GetObjectURLResponse
type GetObjectURLResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// object url
	ObjectUrl     *ObjectURL `protobuf:"bytes,1,opt,name=object_url,json=objectUrl,proto3" json:"object_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetObjectURLResponse) Reset() {
	*x = GetObjectURLResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetObjectURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectURLResponse) ProtoMessage() {}

func (x *GetObjectURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectURLResponse.ProtoReflect.Descriptor instead.
func (*GetObjectURLResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{17}
}

func (x *GetObjectURLResponse) GetObjectUrl() *ObjectURL {
	if x != nil {
		return x.ObjectUrl
	}
	return nil
}

// UpdateObjectRequest
type UpdateObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// object uid
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// size
	Size *int64 `protobuf:"varint,2,opt,name=size,proto3,oneof" json:"size,omitempty"`
	// type
	Type *string `protobuf:"bytes,3,opt,name=type,proto3,oneof" json:"type,omitempty"`
	// is upload
	IsUploaded *bool `protobuf:"varint,4,opt,name=is_uploaded,json=isUploaded,proto3,oneof" json:"is_uploaded,omitempty"`
	// last modified time
	LastModifiedTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_modified_time,json=lastModifiedTime,proto3,oneof" json:"last_modified_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateObjectRequest) Reset() {
	*x = UpdateObjectRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectRequest) ProtoMessage() {}

func (x *UpdateObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateObjectRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateObjectRequest) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *UpdateObjectRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateObjectRequest) GetIsUploaded() bool {
	if x != nil && x.IsUploaded != nil {
		return *x.IsUploaded
	}
	return false
}

func (x *UpdateObjectRequest) GetLastModifiedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedTime
	}
	return nil
}

// UpdateObjectResponse
type UpdateObjectResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// object
	Object        *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateObjectResponse) Reset() {
	*x = UpdateObjectResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectResponse) ProtoMessage() {}

func (x *UpdateObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateObjectResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateObjectResponse) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

// Catalog represents a catalog.
type Catalog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The catalog uid.
	CatalogUid string `protobuf:"bytes,1,opt,name=catalog_uid,json=catalogUid,proto3" json:"catalog_uid,omitempty"`
	// The catalog id.
	CatalogId string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The catalog name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The catalog description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The creation time of the catalog.
	CreateTime string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update time of the catalog.
	UpdateTime string `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The owner/namespace of the catalog.
	OwnerName string `protobuf:"bytes,7,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	// The catalog tags.
	Tags []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	// The catalog converting pipelines.
	ConvertingPipelines []string `protobuf:"bytes,9,rep,name=converting_pipelines,json=convertingPipelines,proto3" json:"converting_pipelines,omitempty"`
	// The catalog splitting pipelines.
	SplittingPipelines []string `protobuf:"bytes,10,rep,name=splitting_pipelines,json=splittingPipelines,proto3" json:"splitting_pipelines,omitempty"`
	// The catalog embedding pipelines.
	EmbeddingPipelines []string `protobuf:"bytes,11,rep,name=embedding_pipelines,json=embeddingPipelines,proto3" json:"embedding_pipelines,omitempty"`
	// The downstream apps
	DownstreamApps []string `protobuf:"bytes,12,rep,name=downstream_apps,json=downstreamApps,proto3" json:"downstream_apps,omitempty"`
	// The total files in catalog.
	TotalFiles uint32 `protobuf:"varint,13,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`
	// The total tokens in catalog.
	TotalTokens uint32 `protobuf:"varint,14,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	// The current used storage in catalog.
	UsedStorage uint64 `protobuf:"varint,15,opt,name=used_storage,json=usedStorage,proto3" json:"used_storage,omitempty"`
	// The catalog summarizing pipelines.
	SummarizingPipelines []string `protobuf:"bytes,16,rep,name=summarizing_pipelines,json=summarizingPipelines,proto3" json:"summarizing_pipelines,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Catalog) Reset() {
	*x = Catalog{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Catalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catalog) ProtoMessage() {}

func (x *Catalog) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catalog.ProtoReflect.Descriptor instead.
func (*Catalog) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{20}
}

func (x *Catalog) GetCatalogUid() string {
	if x != nil {
		return x.CatalogUid
	}
	return ""
}

func (x *Catalog) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *Catalog) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Catalog) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Catalog) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Catalog) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Catalog) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Catalog) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Catalog) GetConvertingPipelines() []string {
	if x != nil {
		return x.ConvertingPipelines
	}
	return nil
}

func (x *Catalog) GetSplittingPipelines() []string {
	if x != nil {
		return x.SplittingPipelines
	}
	return nil
}

func (x *Catalog) GetEmbeddingPipelines() []string {
	if x != nil {
		return x.EmbeddingPipelines
	}
	return nil
}

func (x *Catalog) GetDownstreamApps() []string {
	if x != nil {
		return x.DownstreamApps
	}
	return nil
}

func (x *Catalog) GetTotalFiles() uint32 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *Catalog) GetTotalTokens() uint32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

func (x *Catalog) GetUsedStorage() uint64 {
	if x != nil {
		return x.UsedStorage
	}
	return 0
}

func (x *Catalog) GetSummarizingPipelines() []string {
	if x != nil {
		return x.SummarizingPipelines
	}
	return nil
}

// CreateCatalogRequest represents a request to create a catalog.
type CreateCatalogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The catalog's owner(namespaces).
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The catalog name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The catalog description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The catalog tags.
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// The catalog type. default is PERSISTENT
	Type CatalogType `protobuf:"varint,5,opt,name=type,proto3,enum=artifact.artifact.v1alpha.CatalogType" json:"type,omitempty"`
	// Pipelines used for converting documents (i.e., files with pdf, doc[x] or
	// ppt[x] extension) to Markdown. The strings in the list identify the
	// pipelines and MUST have the format `{namespaceID}/{pipelineID}@{version}`.
	// The pipeline recipes MUST have the following variable and output fields:
	// ```yaml variable
	// variable:
	//
	//	document_input:
	//	  title: document-input
	//	  description: Upload a document (PDF/DOCX/DOC/PPTX/PPT)
	//	  type: file
	//
	// ```
	// ```yaml output
	// output:
	//
	//	convert_result:
	//	  title: convert-result
	//	  value: ${merge-markdown-refinement.output.results[0]}
	//
	// ```
	// Other variable and output fields will be ignored.
	//
	// The pipelines will be executed in order until one produces a successful,
	// non-empty result.
	//
	// If no pipelines are provided, a default pipeline will be used. For
	// non-document catalog files, the conversion pipeline is deterministic (such
	// files are typically trivial to convert and don't require a dedicated
	// pipeline to improve the conversion performance).
	ConvertingPipelines []string `protobuf:"bytes,6,rep,name=converting_pipelines,json=convertingPipelines,proto3" json:"converting_pipelines,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateCatalogRequest) Reset() {
	*x = CreateCatalogRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatalogRequest) ProtoMessage() {}

func (x *CreateCatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatalogRequest.ProtoReflect.Descriptor instead.
func (*CreateCatalogRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{21}
}

func (x *CreateCatalogRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateCatalogRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCatalogRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCatalogRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateCatalogRequest) GetType() CatalogType {
	if x != nil {
		return x.Type
	}
	return CatalogType_CATALOG_TYPE_UNSPECIFIED
}

func (x *CreateCatalogRequest) GetConvertingPipelines() []string {
	if x != nil {
		return x.ConvertingPipelines
	}
	return nil
}

// CreateCatalogResponse represents a response for creating a catalog.
type CreateCatalogResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created catalog.
	Catalog       *Catalog `protobuf:"bytes,1,opt,name=catalog,proto3" json:"catalog,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCatalogResponse) Reset() {
	*x = CreateCatalogResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatalogResponse) ProtoMessage() {}

func (x *CreateCatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatalogResponse.ProtoReflect.Descriptor instead.
func (*CreateCatalogResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{22}
}

func (x *CreateCatalogResponse) GetCatalog() *Catalog {
	if x != nil {
		return x.Catalog
	}
	return nil
}

// Request message for ListCatalogs(not include the ephemeral catalogs)
type ListCatalogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID for which to list the catalogs
	NamespaceId   string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogsRequest) Reset() {
	*x = ListCatalogsRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogsRequest) ProtoMessage() {}

func (x *ListCatalogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogsRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogsRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{23}
}

func (x *ListCatalogsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

// GetCatalogsResponse represents a response for getting all catalogs from users.
type ListCatalogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The catalogs container.
	Catalogs      []*Catalog `protobuf:"bytes,1,rep,name=catalogs,proto3" json:"catalogs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogsResponse) Reset() {
	*x = ListCatalogsResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogsResponse) ProtoMessage() {}

func (x *ListCatalogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogsResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogsResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{24}
}

func (x *ListCatalogsResponse) GetCatalogs() []*Catalog {
	if x != nil {
		return x.Catalogs
	}
	return nil
}

// UpdateCatalogRequest represents a request to update a catalog.
type UpdateCatalogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The catalog id.
	CatalogId string `protobuf:"bytes,1,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The catalog description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The catalog tags.
	Tags []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// The catalog owner(namespace).
	NamespaceId   string `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCatalogRequest) Reset() {
	*x = UpdateCatalogRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatalogRequest) ProtoMessage() {}

func (x *UpdateCatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatalogRequest.ProtoReflect.Descriptor instead.
func (*UpdateCatalogRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateCatalogRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *UpdateCatalogRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCatalogRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateCatalogRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

// UpdateCatalogResponse represents a response for updating a catalog.
type UpdateCatalogResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated catalog.
	Catalog       *Catalog `protobuf:"bytes,1,opt,name=catalog,proto3" json:"catalog,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCatalogResponse) Reset() {
	*x = UpdateCatalogResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatalogResponse) ProtoMessage() {}

func (x *UpdateCatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatalogResponse.ProtoReflect.Descriptor instead.
func (*UpdateCatalogResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateCatalogResponse) GetCatalog() *Catalog {
	if x != nil {
		return x.Catalog
	}
	return nil
}

// DeleteCatalogRequest represents a request to delete a catalog.
type DeleteCatalogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The owner's id. i.e. namespace.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The catalog id.
	CatalogId     string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCatalogRequest) Reset() {
	*x = DeleteCatalogRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatalogRequest) ProtoMessage() {}

func (x *DeleteCatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatalogRequest.ProtoReflect.Descriptor instead.
func (*DeleteCatalogRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteCatalogRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteCatalogRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

// DeleteCatalogResponse represents a response for deleting a catalog.
type DeleteCatalogResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The catalog identifier.
	Catalog       *Catalog `protobuf:"bytes,1,opt,name=catalog,proto3" json:"catalog,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCatalogResponse) Reset() {
	*x = DeleteCatalogResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatalogResponse) ProtoMessage() {}

func (x *DeleteCatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatalogResponse.ProtoReflect.Descriptor instead.
func (*DeleteCatalogResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteCatalogResponse) GetCatalog() *Catalog {
	if x != nil {
		return x.Catalog
	}
	return nil
}

// file
type File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// file uid
	FileUid string `protobuf:"bytes,1,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	// file name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// file type
	Type FileType `protobuf:"varint,3,opt,name=type,proto3,enum=artifact.artifact.v1alpha.FileType" json:"type,omitempty"`
	// file process status
	ProcessStatus FileProcessStatus `protobuf:"varint,4,opt,name=process_status,json=processStatus,proto3,enum=artifact.artifact.v1alpha.FileProcessStatus" json:"process_status,omitempty"`
	// file process message
	ProcessOutcome string `protobuf:"bytes,5,opt,name=process_outcome,json=processOutcome,proto3" json:"process_outcome,omitempty"`
	// retrievable(this is reserved for future use)
	Retrievable bool `protobuf:"varint,6,opt,name=retrievable,proto3" json:"retrievable,omitempty"`
	// content(this is reserved for future use)
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	// owner/namespace uid
	OwnerUid string `protobuf:"bytes,8,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	// creator uid from authn token
	CreatorUid string `protobuf:"bytes,9,opt,name=creator_uid,json=creatorUid,proto3" json:"creator_uid,omitempty"`
	// catalog uid
	CatalogUid string `protobuf:"bytes,10,opt,name=catalog_uid,json=catalogUid,proto3" json:"catalog_uid,omitempty"`
	// create time
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// update time
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// delete time
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	// file size in bytes
	Size int64 `protobuf:"varint,14,opt,name=size,proto3" json:"size,omitempty"`
	// total chunks
	TotalChunks int32 `protobuf:"varint,15,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	// total tokens
	TotalTokens int32 `protobuf:"varint,16,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	// Custom metadata provided by the user during file upload
	ExternalMetadata *structpb.Struct `protobuf:"bytes,17,opt,name=external_metadata,json=externalMetadata,proto3,oneof" json:"external_metadata,omitempty"`
	// objectUid in blob storage. user can upload to blob storage directly, then put objectUid here.
	// then no need the base64 encoding for the file content.
	ObjectUid string `protobuf:"bytes,18,opt,name=object_uid,json=objectUid,proto3" json:"object_uid,omitempty"`
	// summary of the file
	Summary string `protobuf:"bytes,19,opt,name=summary,proto3" json:"summary,omitempty"`
	// download url of the file
	DownloadUrl   string `protobuf:"bytes,20,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{29}
}

func (x *File) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_FILE_TYPE_UNSPECIFIED
}

func (x *File) GetProcessStatus() FileProcessStatus {
	if x != nil {
		return x.ProcessStatus
	}
	return FileProcessStatus_FILE_PROCESS_STATUS_UNSPECIFIED
}

func (x *File) GetProcessOutcome() string {
	if x != nil {
		return x.ProcessOutcome
	}
	return ""
}

func (x *File) GetRetrievable() bool {
	if x != nil {
		return x.Retrievable
	}
	return false
}

func (x *File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *File) GetOwnerUid() string {
	if x != nil {
		return x.OwnerUid
	}
	return ""
}

func (x *File) GetCreatorUid() string {
	if x != nil {
		return x.CreatorUid
	}
	return ""
}

func (x *File) GetCatalogUid() string {
	if x != nil {
		return x.CatalogUid
	}
	return ""
}

func (x *File) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *File) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *File) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *File) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

func (x *File) GetExternalMetadata() *structpb.Struct {
	if x != nil {
		return x.ExternalMetadata
	}
	return nil
}

func (x *File) GetObjectUid() string {
	if x != nil {
		return x.ObjectUid
	}
	return ""
}

func (x *File) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *File) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

// upload file request
type UploadCatalogFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// owner/namespace uid
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// catalog id
	CatalogId string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// file
	File          *File `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadCatalogFileRequest) Reset() {
	*x = UploadCatalogFileRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadCatalogFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCatalogFileRequest) ProtoMessage() {}

func (x *UploadCatalogFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCatalogFileRequest.ProtoReflect.Descriptor instead.
func (*UploadCatalogFileRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{30}
}

func (x *UploadCatalogFileRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UploadCatalogFileRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *UploadCatalogFileRequest) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// upload file response
type UploadCatalogFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// file
	File          *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadCatalogFileResponse) Reset() {
	*x = UploadCatalogFileResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadCatalogFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCatalogFileResponse) ProtoMessage() {}

func (x *UploadCatalogFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCatalogFileResponse.ProtoReflect.Descriptor instead.
func (*UploadCatalogFileResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{31}
}

func (x *UploadCatalogFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// delete file request
type DeleteCatalogFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	FileUid       string `protobuf:"bytes,1,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCatalogFileRequest) Reset() {
	*x = DeleteCatalogFileRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCatalogFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatalogFileRequest) ProtoMessage() {}

func (x *DeleteCatalogFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatalogFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteCatalogFileRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteCatalogFileRequest) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

// delete file response
type DeleteCatalogFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	FileUid       string `protobuf:"bytes,1,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCatalogFileResponse) Reset() {
	*x = DeleteCatalogFileResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCatalogFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatalogFileResponse) ProtoMessage() {}

func (x *DeleteCatalogFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatalogFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteCatalogFileResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteCatalogFileResponse) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

// Process Catalog File Request
type ProcessCatalogFilesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	FileUids      []string `protobuf:"bytes,1,rep,name=file_uids,json=fileUids,proto3" json:"file_uids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessCatalogFilesRequest) Reset() {
	*x = ProcessCatalogFilesRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessCatalogFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessCatalogFilesRequest) ProtoMessage() {}

func (x *ProcessCatalogFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessCatalogFilesRequest.ProtoReflect.Descriptor instead.
func (*ProcessCatalogFilesRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{34}
}

func (x *ProcessCatalogFilesRequest) GetFileUids() []string {
	if x != nil {
		return x.FileUids
	}
	return nil
}

// Process Catalog File Response
type ProcessCatalogFilesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	Files         []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessCatalogFilesResponse) Reset() {
	*x = ProcessCatalogFilesResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessCatalogFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessCatalogFilesResponse) ProtoMessage() {}

func (x *ProcessCatalogFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessCatalogFilesResponse.ProtoReflect.Descriptor instead.
func (*ProcessCatalogFilesResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{35}
}

func (x *ProcessCatalogFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

// list file filter
// todo: support more parameters
type ListCatalogFilesFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uids.
	FileUids      []string `protobuf:"bytes,2,rep,name=file_uids,json=fileUids,proto3" json:"file_uids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogFilesFilter) Reset() {
	*x = ListCatalogFilesFilter{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogFilesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogFilesFilter) ProtoMessage() {}

func (x *ListCatalogFilesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogFilesFilter.ProtoReflect.Descriptor instead.
func (*ListCatalogFilesFilter) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{36}
}

func (x *ListCatalogFilesFilter) GetFileUids() []string {
	if x != nil {
		return x.FileUids
	}
	return nil
}

// list files request
type ListCatalogFilesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The owner/namespace uid id.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The catalog id.
	CatalogId string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The page size (default:10; max 100).
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next page token(default from first file's token).
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The filter.
	Filter        *ListCatalogFilesFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogFilesRequest) Reset() {
	*x = ListCatalogFilesRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogFilesRequest) ProtoMessage() {}

func (x *ListCatalogFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogFilesRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogFilesRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{37}
}

func (x *ListCatalogFilesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListCatalogFilesRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *ListCatalogFilesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCatalogFilesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListCatalogFilesRequest) GetFilter() *ListCatalogFilesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// list files response
type ListCatalogFilesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of files.
	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// The total number of files.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The requested page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// next page token
	NextPageToken string `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The filter.
	Filter        *ListCatalogFilesFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogFilesResponse) Reset() {
	*x = ListCatalogFilesResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogFilesResponse) ProtoMessage() {}

func (x *ListCatalogFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogFilesResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogFilesResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{38}
}

func (x *ListCatalogFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListCatalogFilesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListCatalogFilesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCatalogFilesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListCatalogFilesResponse) GetFilter() *ListCatalogFilesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// GetCatalogFileRequest represents a request to get a catalog file.
type GetCatalogFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace id.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The catalog id.
	CatalogId string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The file uid.
	FileUid       string `protobuf:"bytes,3,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCatalogFileRequest) Reset() {
	*x = GetCatalogFileRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCatalogFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatalogFileRequest) ProtoMessage() {}

func (x *GetCatalogFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatalogFileRequest.ProtoReflect.Descriptor instead.
func (*GetCatalogFileRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{39}
}

func (x *GetCatalogFileRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetCatalogFileRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *GetCatalogFileRequest) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

// GetCatalogFileResponse represents a response for getting a catalog file.
type GetCatalogFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file.
	File          *File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCatalogFileResponse) Reset() {
	*x = GetCatalogFileResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCatalogFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatalogFileResponse) ProtoMessage() {}

func (x *GetCatalogFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatalogFileResponse.ProtoReflect.Descriptor instead.
func (*GetCatalogFileResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{40}
}

func (x *GetCatalogFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// CatalogRun represents a single execution of a catalog action.
type CatalogRun struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for each run.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// catalog uid
	CatalogUid string `protobuf:"bytes,2,opt,name=catalog_uid,json=catalogUid,proto3" json:"catalog_uid,omitempty"`
	// The file uids.
	FileUids []string `protobuf:"bytes,3,rep,name=file_uids,json=fileUids,proto3" json:"file_uids,omitempty"`
	// Action of the catalog run.
	Action CatalogRunAction `protobuf:"varint,4,opt,name=action,proto3,enum=artifact.artifact.v1alpha.CatalogRunAction" json:"action,omitempty"`
	// Current status of the run.
	Status v1alpha.RunStatus `protobuf:"varint,5,opt,name=status,proto3,enum=common.run.v1alpha.RunStatus" json:"status,omitempty"`
	// Origin of the run.
	Source v1alpha.RunSource `protobuf:"varint,6,opt,name=source,proto3,enum=common.run.v1alpha.RunSource" json:"source,omitempty"`
	// Time taken to complete the run in milliseconds.
	TotalDuration *int32 `protobuf:"varint,7,opt,name=total_duration,json=totalDuration,proto3,oneof" json:"total_duration,omitempty"`
	// Runner ID. (User UID)
	RunnerId *string `protobuf:"bytes,8,opt,name=runner_id,json=runnerId,proto3,oneof" json:"runner_id,omitempty"`
	// Namespace ID.
	NamespaceId *string `protobuf:"bytes,9,opt,name=namespace_id,json=namespaceId,proto3,oneof" json:"namespace_id,omitempty"`
	// Run request payload.
	Payload *structpb.Struct `protobuf:"bytes,11,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	// Time when the run started execution.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Time when the run completed.
	CompleteTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=complete_time,json=completeTime,proto3,oneof" json:"complete_time,omitempty"`
	// Error message if the run failed.
	Error *string `protobuf:"bytes,16,opt,name=error,proto3,oneof" json:"error,omitempty"`
	// Credits used of internal accounting metric.
	CreditAmount  *float32 `protobuf:"fixed32,17,opt,name=credit_amount,json=creditAmount,proto3,oneof" json:"credit_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogRun) Reset() {
	*x = CatalogRun{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogRun) ProtoMessage() {}

func (x *CatalogRun) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogRun.ProtoReflect.Descriptor instead.
func (*CatalogRun) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{41}
}

func (x *CatalogRun) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CatalogRun) GetCatalogUid() string {
	if x != nil {
		return x.CatalogUid
	}
	return ""
}

func (x *CatalogRun) GetFileUids() []string {
	if x != nil {
		return x.FileUids
	}
	return nil
}

func (x *CatalogRun) GetAction() CatalogRunAction {
	if x != nil {
		return x.Action
	}
	return CatalogRunAction_CATALOG_RUN_ACTION_UNSPECIFIED
}

func (x *CatalogRun) GetStatus() v1alpha.RunStatus {
	if x != nil {
		return x.Status
	}
	return v1alpha.RunStatus(0)
}

func (x *CatalogRun) GetSource() v1alpha.RunSource {
	if x != nil {
		return x.Source
	}
	return v1alpha.RunSource(0)
}

func (x *CatalogRun) GetTotalDuration() int32 {
	if x != nil && x.TotalDuration != nil {
		return *x.TotalDuration
	}
	return 0
}

func (x *CatalogRun) GetRunnerId() string {
	if x != nil && x.RunnerId != nil {
		return *x.RunnerId
	}
	return ""
}

func (x *CatalogRun) GetNamespaceId() string {
	if x != nil && x.NamespaceId != nil {
		return *x.NamespaceId
	}
	return ""
}

func (x *CatalogRun) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CatalogRun) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CatalogRun) GetCompleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompleteTime
	}
	return nil
}

func (x *CatalogRun) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *CatalogRun) GetCreditAmount() float32 {
	if x != nil && x.CreditAmount != nil {
		return *x.CreditAmount
	}
	return 0
}

// ListCatalogRunsResponse is the response message for ListCatalogRuns.
type ListCatalogRunsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of runs.
	CatalogRuns []*CatalogRun `protobuf:"bytes,1,rep,name=catalog_runs,json=catalogRuns,proto3" json:"catalog_runs,omitempty"`
	// The total number of runs matching the request.
	TotalSize int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// The current page number.
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// The number of items per page.
	PageSize      int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogRunsResponse) Reset() {
	*x = ListCatalogRunsResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogRunsResponse) ProtoMessage() {}

func (x *ListCatalogRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogRunsResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogRunsResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{42}
}

func (x *ListCatalogRunsResponse) GetCatalogRuns() []*CatalogRun {
	if x != nil {
		return x.CatalogRuns
	}
	return nil
}

func (x *ListCatalogRunsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListCatalogRunsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCatalogRunsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ListCatalogRunsRequest is the request message for ListCatalogRuns.
type ListCatalogRunsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the owner of the catalog.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The ID of the catalog for which the runs will be listed.
	CatalogId string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The page number to retrieve.
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// The maximum number of items per page to return. The default and cap values
	// are 10 and 100, respectively.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
	// expression.
	// - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
	Filter *string `protobuf:"bytes,6,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	// Order by field, with options for ordering by `id`, `create_time` or `update_time`.
	// Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
	OrderBy       *string `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCatalogRunsRequest) Reset() {
	*x = ListCatalogRunsRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogRunsRequest) ProtoMessage() {}

func (x *ListCatalogRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogRunsRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogRunsRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{43}
}

func (x *ListCatalogRunsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListCatalogRunsRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *ListCatalogRunsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCatalogRunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCatalogRunsRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *ListCatalogRunsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

// MoveFileToCatalogRequest represents a request to move a file to another catalog.
type MoveFileToCatalogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	FileUid string `protobuf:"bytes,1,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	// namespace id
	NamespaceId string `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// catalog id
	CatalogId string `protobuf:"bytes,3,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// The target catalog id.
	ToCatalogId   string `protobuf:"bytes,4,opt,name=to_catalog_id,json=toCatalogId,proto3" json:"to_catalog_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileToCatalogRequest) Reset() {
	*x = MoveFileToCatalogRequest{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileToCatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileToCatalogRequest) ProtoMessage() {}

func (x *MoveFileToCatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileToCatalogRequest.ProtoReflect.Descriptor instead.
func (*MoveFileToCatalogRequest) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{44}
}

func (x *MoveFileToCatalogRequest) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

func (x *MoveFileToCatalogRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *MoveFileToCatalogRequest) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

func (x *MoveFileToCatalogRequest) GetToCatalogId() string {
	if x != nil {
		return x.ToCatalogId
	}
	return ""
}

// MoveFileToCatalogResponse represents a response for moving a file to another catalog.
type MoveFileToCatalogResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The file uid.
	FileUid       string `protobuf:"bytes,1,opt,name=file_uid,json=fileUid,proto3" json:"file_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileToCatalogResponse) Reset() {
	*x = MoveFileToCatalogResponse{}
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileToCatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileToCatalogResponse) ProtoMessage() {}

func (x *MoveFileToCatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artifact_artifact_v1alpha_artifact_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileToCatalogResponse.ProtoReflect.Descriptor instead.
func (*MoveFileToCatalogResponse) Descriptor() ([]byte, []int) {
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP(), []int{45}
}

func (x *MoveFileToCatalogResponse) GetFileUid() string {
	if x != nil {
		return x.FileUid
	}
	return ""
}

var File_artifact_artifact_v1alpha_artifact_proto protoreflect.FileDescriptor

const file_artifact_artifact_v1alpha_artifact_proto_rawDesc = "" +
	"\n" +
	"(artifact/artifact/v1alpha/artifact.proto\x12\x19artifact.artifact.v1alpha\x1a&artifact/artifact/v1alpha/object.proto\x1a+common/healthcheck/v1beta/healthcheck.proto\x1a\x1ccommon/run/v1alpha/run.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x95\x01\n" +
	"\x0fLivenessRequest\x12i\n" +
	"\x14health_check_request\x18\x01 \x01(\v2-.common.healthcheck.v1beta.HealthCheckRequestB\x03\xe0A\x01H\x00R\x12healthCheckRequest\x88\x01\x01B\x17\n" +
	"\x15_health_check_request\"v\n" +
	"\x10LivenessResponse\x12b\n" +
	"\x15health_check_response\x18\x01 \x01(\v2..common.healthcheck.v1beta.HealthCheckResponseR\x13healthCheckResponse\"\x96\x01\n" +
	"\x10ReadinessRequest\x12i\n" +
	"\x14health_check_request\x18\x01 \x01(\v2-.common.healthcheck.v1beta.HealthCheckRequestB\x03\xe0A\x01H\x00R\x12healthCheckRequest\x88\x01\x01B\x17\n" +
	"\x15_health_check_request\"w\n" +
	"\x11ReadinessResponse\x12b\n" +
	"\x15health_check_response\x18\x01 \x01(\v2..common.healthcheck.v1beta.HealthCheckResponseR\x13healthCheckResponse\"\x9f\x01\n" +
	"\rRepositoryTag\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x05R\x04name\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tB\x03\xe0A\x05R\x02id\x12\x1b\n" +
	"\x06digest\x18\x03 \x01(\tB\x03\xe0A\x01R\x06digest\x12C\n" +
	"\vupdate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xe0A\x03\xe0A\x01R\n" +
	"updateTime\"\x94\x01\n" +
	"\x19ListRepositoryTagsRequest\x12%\n" +
	"\tpage_size\x18\x01 \x01(\x05B\x03\xe0A\x01H\x00R\bpageSize\x88\x01\x01\x12\x1c\n" +
	"\x04page\x18\x02 \x01(\x05B\x03\xe0A\x01H\x01R\x04page\x88\x01\x01\x12\x1b\n" +
	"\x06parent\x18\x03 \x01(\tB\x03\xe0A\x02R\x06parentB\f\n" +
	"\n" +
	"_page_sizeB\a\n" +
	"\x05_page\"\xaa\x01\n" +
	"\x1aListRepositoryTagsResponse\x12<\n" +
	"\x04tags\x18\x01 \x03(\v2(.artifact.artifact.v1alpha.RepositoryTagR\x04tags\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x05R\ttotalSize\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\"X\n" +
	"\x1aCreateRepositoryTagRequest\x12:\n" +
	"\x03tag\x18\x01 \x01(\v2(.artifact.artifact.v1alpha.RepositoryTagR\x03tag\"Y\n" +
	"\x1bCreateRepositoryTagResponse\x12:\n" +
	"\x03tag\x18\x01 \x01(\v2(.artifact.artifact.v1alpha.RepositoryTagR\x03tag\"2\n" +
	"\x17GetRepositoryTagRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\"V\n" +
	"\x18GetRepositoryTagResponse\x12:\n" +
	"\x03tag\x18\x01 \x01(\v2(.artifact.artifact.v1alpha.RepositoryTagR\x03tag\"5\n" +
	"\x1aDeleteRepositoryTagRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\"\x1d\n" +
	"\x1bDeleteRepositoryTagResponse\"\xd1\x03\n" +
	"\tObjectURL\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12#\n" +
	"\rnamespace_uid\x18\x02 \x01(\tR\fnamespaceUid\x12\x1d\n" +
	"\n" +
	"object_uid\x18\x03 \x01(\tR\tobjectUid\x12>\n" +
	"\rurl_expire_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vurlExpireAt\x12$\n" +
	"\x0eminio_url_path\x18\x05 \x01(\tR\fminioUrlPath\x12(\n" +
	"\x10encoded_url_path\x18\x06 \x01(\tR\x0eencodedUrlPath\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12;\n" +
	"\vcreate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x12@\n" +
	"\vdelete_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"deleteTime\x88\x01\x01B\x0e\n" +
	"\f_delete_time\"$\n" +
	"\x10GetObjectRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"N\n" +
	"\x11GetObjectResponse\x129\n" +
	"\x06object\x18\x01 \x01(\v2!.artifact.artifact.v1alpha.ObjectR\x06object\"k\n" +
	"\x13GetObjectURLRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12-\n" +
	"\x10encoded_url_path\x18\x02 \x01(\tH\x00R\x0eencodedUrlPath\x88\x01\x01B\x13\n" +
	"\x11_encoded_url_path\"[\n" +
	"\x14GetObjectURLResponse\x12C\n" +
	"\n" +
	"object_url\x18\x01 \x01(\v2$.artifact.artifact.v1alpha.ObjectURLR\tobjectUrl\"\x87\x02\n" +
	"\x13UpdateObjectRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x17\n" +
	"\x04size\x18\x02 \x01(\x03H\x00R\x04size\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x03 \x01(\tH\x01R\x04type\x88\x01\x01\x12$\n" +
	"\vis_uploaded\x18\x04 \x01(\bH\x02R\n" +
	"isUploaded\x88\x01\x01\x12M\n" +
	"\x12last_modified_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x03R\x10lastModifiedTime\x88\x01\x01B\a\n" +
	"\x05_sizeB\a\n" +
	"\x05_typeB\x0e\n" +
	"\f_is_uploadedB\x15\n" +
	"\x13_last_modified_time\"Q\n" +
	"\x14UpdateObjectResponse\x129\n" +
	"\x06object\x18\x01 \x01(\v2!.artifact.artifact.v1alpha.ObjectR\x06object\"\xce\x04\n" +
	"\aCatalog\x12\x1f\n" +
	"\vcatalog_uid\x18\x01 \x01(\tR\n" +
	"catalogUid\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tR\tcatalogId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1f\n" +
	"\vcreate_time\x18\x05 \x01(\tR\n" +
	"createTime\x12\x1f\n" +
	"\vupdate_time\x18\x06 \x01(\tR\n" +
	"updateTime\x12\x1d\n" +
	"\n" +
	"owner_name\x18\a \x01(\tR\townerName\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x121\n" +
	"\x14converting_pipelines\x18\t \x03(\tR\x13convertingPipelines\x12/\n" +
	"\x13splitting_pipelines\x18\n" +
	" \x03(\tR\x12splittingPipelines\x12/\n" +
	"\x13embedding_pipelines\x18\v \x03(\tR\x12embeddingPipelines\x12'\n" +
	"\x0fdownstream_apps\x18\f \x03(\tR\x0edownstreamApps\x12\x1f\n" +
	"\vtotal_files\x18\r \x01(\rR\n" +
	"totalFiles\x12!\n" +
	"\ftotal_tokens\x18\x0e \x01(\rR\vtotalTokens\x12!\n" +
	"\fused_storage\x18\x0f \x01(\x04R\vusedStorage\x123\n" +
	"\x15summarizing_pipelines\x18\x10 \x03(\tR\x14summarizingPipelines\"\xf2\x01\n" +
	"\x14CreateCatalogRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12:\n" +
	"\x04type\x18\x05 \x01(\x0e2&.artifact.artifact.v1alpha.CatalogTypeR\x04type\x121\n" +
	"\x14converting_pipelines\x18\x06 \x03(\tR\x13convertingPipelines\"U\n" +
	"\x15CreateCatalogResponse\x12<\n" +
	"\acatalog\x18\x01 \x01(\v2\".artifact.artifact.v1alpha.CatalogR\acatalog\"8\n" +
	"\x13ListCatalogsRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\"V\n" +
	"\x14ListCatalogsResponse\x12>\n" +
	"\bcatalogs\x18\x01 \x03(\v2\".artifact.artifact.v1alpha.CatalogR\bcatalogs\"\x8e\x01\n" +
	"\x14UpdateCatalogRequest\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x01 \x01(\tR\tcatalogId\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12!\n" +
	"\fnamespace_id\x18\x04 \x01(\tR\vnamespaceId\"U\n" +
	"\x15UpdateCatalogResponse\x12<\n" +
	"\acatalog\x18\x01 \x01(\v2\".artifact.artifact.v1alpha.CatalogR\acatalog\"X\n" +
	"\x14DeleteCatalogRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tR\tcatalogId\"U\n" +
	"\x15DeleteCatalogResponse\x12<\n" +
	"\acatalog\x18\x01 \x01(\v2\".artifact.artifact.v1alpha.CatalogR\acatalog\"\xb9\a\n" +
	"\x04File\x12\x1e\n" +
	"\bfile_uid\x18\x01 \x01(\tB\x03\xe0A\x03R\afileUid\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x01R\x04name\x12<\n" +
	"\x04type\x18\x03 \x01(\x0e2#.artifact.artifact.v1alpha.FileTypeB\x03\xe0A\x01R\x04type\x12X\n" +
	"\x0eprocess_status\x18\x04 \x01(\x0e2,.artifact.artifact.v1alpha.FileProcessStatusB\x03\xe0A\x03R\rprocessStatus\x12,\n" +
	"\x0fprocess_outcome\x18\x05 \x01(\tB\x03\xe0A\x03R\x0eprocessOutcome\x12%\n" +
	"\vretrievable\x18\x06 \x01(\bB\x03\xe0A\x03R\vretrievable\x12\x1d\n" +
	"\acontent\x18\a \x01(\tB\x03\xe0A\x01R\acontent\x12 \n" +
	"\towner_uid\x18\b \x01(\tB\x03\xe0A\x03R\bownerUid\x12$\n" +
	"\vcreator_uid\x18\t \x01(\tB\x03\xe0A\x03R\n" +
	"creatorUid\x12$\n" +
	"\vcatalog_uid\x18\n" +
	" \x01(\tB\x03\xe0A\x03R\n" +
	"catalogUid\x12@\n" +
	"\vcreate_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12@\n" +
	"\vupdate_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime\x12@\n" +
	"\vdelete_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"deleteTime\x12\x17\n" +
	"\x04size\x18\x0e \x01(\x03B\x03\xe0A\x03R\x04size\x12&\n" +
	"\ftotal_chunks\x18\x0f \x01(\x05B\x03\xe0A\x03R\vtotalChunks\x12&\n" +
	"\ftotal_tokens\x18\x10 \x01(\x05B\x03\xe0A\x03R\vtotalTokens\x12N\n" +
	"\x11external_metadata\x18\x11 \x01(\v2\x17.google.protobuf.StructB\x03\xe0A\x01H\x00R\x10externalMetadata\x88\x01\x01\x12\"\n" +
	"\n" +
	"object_uid\x18\x12 \x01(\tB\x03\xe0A\x01R\tobjectUid\x12\x1d\n" +
	"\asummary\x18\x13 \x01(\tB\x03\xe0A\x03R\asummary\x12&\n" +
	"\fdownload_url\x18\x14 \x01(\tB\x03\xe0A\x03R\vdownloadUrlB\x14\n" +
	"\x12_external_metadata\"\x9b\x01\n" +
	"\x18UploadCatalogFileRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tB\x03\xe0A\x02R\tcatalogId\x123\n" +
	"\x04file\x18\x03 \x01(\v2\x1f.artifact.artifact.v1alpha.FileR\x04file\"P\n" +
	"\x19UploadCatalogFileResponse\x123\n" +
	"\x04file\x18\x01 \x01(\v2\x1f.artifact.artifact.v1alpha.FileR\x04file\":\n" +
	"\x18DeleteCatalogFileRequest\x12\x1e\n" +
	"\bfile_uid\x18\x01 \x01(\tB\x03\xe0A\x02R\afileUid\"6\n" +
	"\x19DeleteCatalogFileResponse\x12\x19\n" +
	"\bfile_uid\x18\x01 \x01(\tR\afileUid\">\n" +
	"\x1aProcessCatalogFilesRequest\x12 \n" +
	"\tfile_uids\x18\x01 \x03(\tB\x03\xe0A\x02R\bfileUids\"T\n" +
	"\x1bProcessCatalogFilesResponse\x125\n" +
	"\x05files\x18\x01 \x03(\v2\x1f.artifact.artifact.v1alpha.FileR\x05files\":\n" +
	"\x16ListCatalogFilesFilter\x12 \n" +
	"\tfile_uids\x18\x02 \x03(\tB\x03\xe0A\x01R\bfileUids\"\xf1\x01\n" +
	"\x17ListCatalogFilesRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tR\tcatalogId\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\x03\xe0A\x01R\tpageToken\x12N\n" +
	"\x06filter\x18\x05 \x01(\v21.artifact.artifact.v1alpha.ListCatalogFilesFilterB\x03\xe0A\x01R\x06filter\"\x80\x02\n" +
	"\x18ListCatalogFilesResponse\x125\n" +
	"\x05files\x18\x01 \x03(\v2\x1f.artifact.artifact.v1alpha.FileR\x05files\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x05R\ttotalSize\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x04 \x01(\tR\rnextPageToken\x12I\n" +
	"\x06filter\x18\x05 \x01(\v21.artifact.artifact.v1alpha.ListCatalogFilesFilterR\x06filter\"\x83\x01\n" +
	"\x15GetCatalogFileRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tB\x03\xe0A\x02R\tcatalogId\x12\x1e\n" +
	"\bfile_uid\x18\x03 \x01(\tB\x03\xe0A\x02R\afileUid\"M\n" +
	"\x16GetCatalogFileResponse\x123\n" +
	"\x04file\x18\x01 \x01(\v2\x1f.artifact.artifact.v1alpha.FileR\x04file\"\xcd\x06\n" +
	"\n" +
	"CatalogRun\x12\x15\n" +
	"\x03uid\x18\x01 \x01(\tB\x03\xe0A\x03R\x03uid\x12$\n" +
	"\vcatalog_uid\x18\x02 \x01(\tB\x03\xe0A\x03R\n" +
	"catalogUid\x12#\n" +
	"\tfile_uids\x18\x03 \x03(\tB\x06\xe0A\x03\xe0A\x01R\bfileUids\x12H\n" +
	"\x06action\x18\x04 \x01(\x0e2+.artifact.artifact.v1alpha.CatalogRunActionB\x03\xe0A\x03R\x06action\x12:\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1d.common.run.v1alpha.RunStatusB\x03\xe0A\x03R\x06status\x12:\n" +
	"\x06source\x18\x06 \x01(\x0e2\x1d.common.run.v1alpha.RunSourceB\x03\xe0A\x03R\x06source\x122\n" +
	"\x0etotal_duration\x18\a \x01(\x05B\x06\xe0A\x03\xe0A\x01H\x00R\rtotalDuration\x88\x01\x01\x12(\n" +
	"\trunner_id\x18\b \x01(\tB\x06\xe0A\x03\xe0A\x01H\x01R\brunnerId\x88\x01\x01\x12.\n" +
	"\fnamespace_id\x18\t \x01(\tB\x06\xe0A\x03\xe0A\x01H\x02R\vnamespaceId\x88\x01\x01\x12>\n" +
	"\apayload\x18\v \x01(\v2\x17.google.protobuf.StructB\x06\xe0A\x03\xe0A\x01H\x03R\apayload\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\tstartTime\x12L\n" +
	"\rcomplete_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampB\x06\xe0A\x03\xe0A\x01H\x04R\fcompleteTime\x88\x01\x01\x12!\n" +
	"\x05error\x18\x10 \x01(\tB\x06\xe0A\x03\xe0A\x01H\x05R\x05error\x88\x01\x01\x120\n" +
	"\rcredit_amount\x18\x11 \x01(\x02B\x06\xe0A\x03\xe0A\x01H\x06R\fcreditAmount\x88\x01\x01B\x11\n" +
	"\x0f_total_durationB\f\n" +
	"\n" +
	"_runner_idB\x0f\n" +
	"\r_namespace_idB\n" +
	"\n" +
	"\b_payloadB\x10\n" +
	"\x0e_complete_timeB\b\n" +
	"\x06_errorB\x10\n" +
	"\x0e_credit_amount\"\xc7\x01\n" +
	"\x17ListCatalogRunsResponse\x12M\n" +
	"\fcatalog_runs\x18\x01 \x03(\v2%.artifact.artifact.v1alpha.CatalogRunB\x03\xe0A\x03R\vcatalogRuns\x12\"\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x05B\x03\xe0A\x03R\ttotalSize\x12\x17\n" +
	"\x04page\x18\x03 \x01(\x05B\x03\xe0A\x03R\x04page\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x03R\bpageSize\"\xfe\x01\n" +
	"\x16ListCatalogRunsRequest\x12&\n" +
	"\fnamespace_id\x18\x01 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tB\x03\xe0A\x02R\tcatalogId\x12\x17\n" +
	"\x04page\x18\x03 \x01(\x05B\x03\xe0A\x01R\x04page\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12 \n" +
	"\x06filter\x18\x06 \x01(\tB\x03\xe0A\x01H\x00R\x06filter\x88\x01\x01\x12#\n" +
	"\border_by\x18\a \x01(\tB\x03\xe0A\x01H\x01R\aorderBy\x88\x01\x01B\t\n" +
	"\a_filterB\v\n" +
	"\t_order_by\"\xaf\x01\n" +
	"\x18MoveFileToCatalogRequest\x12\x1e\n" +
	"\bfile_uid\x18\x01 \x01(\tB\x03\xe0A\x02R\afileUid\x12&\n" +
	"\fnamespace_id\x18\x02 \x01(\tB\x03\xe0A\x02R\vnamespaceId\x12\"\n" +
	"\n" +
	"catalog_id\x18\x03 \x01(\tB\x03\xe0A\x02R\tcatalogId\x12'\n" +
	"\rto_catalog_id\x18\x04 \x01(\tB\x03\xe0A\x02R\vtoCatalogId\"6\n" +
	"\x19MoveFileToCatalogResponse\x12\x19\n" +
	"\bfile_uid\x18\x01 \x01(\tR\afileUid*d\n" +
	"\vCatalogType\x12\x1c\n" +
	"\x18CATALOG_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CATALOG_TYPE_PERSISTENT\x10\x01\x12\x1a\n" +
	"\x16CATALOG_TYPE_EPHEMERAL\x10\x02*\xce\x02\n" +
	"\x11FileProcessStatus\x12#\n" +
	"\x1fFILE_PROCESS_STATUS_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eFILE_PROCESS_STATUS_NOTSTARTED\x10\x01\x12\x1f\n" +
	"\x1bFILE_PROCESS_STATUS_WAITING\x10\x02\x12\"\n" +
	"\x1eFILE_PROCESS_STATUS_CONVERTING\x10\x03\x12 \n" +
	"\x1cFILE_PROCESS_STATUS_CHUNKING\x10\x04\x12!\n" +
	"\x1dFILE_PROCESS_STATUS_EMBEDDING\x10\x05\x12!\n" +
	"\x1dFILE_PROCESS_STATUS_COMPLETED\x10\x06\x12\x1e\n" +
	"\x1aFILE_PROCESS_STATUS_FAILED\x10\a\x12#\n" +
	"\x1fFILE_PROCESS_STATUS_SUMMARIZING\x10\b*\xba\x02\n" +
	"\bFileType\x12\x19\n" +
	"\x15FILE_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eFILE_TYPE_TEXT\x10\x01\x12\x11\n" +
	"\rFILE_TYPE_PDF\x10\x02\x12\x16\n" +
	"\x12FILE_TYPE_MARKDOWN\x10\x03\x12\x11\n" +
	"\rFILE_TYPE_PNG\x10\x04\x12\x12\n" +
	"\x0eFILE_TYPE_JPEG\x10\x05\x12\x11\n" +
	"\rFILE_TYPE_JPG\x10\x06\x12\x12\n" +
	"\x0eFILE_TYPE_HTML\x10\a\x12\x12\n" +
	"\x0eFILE_TYPE_DOCX\x10\b\x12\x11\n" +
	"\rFILE_TYPE_DOC\x10\t\x12\x11\n" +
	"\rFILE_TYPE_PPT\x10\n" +
	"\x12\x12\n" +
	"\x0eFILE_TYPE_PPTX\x10\v\x12\x11\n" +
	"\rFILE_TYPE_XLS\x10\f\x12\x12\n" +
	"\x0eFILE_TYPE_XLSX\x10\r\x12\x11\n" +
	"\rFILE_TYPE_CSV\x10\x0e*\x80\x02\n" +
	"\x10CatalogRunAction\x12\"\n" +
	"\x1eCATALOG_RUN_ACTION_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19CATALOG_RUN_ACTION_CREATE\x10\x01\x12\x1d\n" +
	"\x19CATALOG_RUN_ACTION_UPDATE\x10\x02\x12\x1d\n" +
	"\x19CATALOG_RUN_ACTION_DELETE\x10\x03\x12\"\n" +
	"\x1eCATALOG_RUN_ACTION_CREATE_FILE\x10\x04\x12#\n" +
	"\x1fCATALOG_RUN_ACTION_PROCESS_FILE\x10\x05\x12\"\n" +
	"\x1eCATALOG_RUN_ACTION_DELETE_FILE\x10\x06B\x81\x02\n" +
	"\x1dcom.artifact.artifact.v1alphaB\rArtifactProtoP\x01ZKgithub.com/instill-ai/protogen-go/artifact/artifact/v1alpha;artifactv1alpha\xa2\x02\x03AAX\xaa\x02\x19Artifact.Artifact.V1alpha\xca\x02\x19Artifact\\Artifact\\V1alpha\xe2\x02%Artifact\\Artifact\\V1alpha\\GPBMetadata\xea\x02\x1bArtifact::Artifact::V1alphab\x06proto3"

var (
	file_artifact_artifact_v1alpha_artifact_proto_rawDescOnce sync.Once
	file_artifact_artifact_v1alpha_artifact_proto_rawDescData []byte
)

func file_artifact_artifact_v1alpha_artifact_proto_rawDescGZIP() []byte {
	file_artifact_artifact_v1alpha_artifact_proto_rawDescOnce.Do(func() {
		file_artifact_artifact_v1alpha_artifact_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_artifact_artifact_v1alpha_artifact_proto_rawDesc), len(file_artifact_artifact_v1alpha_artifact_proto_rawDesc)))
	})
	return file_artifact_artifact_v1alpha_artifact_proto_rawDescData
}

var file_artifact_artifact_v1alpha_artifact_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_artifact_artifact_v1alpha_artifact_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_artifact_artifact_v1alpha_artifact_proto_goTypes = []any{
	(CatalogType)(0),                    // 0: artifact.artifact.v1alpha.CatalogType
	(FileProcessStatus)(0),              // 1: artifact.artifact.v1alpha.FileProcessStatus
	(FileType)(0),                       // 2: artifact.artifact.v1alpha.FileType
	(CatalogRunAction)(0),               // 3: artifact.artifact.v1alpha.CatalogRunAction
	(*LivenessRequest)(nil),             // 4: artifact.artifact.v1alpha.LivenessRequest
	(*LivenessResponse)(nil),            // 5: artifact.artifact.v1alpha.LivenessResponse
	(*ReadinessRequest)(nil),            // 6: artifact.artifact.v1alpha.ReadinessRequest
	(*ReadinessResponse)(nil),           // 7: artifact.artifact.v1alpha.ReadinessResponse
	(*RepositoryTag)(nil),               // 8: artifact.artifact.v1alpha.RepositoryTag
	(*ListRepositoryTagsRequest)(nil),   // 9: artifact.artifact.v1alpha.ListRepositoryTagsRequest
	(*ListRepositoryTagsResponse)(nil),  // 10: artifact.artifact.v1alpha.ListRepositoryTagsResponse
	(*CreateRepositoryTagRequest)(nil),  // 11: artifact.artifact.v1alpha.CreateRepositoryTagRequest
	(*CreateRepositoryTagResponse)(nil), // 12: artifact.artifact.v1alpha.CreateRepositoryTagResponse
	(*GetRepositoryTagRequest)(nil),     // 13: artifact.artifact.v1alpha.GetRepositoryTagRequest
	(*GetRepositoryTagResponse)(nil),    // 14: artifact.artifact.v1alpha.GetRepositoryTagResponse
	(*DeleteRepositoryTagRequest)(nil),  // 15: artifact.artifact.v1alpha.DeleteRepositoryTagRequest
	(*DeleteRepositoryTagResponse)(nil), // 16: artifact.artifact.v1alpha.DeleteRepositoryTagResponse
	(*ObjectURL)(nil),                   // 17: artifact.artifact.v1alpha.ObjectURL
	(*GetObjectRequest)(nil),            // 18: artifact.artifact.v1alpha.GetObjectRequest
	(*GetObjectResponse)(nil),           // 19: artifact.artifact.v1alpha.GetObjectResponse
	(*GetObjectURLRequest)(nil),         // 20: artifact.artifact.v1alpha.GetObjectURLRequest
	(*GetObjectURLResponse)(nil),        // 21: artifact.artifact.v1alpha.GetObjectURLResponse
	(*UpdateObjectRequest)(nil),         // 22: artifact.artifact.v1alpha.UpdateObjectRequest
	(*UpdateObjectResponse)(nil),        // 23: artifact.artifact.v1alpha.UpdateObjectResponse
	(*Catalog)(nil),                     // 24: artifact.artifact.v1alpha.Catalog
	(*CreateCatalogRequest)(nil),        // 25: artifact.artifact.v1alpha.CreateCatalogRequest
	(*CreateCatalogResponse)(nil),       // 26: artifact.artifact.v1alpha.CreateCatalogResponse
	(*ListCatalogsRequest)(nil),         // 27: artifact.artifact.v1alpha.ListCatalogsRequest
	(*ListCatalogsResponse)(nil),        // 28: artifact.artifact.v1alpha.ListCatalogsResponse
	(*UpdateCatalogRequest)(nil),        // 29: artifact.artifact.v1alpha.UpdateCatalogRequest
	(*UpdateCatalogResponse)(nil),       // 30: artifact.artifact.v1alpha.UpdateCatalogResponse
	(*DeleteCatalogRequest)(nil),        // 31: artifact.artifact.v1alpha.DeleteCatalogRequest
	(*DeleteCatalogResponse)(nil),       // 32: artifact.artifact.v1alpha.DeleteCatalogResponse
	(*File)(nil),                        // 33: artifact.artifact.v1alpha.File
	(*UploadCatalogFileRequest)(nil),    // 34: artifact.artifact.v1alpha.UploadCatalogFileRequest
	(*UploadCatalogFileResponse)(nil),   // 35: artifact.artifact.v1alpha.UploadCatalogFileResponse
	(*DeleteCatalogFileRequest)(nil),    // 36: artifact.artifact.v1alpha.DeleteCatalogFileRequest
	(*DeleteCatalogFileResponse)(nil),   // 37: artifact.artifact.v1alpha.DeleteCatalogFileResponse
	(*ProcessCatalogFilesRequest)(nil),  // 38: artifact.artifact.v1alpha.ProcessCatalogFilesRequest
	(*ProcessCatalogFilesResponse)(nil), // 39: artifact.artifact.v1alpha.ProcessCatalogFilesResponse
	(*ListCatalogFilesFilter)(nil),      // 40: artifact.artifact.v1alpha.ListCatalogFilesFilter
	(*ListCatalogFilesRequest)(nil),     // 41: artifact.artifact.v1alpha.ListCatalogFilesRequest
	(*ListCatalogFilesResponse)(nil),    // 42: artifact.artifact.v1alpha.ListCatalogFilesResponse
	(*GetCatalogFileRequest)(nil),       // 43: artifact.artifact.v1alpha.GetCatalogFileRequest
	(*GetCatalogFileResponse)(nil),      // 44: artifact.artifact.v1alpha.GetCatalogFileResponse
	(*CatalogRun)(nil),                  // 45: artifact.artifact.v1alpha.CatalogRun
	(*ListCatalogRunsResponse)(nil),     // 46: artifact.artifact.v1alpha.ListCatalogRunsResponse
	(*ListCatalogRunsRequest)(nil),      // 47: artifact.artifact.v1alpha.ListCatalogRunsRequest
	(*MoveFileToCatalogRequest)(nil),    // 48: artifact.artifact.v1alpha.MoveFileToCatalogRequest
	(*MoveFileToCatalogResponse)(nil),   // 49: artifact.artifact.v1alpha.MoveFileToCatalogResponse
	(*v1beta.HealthCheckRequest)(nil),   // 50: common.healthcheck.v1beta.HealthCheckRequest
	(*v1beta.HealthCheckResponse)(nil),  // 51: common.healthcheck.v1beta.HealthCheckResponse
	(*timestamppb.Timestamp)(nil),       // 52: google.protobuf.Timestamp
	(*Object)(nil),                      // 53: artifact.artifact.v1alpha.Object
	(*structpb.Struct)(nil),             // 54: google.protobuf.Struct
	(v1alpha.RunStatus)(0),              // 55: common.run.v1alpha.RunStatus
	(v1alpha.RunSource)(0),              // 56: common.run.v1alpha.RunSource
}
var file_artifact_artifact_v1alpha_artifact_proto_depIdxs = []int32{
	50, // 0: artifact.artifact.v1alpha.LivenessRequest.health_check_request:type_name -> common.healthcheck.v1beta.HealthCheckRequest
	51, // 1: artifact.artifact.v1alpha.LivenessResponse.health_check_response:type_name -> common.healthcheck.v1beta.HealthCheckResponse
	50, // 2: artifact.artifact.v1alpha.ReadinessRequest.health_check_request:type_name -> common.healthcheck.v1beta.HealthCheckRequest
	51, // 3: artifact.artifact.v1alpha.ReadinessResponse.health_check_response:type_name -> common.healthcheck.v1beta.HealthCheckResponse
	52, // 4: artifact.artifact.v1alpha.RepositoryTag.update_time:type_name -> google.protobuf.Timestamp
	8,  // 5: artifact.artifact.v1alpha.ListRepositoryTagsResponse.tags:type_name -> artifact.artifact.v1alpha.RepositoryTag
	8,  // 6: artifact.artifact.v1alpha.CreateRepositoryTagRequest.tag:type_name -> artifact.artifact.v1alpha.RepositoryTag
	8,  // 7: artifact.artifact.v1alpha.CreateRepositoryTagResponse.tag:type_name -> artifact.artifact.v1alpha.RepositoryTag
	8,  // 8: artifact.artifact.v1alpha.GetRepositoryTagResponse.tag:type_name -> artifact.artifact.v1alpha.RepositoryTag
	52, // 9: artifact.artifact.v1alpha.ObjectURL.url_expire_at:type_name -> google.protobuf.Timestamp
	52, // 10: artifact.artifact.v1alpha.ObjectURL.create_time:type_name -> google.protobuf.Timestamp
	52, // 11: artifact.artifact.v1alpha.ObjectURL.update_time:type_name -> google.protobuf.Timestamp
	52, // 12: artifact.artifact.v1alpha.ObjectURL.delete_time:type_name -> google.protobuf.Timestamp
	53, // 13: artifact.artifact.v1alpha.GetObjectResponse.object:type_name -> artifact.artifact.v1alpha.Object
	17, // 14: artifact.artifact.v1alpha.GetObjectURLResponse.object_url:type_name -> artifact.artifact.v1alpha.ObjectURL
	52, // 15: artifact.artifact.v1alpha.UpdateObjectRequest.last_modified_time:type_name -> google.protobuf.Timestamp
	53, // 16: artifact.artifact.v1alpha.UpdateObjectResponse.object:type_name -> artifact.artifact.v1alpha.Object
	0,  // 17: artifact.artifact.v1alpha.CreateCatalogRequest.type:type_name -> artifact.artifact.v1alpha.CatalogType
	24, // 18: artifact.artifact.v1alpha.CreateCatalogResponse.catalog:type_name -> artifact.artifact.v1alpha.Catalog
	24, // 19: artifact.artifact.v1alpha.ListCatalogsResponse.catalogs:type_name -> artifact.artifact.v1alpha.Catalog
	24, // 20: artifact.artifact.v1alpha.UpdateCatalogResponse.catalog:type_name -> artifact.artifact.v1alpha.Catalog
	24, // 21: artifact.artifact.v1alpha.DeleteCatalogResponse.catalog:type_name -> artifact.artifact.v1alpha.Catalog
	2,  // 22: artifact.artifact.v1alpha.File.type:type_name -> artifact.artifact.v1alpha.FileType
	1,  // 23: artifact.artifact.v1alpha.File.process_status:type_name -> artifact.artifact.v1alpha.FileProcessStatus
	52, // 24: artifact.artifact.v1alpha.File.create_time:type_name -> google.protobuf.Timestamp
	52, // 25: artifact.artifact.v1alpha.File.update_time:type_name -> google.protobuf.Timestamp
	52, // 26: artifact.artifact.v1alpha.File.delete_time:type_name -> google.protobuf.Timestamp
	54, // 27: artifact.artifact.v1alpha.File.external_metadata:type_name -> google.protobuf.Struct
	33, // 28: artifact.artifact.v1alpha.UploadCatalogFileRequest.file:type_name -> artifact.artifact.v1alpha.File
	33, // 29: artifact.artifact.v1alpha.UploadCatalogFileResponse.file:type_name -> artifact.artifact.v1alpha.File
	33, // 30: artifact.artifact.v1alpha.ProcessCatalogFilesResponse.files:type_name -> artifact.artifact.v1alpha.File
	40, // 31: artifact.artifact.v1alpha.ListCatalogFilesRequest.filter:type_name -> artifact.artifact.v1alpha.ListCatalogFilesFilter
	33, // 32: artifact.artifact.v1alpha.ListCatalogFilesResponse.files:type_name -> artifact.artifact.v1alpha.File
	40, // 33: artifact.artifact.v1alpha.ListCatalogFilesResponse.filter:type_name -> artifact.artifact.v1alpha.ListCatalogFilesFilter
	33, // 34: artifact.artifact.v1alpha.GetCatalogFileResponse.file:type_name -> artifact.artifact.v1alpha.File
	3,  // 35: artifact.artifact.v1alpha.CatalogRun.action:type_name -> artifact.artifact.v1alpha.CatalogRunAction
	55, // 36: artifact.artifact.v1alpha.CatalogRun.status:type_name -> common.run.v1alpha.RunStatus
	56, // 37: artifact.artifact.v1alpha.CatalogRun.source:type_name -> common.run.v1alpha.RunSource
	54, // 38: artifact.artifact.v1alpha.CatalogRun.payload:type_name -> google.protobuf.Struct
	52, // 39: artifact.artifact.v1alpha.CatalogRun.start_time:type_name -> google.protobuf.Timestamp
	52, // 40: artifact.artifact.v1alpha.CatalogRun.complete_time:type_name -> google.protobuf.Timestamp
	45, // 41: artifact.artifact.v1alpha.ListCatalogRunsResponse.catalog_runs:type_name -> artifact.artifact.v1alpha.CatalogRun
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_artifact_artifact_v1alpha_artifact_proto_init() }
func file_artifact_artifact_v1alpha_artifact_proto_init() {
	if File_artifact_artifact_v1alpha_artifact_proto != nil {
		return
	}
	file_artifact_artifact_v1alpha_object_proto_init()
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[0].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[2].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[5].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[13].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[16].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[18].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[29].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[41].OneofWrappers = []any{}
	file_artifact_artifact_v1alpha_artifact_proto_msgTypes[43].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_artifact_artifact_v1alpha_artifact_proto_rawDesc), len(file_artifact_artifact_v1alpha_artifact_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_artifact_artifact_v1alpha_artifact_proto_goTypes,
		DependencyIndexes: file_artifact_artifact_v1alpha_artifact_proto_depIdxs,
		EnumInfos:         file_artifact_artifact_v1alpha_artifact_proto_enumTypes,
		MessageInfos:      file_artifact_artifact_v1alpha_artifact_proto_msgTypes,
	}.Build()
	File_artifact_artifact_v1alpha_artifact_proto = out.File
	file_artifact_artifact_v1alpha_artifact_proto_goTypes = nil
	file_artifact_artifact_v1alpha_artifact_proto_depIdxs = nil
}
