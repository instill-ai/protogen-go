// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pipeline/pipeline/v1beta/common.proto

package pipelinev1beta

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Role describes the permissions a user has over a resource.
type Role int32

const (
	// Unspecified, equivalent to VIEWER.
	Role_ROLE_UNSPECIFIED Role = 0
	// Viewers can see the resource properties.
	Role_ROLE_VIEWER Role = 1
	// Executors can execute the resource (e.g. trigger a pipeline).
	Role_ROLE_EXECUTOR Role = 2
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "ROLE_UNSPECIFIED",
		1: "ROLE_VIEWER",
		2: "ROLE_EXECUTOR",
	}
	Role_value = map[string]int32{
		"ROLE_UNSPECIFIED": 0,
		"ROLE_VIEWER":      1,
		"ROLE_EXECUTOR":    2,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_pipeline_pipeline_v1beta_common_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_pipeline_pipeline_v1beta_common_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{0}
}

// ComponentType defines the component type based on its task features.
type ComponentType int32

const (
	// Unspecified.
	ComponentType_COMPONENT_TYPE_UNSPECIFIED ComponentType = 0
	// Connect with an AI model.
	ComponentType_COMPONENT_TYPE_AI ComponentType = 1
	// Connect with a remote data source.
	ComponentType_COMPONENT_TYPE_DATA ComponentType = 2
	// Manipulate data.
	ComponentType_COMPONENT_TYPE_OPERATOR ComponentType = 4
	// Connect with an external application.
	ComponentType_COMPONENT_TYPE_APPLICATION ComponentType = 5
	// Generic.
	ComponentType_COMPONENT_TYPE_GENERIC ComponentType = 6
)

// Enum value maps for ComponentType.
var (
	ComponentType_name = map[int32]string{
		0: "COMPONENT_TYPE_UNSPECIFIED",
		1: "COMPONENT_TYPE_AI",
		2: "COMPONENT_TYPE_DATA",
		4: "COMPONENT_TYPE_OPERATOR",
		5: "COMPONENT_TYPE_APPLICATION",
		6: "COMPONENT_TYPE_GENERIC",
	}
	ComponentType_value = map[string]int32{
		"COMPONENT_TYPE_UNSPECIFIED": 0,
		"COMPONENT_TYPE_AI":          1,
		"COMPONENT_TYPE_DATA":        2,
		"COMPONENT_TYPE_OPERATOR":    4,
		"COMPONENT_TYPE_APPLICATION": 5,
		"COMPONENT_TYPE_GENERIC":     6,
	}
)

func (x ComponentType) Enum() *ComponentType {
	p := new(ComponentType)
	*p = x
	return p
}

func (x ComponentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentType) Descriptor() protoreflect.EnumDescriptor {
	return file_pipeline_pipeline_v1beta_common_proto_enumTypes[1].Descriptor()
}

func (ComponentType) Type() protoreflect.EnumType {
	return &file_pipeline_pipeline_v1beta_common_proto_enumTypes[1]
}

func (x ComponentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentType.Descriptor instead.
func (ComponentType) EnumDescriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{1}
}

// View defines how a resource is presented. Most resources can share this view
// definition, the particular meaning of each value should be defined in the
// resource itself. Certain resources might have their own View definition if
// they need to implement more than 2 (basic / full) views.
type View int32

const (
	// Unspecified, equivalent to BASIC.
	View_VIEW_UNSPECIFIED View = 0
	// Default view.
	View_VIEW_BASIC View = 1
	// Full representation.
	View_VIEW_FULL View = 2
)

// Enum value maps for View.
var (
	View_name = map[int32]string{
		0: "VIEW_UNSPECIFIED",
		1: "VIEW_BASIC",
		2: "VIEW_FULL",
	}
	View_value = map[string]int32{
		"VIEW_UNSPECIFIED": 0,
		"VIEW_BASIC":       1,
		"VIEW_FULL":        2,
	}
)

func (x View) Enum() *View {
	p := new(View)
	*p = x
	return p
}

func (x View) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (View) Descriptor() protoreflect.EnumDescriptor {
	return file_pipeline_pipeline_v1beta_common_proto_enumTypes[2].Descriptor()
}

func (View) Type() protoreflect.EnumType {
	return &file_pipeline_pipeline_v1beta_common_proto_enumTypes[2]
}

func (x View) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use View.Descriptor instead.
func (View) EnumDescriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{2}
}

// Name defines the availability of a resource name.
type CheckNameResponse_Name int32

const (
	// Unspecified.
	CheckNameResponse_NAME_UNSPECIFIED CheckNameResponse_Name = 0
	// Available.
	CheckNameResponse_NAME_AVAILABLE CheckNameResponse_Name = 1
	// Unavailable.
	CheckNameResponse_NAME_UNAVAILABLE CheckNameResponse_Name = 2
)

// Enum value maps for CheckNameResponse_Name.
var (
	CheckNameResponse_Name_name = map[int32]string{
		0: "NAME_UNSPECIFIED",
		1: "NAME_AVAILABLE",
		2: "NAME_UNAVAILABLE",
	}
	CheckNameResponse_Name_value = map[string]int32{
		"NAME_UNSPECIFIED": 0,
		"NAME_AVAILABLE":   1,
		"NAME_UNAVAILABLE": 2,
	}
)

func (x CheckNameResponse_Name) Enum() *CheckNameResponse_Name {
	p := new(CheckNameResponse_Name)
	*p = x
	return p
}

func (x CheckNameResponse_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckNameResponse_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_pipeline_pipeline_v1beta_common_proto_enumTypes[3].Descriptor()
}

func (CheckNameResponse_Name) Type() protoreflect.EnumType {
	return &file_pipeline_pipeline_v1beta_common_proto_enumTypes[3]
}

func (x CheckNameResponse_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckNameResponse_Name.Descriptor instead.
func (CheckNameResponse_Name) EnumDescriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{3, 0}
}

// Sharing contains the information to share a resource with other users.
//
// For more information, see [Share Pipelines](https://instill-ai.dev/docs/pipeline/share-pipeline).
type Sharing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines sharing rules for a set of user resource names.
	//
	// Each key in this object should contain a pattern that can be matched
	// against user names.
	//
	// Each value is a user sharing configuration.
	//
	// **NOTE**: For now, the only accepted key is `*/*`.
	Users map[string]*Sharing_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Defines the configuration to share a resource via link.
	ShareCode     *Sharing_ShareCode `protobuf:"bytes,2,opt,name=share_code,json=shareCode,proto3" json:"share_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sharing) Reset() {
	*x = Sharing{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sharing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sharing) ProtoMessage() {}

func (x *Sharing) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sharing.ProtoReflect.Descriptor instead.
func (*Sharing) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{0}
}

func (x *Sharing) GetUsers() map[string]*Sharing_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Sharing) GetShareCode() *Sharing_ShareCode {
	if x != nil {
		return x.ShareCode
	}
	return nil
}

// Permission defines how a pipeline can be used.
type Permission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines whether the pipeline can be modified.
	CanEdit bool `protobuf:"varint,1,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	// Defines whether the pipeline can be executed.
	CanTrigger bool `protobuf:"varint,2,opt,name=can_trigger,json=canTrigger,proto3" json:"can_trigger,omitempty"`
	// Defines whether the pipeline can be released.
	CanRelease    bool `protobuf:"varint,3,opt,name=can_release,json=canRelease,proto3" json:"can_release,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{1}
}

func (x *Permission) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *Permission) GetCanTrigger() bool {
	if x != nil {
		return x.CanTrigger
	}
	return false
}

func (x *Permission) GetCanRelease() bool {
	if x != nil {
		return x.CanRelease
	}
	return false
}

// CheckNameRequest represents a request to verify if a name is
// available.
type CheckNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the resource to be checked. For the moment, only pipeline and
	// connector names can be checked. The following formats are accepted:
	// - `users/{user.id}/pipelines/{pipeline.id}`
	// - `users/{user.id}/connectors/{connector.id}`
	// - `organizations/{organization.id}/pipelines/{pipeline.id}`
	// - `organizations/{organization.id}/connectors/{connector.id}`
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckNameRequest) Reset() {
	*x = CheckNameRequest{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNameRequest) ProtoMessage() {}

func (x *CheckNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNameRequest.ProtoReflect.Descriptor instead.
func (*CheckNameRequest) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{2}
}

func (x *CheckNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// CheckNameResponse contains the availability of a resource name.
type CheckNameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The availability of the requested name.
	Availability  CheckNameResponse_Name `protobuf:"varint,1,opt,name=availability,proto3,enum=pipeline.pipeline.v1beta.CheckNameResponse_Name" json:"availability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckNameResponse) Reset() {
	*x = CheckNameResponse{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNameResponse) ProtoMessage() {}

func (x *CheckNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNameResponse.ProtoReflect.Descriptor instead.
func (*CheckNameResponse) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{3}
}

func (x *CheckNameResponse) GetAvailability() CheckNameResponse_Name {
	if x != nil {
		return x.Availability
	}
	return CheckNameResponse_NAME_UNSPECIFIED
}

// ComponentTask contains information about a task that a component can
// perform.
type ComponentTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The task name, e.g. `TASK_TEXT_GENERATION`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Title is the task name in a human-friendly format.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Description contains information about the task.
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentTask) Reset() {
	*x = ComponentTask{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentTask) ProtoMessage() {}

func (x *ComponentTask) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentTask.ProtoReflect.Descriptor instead.
func (*ComponentTask) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{4}
}

func (x *ComponentTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentTask) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComponentTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// ComponentEvent contains information about an event that a component can
// produce.
type ComponentEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The event name, e.g. `EVENT_NEW`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Title is the event name in a human-friendly format.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Description contains information about the event.
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentEvent) Reset() {
	*x = ComponentEvent{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentEvent) ProtoMessage() {}

func (x *ComponentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentEvent.ProtoReflect.Descriptor instead.
func (*ComponentEvent) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{5}
}

func (x *ComponentEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComponentEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the sharing configuration with a given user.
type Sharing_User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines whether the sharing option with this user is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Defines the role the user will have over the resource.
	Role          Role `protobuf:"varint,4,opt,name=role,proto3,enum=pipeline.pipeline.v1beta.Role" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sharing_User) Reset() {
	*x = Sharing_User{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sharing_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sharing_User) ProtoMessage() {}

func (x *Sharing_User) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sharing_User.ProtoReflect.Descriptor instead.
func (*Sharing_User) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Sharing_User) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Sharing_User) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNSPECIFIED
}

// ShareCode describes a sharing configuration through a link.
type Sharing_ShareCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines which users will be able to access the resource through the
	// code. This is a pattern that will be checked against user names.
	//
	// For now, the only accepted value is `*/*`.
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// The public URL that allows users to access the resource.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Defines whether the sharing option via link is enabled.
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Defines the role users will have over the resource.
	Role          Role `protobuf:"varint,4,opt,name=role,proto3,enum=pipeline.pipeline.v1beta.Role" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sharing_ShareCode) Reset() {
	*x = Sharing_ShareCode{}
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sharing_ShareCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sharing_ShareCode) ProtoMessage() {}

func (x *Sharing_ShareCode) ProtoReflect() protoreflect.Message {
	mi := &file_pipeline_pipeline_v1beta_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sharing_ShareCode.ProtoReflect.Descriptor instead.
func (*Sharing_ShareCode) Descriptor() ([]byte, []int) {
	return file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Sharing_ShareCode) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Sharing_ShareCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Sharing_ShareCode) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Sharing_ShareCode) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNSPECIFIED
}

var File_pipeline_pipeline_v1beta_common_proto protoreflect.FileDescriptor

const file_pipeline_pipeline_v1beta_common_proto_rawDesc = "" +
	"\n" +
	"%pipeline/pipeline/v1beta/common.proto\x12\x18pipeline.pipeline.v1beta\x1a\x1fgoogle/api/field_behavior.proto\"\xd5\x03\n" +
	"\aSharing\x12B\n" +
	"\x05users\x18\x01 \x03(\v2,.pipeline.pipeline.v1beta.Sharing.UsersEntryR\x05users\x12J\n" +
	"\n" +
	"share_code\x18\x02 \x01(\v2+.pipeline.pipeline.v1beta.Sharing.ShareCodeR\tshareCode\x1aT\n" +
	"\x04User\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x122\n" +
	"\x04role\x18\x04 \x01(\x0e2\x1e.pipeline.pipeline.v1beta.RoleR\x04role\x1a\x81\x01\n" +
	"\tShareCode\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x122\n" +
	"\x04role\x18\x04 \x01(\x0e2\x1e.pipeline.pipeline.v1beta.RoleR\x04role\x1a`\n" +
	"\n" +
	"UsersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.pipeline.pipeline.v1beta.Sharing.UserR\x05value:\x028\x01\"i\n" +
	"\n" +
	"Permission\x12\x19\n" +
	"\bcan_edit\x18\x01 \x01(\bR\acanEdit\x12\x1f\n" +
	"\vcan_trigger\x18\x02 \x01(\bR\n" +
	"canTrigger\x12\x1f\n" +
	"\vcan_release\x18\x03 \x01(\bR\n" +
	"canRelease\"+\n" +
	"\x10CheckNameRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\"\xb1\x01\n" +
	"\x11CheckNameResponse\x12T\n" +
	"\favailability\x18\x01 \x01(\x0e20.pipeline.pipeline.v1beta.CheckNameResponse.NameR\favailability\"F\n" +
	"\x04Name\x12\x14\n" +
	"\x10NAME_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eNAME_AVAILABLE\x10\x01\x12\x14\n" +
	"\x10NAME_UNAVAILABLE\x10\x02\"j\n" +
	"\rComponentTask\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x03R\x04name\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tB\x03\xe0A\x03R\x05title\x12%\n" +
	"\vdescription\x18\x03 \x01(\tB\x03\xe0A\x03R\vdescription\"k\n" +
	"\x0eComponentEvent\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x03R\x04name\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tB\x03\xe0A\x03R\x05title\x12%\n" +
	"\vdescription\x18\x03 \x01(\tB\x03\xe0A\x03R\vdescription*@\n" +
	"\x04Role\x12\x14\n" +
	"\x10ROLE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vROLE_VIEWER\x10\x01\x12\x11\n" +
	"\rROLE_EXECUTOR\x10\x02*\xbe\x01\n" +
	"\rComponentType\x12\x1e\n" +
	"\x1aCOMPONENT_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11COMPONENT_TYPE_AI\x10\x01\x12\x17\n" +
	"\x13COMPONENT_TYPE_DATA\x10\x02\x12\x1b\n" +
	"\x17COMPONENT_TYPE_OPERATOR\x10\x04\x12\x1e\n" +
	"\x1aCOMPONENT_TYPE_APPLICATION\x10\x05\x12\x1a\n" +
	"\x16COMPONENT_TYPE_GENERIC\x10\x06\"\x04\b\x03\x10\x03*;\n" +
	"\x04View\x12\x14\n" +
	"\x10VIEW_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"VIEW_BASIC\x10\x01\x12\r\n" +
	"\tVIEW_FULL\x10\x02B\xf8\x01\n" +
	"\x1ccom.pipeline.pipeline.v1betaB\vCommonProtoP\x01ZIgithub.com/instill-ai/protogen-go/pipeline/pipeline/v1beta;pipelinev1beta\xa2\x02\x03PPX\xaa\x02\x18Pipeline.Pipeline.V1beta\xca\x02\x18Pipeline\\Pipeline\\V1beta\xe2\x02$Pipeline\\Pipeline\\V1beta\\GPBMetadata\xea\x02\x1aPipeline::Pipeline::V1betab\x06proto3"

var (
	file_pipeline_pipeline_v1beta_common_proto_rawDescOnce sync.Once
	file_pipeline_pipeline_v1beta_common_proto_rawDescData []byte
)

func file_pipeline_pipeline_v1beta_common_proto_rawDescGZIP() []byte {
	file_pipeline_pipeline_v1beta_common_proto_rawDescOnce.Do(func() {
		file_pipeline_pipeline_v1beta_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pipeline_pipeline_v1beta_common_proto_rawDesc), len(file_pipeline_pipeline_v1beta_common_proto_rawDesc)))
	})
	return file_pipeline_pipeline_v1beta_common_proto_rawDescData
}

var file_pipeline_pipeline_v1beta_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pipeline_pipeline_v1beta_common_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pipeline_pipeline_v1beta_common_proto_goTypes = []any{
	(Role)(0),                   // 0: pipeline.pipeline.v1beta.Role
	(ComponentType)(0),          // 1: pipeline.pipeline.v1beta.ComponentType
	(View)(0),                   // 2: pipeline.pipeline.v1beta.View
	(CheckNameResponse_Name)(0), // 3: pipeline.pipeline.v1beta.CheckNameResponse.Name
	(*Sharing)(nil),             // 4: pipeline.pipeline.v1beta.Sharing
	(*Permission)(nil),          // 5: pipeline.pipeline.v1beta.Permission
	(*CheckNameRequest)(nil),    // 6: pipeline.pipeline.v1beta.CheckNameRequest
	(*CheckNameResponse)(nil),   // 7: pipeline.pipeline.v1beta.CheckNameResponse
	(*ComponentTask)(nil),       // 8: pipeline.pipeline.v1beta.ComponentTask
	(*ComponentEvent)(nil),      // 9: pipeline.pipeline.v1beta.ComponentEvent
	(*Sharing_User)(nil),        // 10: pipeline.pipeline.v1beta.Sharing.User
	(*Sharing_ShareCode)(nil),   // 11: pipeline.pipeline.v1beta.Sharing.ShareCode
	nil,                         // 12: pipeline.pipeline.v1beta.Sharing.UsersEntry
}
var file_pipeline_pipeline_v1beta_common_proto_depIdxs = []int32{
	12, // 0: pipeline.pipeline.v1beta.Sharing.users:type_name -> pipeline.pipeline.v1beta.Sharing.UsersEntry
	11, // 1: pipeline.pipeline.v1beta.Sharing.share_code:type_name -> pipeline.pipeline.v1beta.Sharing.ShareCode
	3,  // 2: pipeline.pipeline.v1beta.CheckNameResponse.availability:type_name -> pipeline.pipeline.v1beta.CheckNameResponse.Name
	0,  // 3: pipeline.pipeline.v1beta.Sharing.User.role:type_name -> pipeline.pipeline.v1beta.Role
	0,  // 4: pipeline.pipeline.v1beta.Sharing.ShareCode.role:type_name -> pipeline.pipeline.v1beta.Role
	10, // 5: pipeline.pipeline.v1beta.Sharing.UsersEntry.value:type_name -> pipeline.pipeline.v1beta.Sharing.User
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pipeline_pipeline_v1beta_common_proto_init() }
func file_pipeline_pipeline_v1beta_common_proto_init() {
	if File_pipeline_pipeline_v1beta_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pipeline_pipeline_v1beta_common_proto_rawDesc), len(file_pipeline_pipeline_v1beta_common_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pipeline_pipeline_v1beta_common_proto_goTypes,
		DependencyIndexes: file_pipeline_pipeline_v1beta_common_proto_depIdxs,
		EnumInfos:         file_pipeline_pipeline_v1beta_common_proto_enumTypes,
		MessageInfos:      file_pipeline_pipeline_v1beta_common_proto_msgTypes,
	}.Build()
	File_pipeline_pipeline_v1beta_common_proto = out.File
	file_pipeline_pipeline_v1beta_common_proto_goTypes = nil
	file_pipeline_pipeline_v1beta_common_proto_depIdxs = nil
}
