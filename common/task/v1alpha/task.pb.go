// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: common/task/v1alpha/task.proto

package taskv1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Task enumerates the AI task that a model is designed to solve.
type Task int32

const (
	// Unspecified.
	Task_TASK_UNSPECIFIED Task = 0
	// Image Classification - classify images into predefined categories.
	Task_TASK_CLASSIFICATION Task = 1
	// Object Detection - detect and localize multiple objects in images.
	Task_TASK_DETECTION Task = 2
	// Keypoint Detection - detect and localize multiple keypoints of objects in images.
	Task_TASK_KEYPOINT Task = 3
	// OCR (Optical Character Recognition) - detect and recognize text in images.
	Task_TASK_OCR Task = 4
	// Instance Segmentation - detect, localize and delineate multiple objects in images.
	Task_TASK_INSTANCE_SEGMENTATION Task = 5
	// Semantic Segmentation - classify image pixels into predefined categories.
	Task_TASK_SEMANTIC_SEGMENTATION Task = 6
	// Text to Image - generate images from input text prompts.
	Task_TASK_TEXT_TO_IMAGE Task = 7
	// Image to Image - generate an image from another image.
	Task_TASK_IMAGE_TO_IMAGE Task = 11
	// Embedding - generate an embedding (a representation as coordinates) from a multimodal input.
	Task_TASK_EMBEDDING Task = 12
	// Speech Recognition - transcribe the words in an audio input.
	Task_TASK_SPEECH_RECOGNITION Task = 13
	// Conversational Text Generation - generate text as responses to a dialog input.
	Task_TASK_CHAT Task = 14
	// Completion Text Generation - generate text following the input prompt.
	Task_TASK_COMPLETION Task = 15
	// Custom - custom task type for free form input/output.
	Task_TASK_CUSTOM Task = 16
)

// Enum value maps for Task.
var (
	Task_name = map[int32]string{
		0:  "TASK_UNSPECIFIED",
		1:  "TASK_CLASSIFICATION",
		2:  "TASK_DETECTION",
		3:  "TASK_KEYPOINT",
		4:  "TASK_OCR",
		5:  "TASK_INSTANCE_SEGMENTATION",
		6:  "TASK_SEMANTIC_SEGMENTATION",
		7:  "TASK_TEXT_TO_IMAGE",
		11: "TASK_IMAGE_TO_IMAGE",
		12: "TASK_EMBEDDING",
		13: "TASK_SPEECH_RECOGNITION",
		14: "TASK_CHAT",
		15: "TASK_COMPLETION",
		16: "TASK_CUSTOM",
	}
	Task_value = map[string]int32{
		"TASK_UNSPECIFIED":           0,
		"TASK_CLASSIFICATION":        1,
		"TASK_DETECTION":             2,
		"TASK_KEYPOINT":              3,
		"TASK_OCR":                   4,
		"TASK_INSTANCE_SEGMENTATION": 5,
		"TASK_SEMANTIC_SEGMENTATION": 6,
		"TASK_TEXT_TO_IMAGE":         7,
		"TASK_IMAGE_TO_IMAGE":        11,
		"TASK_EMBEDDING":             12,
		"TASK_SPEECH_RECOGNITION":    13,
		"TASK_CHAT":                  14,
		"TASK_COMPLETION":            15,
		"TASK_CUSTOM":                16,
	}
)

func (x Task) Enum() *Task {
	p := new(Task)
	*p = x
	return p
}

func (x Task) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task) Descriptor() protoreflect.EnumDescriptor {
	return file_common_task_v1alpha_task_proto_enumTypes[0].Descriptor()
}

func (Task) Type() protoreflect.EnumType {
	return &file_common_task_v1alpha_task_proto_enumTypes[0]
}

func (x Task) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task.Descriptor instead.
func (Task) EnumDescriptor() ([]byte, []int) {
	return file_common_task_v1alpha_task_proto_rawDescGZIP(), []int{0}
}

var File_common_task_v1alpha_task_proto protoreflect.FileDescriptor

const file_common_task_v1alpha_task_proto_rawDesc = "" +
	"\n" +
	"\x1ecommon/task/v1alpha/task.proto\x12\x13common.task.v1alpha*\xd3\x02\n" +
	"\x04Task\x12\x14\n" +
	"\x10TASK_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_CLASSIFICATION\x10\x01\x12\x12\n" +
	"\x0eTASK_DETECTION\x10\x02\x12\x11\n" +
	"\rTASK_KEYPOINT\x10\x03\x12\f\n" +
	"\bTASK_OCR\x10\x04\x12\x1e\n" +
	"\x1aTASK_INSTANCE_SEGMENTATION\x10\x05\x12\x1e\n" +
	"\x1aTASK_SEMANTIC_SEGMENTATION\x10\x06\x12\x16\n" +
	"\x12TASK_TEXT_TO_IMAGE\x10\a\x12\x17\n" +
	"\x13TASK_IMAGE_TO_IMAGE\x10\v\x12\x12\n" +
	"\x0eTASK_EMBEDDING\x10\f\x12\x1b\n" +
	"\x17TASK_SPEECH_RECOGNITION\x10\r\x12\r\n" +
	"\tTASK_CHAT\x10\x0e\x12\x13\n" +
	"\x0fTASK_COMPLETION\x10\x0f\x12\x0f\n" +
	"\vTASK_CUSTOM\x10\x10\"\x04\b\b\x10\b\"\x04\b\t\x10\t\"\x04\b\n" +
	"\x10\n" +
	"B\xd5\x01\n" +
	"\x17com.common.task.v1alphaB\tTaskProtoP\x01ZAgithub.com/instill-ai/protogen-go/common/task/v1alpha;taskv1alpha\xa2\x02\x03CTX\xaa\x02\x13Common.Task.V1alpha\xca\x02\x13Common\\Task\\V1alpha\xe2\x02\x1fCommon\\Task\\V1alpha\\GPBMetadata\xea\x02\x15Common::Task::V1alphab\x06proto3"

var (
	file_common_task_v1alpha_task_proto_rawDescOnce sync.Once
	file_common_task_v1alpha_task_proto_rawDescData []byte
)

func file_common_task_v1alpha_task_proto_rawDescGZIP() []byte {
	file_common_task_v1alpha_task_proto_rawDescOnce.Do(func() {
		file_common_task_v1alpha_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_task_v1alpha_task_proto_rawDesc), len(file_common_task_v1alpha_task_proto_rawDesc)))
	})
	return file_common_task_v1alpha_task_proto_rawDescData
}

var file_common_task_v1alpha_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_task_v1alpha_task_proto_goTypes = []any{
	(Task)(0), // 0: common.task.v1alpha.Task
}
var file_common_task_v1alpha_task_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_task_v1alpha_task_proto_init() }
func file_common_task_v1alpha_task_proto_init() {
	if File_common_task_v1alpha_task_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_task_v1alpha_task_proto_rawDesc), len(file_common_task_v1alpha_task_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_task_v1alpha_task_proto_goTypes,
		DependencyIndexes: file_common_task_v1alpha_task_proto_depIdxs,
		EnumInfos:         file_common_task_v1alpha_task_proto_enumTypes,
	}.Build()
	File_common_task_v1alpha_task_proto = out.File
	file_common_task_v1alpha_task_proto_goTypes = nil
	file_common_task_v1alpha_task_proto_depIdxs = nil
}
